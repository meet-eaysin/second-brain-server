{
  "info": {
    "name": "Second Brain API - Complete Collection",
    "description": "Comprehensive API collection for the Second Brain system with all endpoints including authentication, users, dashboard, databases, tasks, notes, calendar, system features, email, and file management",
    "version": "2.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000/api/v1",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "databaseId",
      "value": "",
      "type": "string"
    },
    {
      "key": "taskId",
      "value": "",
      "type": "string"
    },
    {
      "key": "noteId",
      "value": "",
      "type": "string"
    },
    {
      "key": "workspaceId",
      "value": "",
      "type": "string"
    },
    {
      "key": "propertyId",
      "value": "",
      "type": "string"
    },
    {
      "key": "viewId",
      "value": "",
      "type": "string"
    },
    {
      "key": "relationId",
      "value": "",
      "type": "string"
    },
    {
      "key": "targetDatabaseId",
      "value": "",
      "type": "string"
    },
    {
      "key": "targetRecordId",
      "value": "",
      "type": "string"
    },
    {
      "key": "relationPropertyId",
      "value": "",
      "type": "string"
    },
    {
      "key": "rollupPropertyId",
      "value": "",
      "type": "string"
    },
    {
      "key": "habitId",
      "value": "",
      "type": "string"
    },
    {
      "key": "entryId",
      "value": "",
      "type": "string"
    },
    {
      "key": "goalId",
      "value": "",
      "type": "string"
    },
    {
      "key": "targetRecordId",
      "value": "",
      "type": "string"
    },
    {
      "key": "templateId",
      "value": "",
      "type": "string"
    },
    {
      "key": "formulaId",
      "value": "",
      "type": "string"
    },
    {
      "key": "moduleId",
      "value": "",
      "type": "string"
    },
    {
      "key": "calendarId",
      "value": "",
      "type": "string"
    },
    {
      "key": "eventId",
      "value": "",
      "type": "string"
    },
    {
      "key": "fileId",
      "value": "",
      "type": "string"
    },
    {
      "key": "notificationId",
      "value": "",
      "type": "string"
    },
    {
      "key": "projectId",
      "value": "",
      "type": "string"
    },
    {
      "key": "personId",
      "value": "",
      "type": "string"
    },
    {
      "key": "resourceId",
      "value": "",
      "type": "string"
    },
    {
      "key": "transactionId",
      "value": "",
      "type": "string"
    },
    {
      "key": "paraItemId",
      "value": "",
      "type": "string"
    },
    {
      "key": "moodEntryId",
      "value": "",
      "type": "string"
    },
    {
      "key": "contentId",
      "value": "",
      "type": "string"
    },
    {
      "key": "projectId",
      "value": "",
      "type": "string"
    },
    {
      "key": "personId",
      "value": "",
      "type": "string"
    },
    {
      "key": "transactionId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "description": "User authentication and authorization endpoints",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePassword123!\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"username\": \"johndoe\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            },
            "description": "Register a new user account"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePassword123!\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"username\": \"johndoe\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/auth/register",
                  "host": ["{{baseUrl}}"],
                  "path": ["auth", "register"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"User registered successfully\",\n  \"data\": {\n    \"user\": {\n      \"id\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n      \"email\": \"john.doe@example.com\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"username\": \"johndoe\",\n      \"isEmailVerified\": false,\n      \"createdAt\": \"2023-09-06T10:30:00.000Z\",\n      \"updatedAt\": \"2023-09-06T10:30:00.000Z\"\n    },\n    \"tokens\": {\n      \"access\": {\n        \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n        \"expires\": \"2023-09-06T11:30:00.000Z\"\n      },\n      \"refresh\": {\n        \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n        \"expires\": \"2023-10-06T10:30:00.000Z\"\n      }\n    }\n  }\n}"
            }
          ]
        },
        {
          "name": "Login User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePassword123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            },
            "description": "Login with email and password"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePassword123!\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/auth/login",
                  "host": ["{{baseUrl}}"],
                  "path": ["auth", "login"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Login successful\",\n  \"data\": {\n    \"user\": {\n      \"id\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n      \"email\": \"john.doe@example.com\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"username\": \"johndoe\",\n      \"isEmailVerified\": true,\n      \"createdAt\": \"2023-09-06T10:30:00.000Z\",\n      \"updatedAt\": \"2023-09-06T10:30:00.000Z\"\n    },\n    \"tokens\": {\n      \"access\": {\n        \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n        \"expires\": \"2023-09-06T11:30:00.000Z\"\n      },\n      \"refresh\": {\n        \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n        \"expires\": \"2023-10-06T10:30:00.000Z\"\n      }\n    }\n  }\n}"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('authToken', response.data.tokens.access.token);",
                  "    pm.collectionVariables.set('userId', response.data.user.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/refresh-tokens",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "refresh-tokens"]
            },
            "description": "Refresh access token using refresh token"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/auth/refresh-tokens",
                  "host": ["{{baseUrl}}"],
                  "path": ["auth", "refresh-tokens"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Tokens refreshed successfully\",\n  \"data\": {\n    \"access\": {\n      \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n      \"expires\": \"2023-09-06T12:30:00.000Z\"\n    },\n    \"refresh\": {\n      \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n      \"expires\": \"2023-10-06T11:30:00.000Z\"\n    }\n  }\n}"
            }
          ]
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "logout"]
            },
            "description": "Logout user and invalidate tokens"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/auth/logout",
                  "host": ["{{baseUrl}}"],
                  "path": ["auth", "logout"]
                }
              },
              "status": "No Content",
              "code": 204,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Forgot Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/forgot-password",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "forgot-password"]
            },
            "description": "Send password reset email"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"john.doe@example.com\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/auth/forgot-password",
                  "host": ["{{baseUrl}}"],
                  "path": ["auth", "forgot-password"]
                }
              },
              "status": "No Content",
              "code": 204,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Reset Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"reset-token-here\",\n  \"password\": \"NewSecurePassword123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/reset-password",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "reset-password"]
            },
            "description": "Reset password using reset token"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"token\": \"reset-token-here\",\n  \"password\": \"NewSecurePassword123!\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/auth/reset-password",
                  "host": ["{{baseUrl}}"],
                  "path": ["auth", "reset-password"]
                }
              },
              "status": "No Content",
              "code": 204,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Send Email Verification",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/send-verification-email",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "send-verification-email"]
            },
            "description": "Send email verification link"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/auth/send-verification-email",
                  "host": ["{{baseUrl}}"],
                  "path": ["auth", "send-verification-email"]
                }
              },
              "status": "No Content",
              "code": 204,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Verify Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"verification-token-here\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/verify-email",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "verify-email"]
            },
            "description": "Verify email using verification token"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"token\": \"verification-token-here\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/auth/verify-email",
                  "host": ["{{baseUrl}}"],
                  "path": ["auth", "verify-email"]
                }
              },
              "status": "No Content",
              "code": 204,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Change Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"currentPassword\": \"CurrentPassword123!\",\n  \"newPassword\": \"NewPassword123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/change-password",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "change-password"]
            },
            "description": "Change user password (requires authentication)"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"currentPassword\": \"CurrentPassword123!\",\n  \"newPassword\": \"NewPassword123!\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/auth/change-password",
                  "host": ["{{baseUrl}}"],
                  "path": ["auth", "change-password"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Password changed successfully\",\n  \"data\": null\n}"
            }
          ]
        },
        {
          "name": "Get Profile",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "me"]
            },
            "description": "Get current user profile"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/auth/me",
                  "host": ["{{baseUrl}}"],
                  "path": ["auth", "me"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Profile retrieved successfully\",\n  \"data\": {\n    \"userId\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n    \"email\": \"john.doe@example.com\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"username\": \"johndoe\",\n    \"role\": \"user\",\n    \"isActive\": true,\n    \"isEmailVerified\": true,\n    \"profilePicture\": null,\n    \"createdAt\": \"2023-09-06T10:30:00.000Z\",\n    \"updatedAt\": \"2023-09-06T10:30:00.000Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Logout All Devices",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/logout-all",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "logout-all"]
            },
            "description": "Logout from all devices"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/auth/logout-all",
                  "host": ["{{baseUrl}}"],
                  "path": ["auth", "logout-all"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Logged out from all devices successfully\",\n  \"data\": null\n}"
            }
          ]
        },
        {
          "name": "Google OAuth Login",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/google",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "google"]
            },
            "description": "Initiate Google OAuth login (redirects to Google)"
          },
          "response": [
            {
              "name": "Redirect Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/auth/google",
                  "host": ["{{baseUrl}}"],
                  "path": ["auth", "google"]
                }
              },
              "status": "Found",
              "code": 302,
              "_postman_previewlanguage": "html",
              "header": [
                {
                  "key": "Location",
                  "value": "https://accounts.google.com/oauth/authorize?..."
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        }
      ]
    },
    {
      "name": "Dashboard",
      "description": "Dashboard overview and statistics endpoints",
      "item": [
        {
          "name": "Get Dashboard Overview",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/dashboard?period=week&includeActivity=true&includeStats=true&activityLimit=10",
              "host": ["{{baseUrl}}"],
              "path": ["dashboard"],
              "query": [
                {
                  "key": "period",
                  "value": "week",
                  "description": "Time period for statistics (day, week, month, year)"
                },
                {
                  "key": "includeActivity",
                  "value": "true",
                  "description": "Include recent activity feed"
                },
                {
                  "key": "includeStats",
                  "value": "true",
                  "description": "Include quick statistics"
                },
                {
                  "key": "activityLimit",
                  "value": "10",
                  "description": "Number of activity items to return"
                }
              ]
            },
            "description": "Get comprehensive dashboard overview with statistics and activity"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/dashboard?period=week",
                  "host": ["{{baseUrl}}"],
                  "path": ["dashboard"],
                  "query": [
                    {
                      "key": "period",
                      "value": "week"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Dashboard data retrieved successfully\",\n  \"data\": {\n    \"quickStats\": {\n      \"totalTasks\": 45,\n      \"completedTasks\": 32,\n      \"overdueTasks\": 3,\n      \"totalNotes\": 128,\n      \"totalGoals\": 8,\n      \"activeHabits\": 12,\n      \"totalProjects\": 6,\n      \"activeProjects\": 4,\n      \"thisWeekExpenses\": 450.75,\n      \"thisWeekIncome\": 2500.00,\n      \"journalEntriesThisMonth\": 18,\n      \"averageMoodThisWeek\": 4.2\n    },\n    \"recentActivity\": [\n      {\n        \"id\": \"activity_1\",\n        \"type\": \"task_completed\",\n        \"title\": \"Task Completed\",\n        \"description\": \"Completed task: Implement user authentication\",\n        \"entityId\": \"task_123\",\n        \"entityType\": \"tasks\",\n        \"userId\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n        \"timestamp\": \"2023-09-06T10:15:00.000Z\"\n      },\n      {\n        \"id\": \"activity_2\",\n        \"type\": \"note_created\",\n        \"title\": \"Note Created\",\n        \"description\": \"Created note: Meeting Notes - Product Planning\",\n        \"entityId\": \"note_456\",\n        \"entityType\": \"notes\",\n        \"userId\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n        \"timestamp\": \"2023-09-06T09:30:00.000Z\"\n      }\n    ],\n    \"upcomingTasks\": [\n      {\n        \"id\": \"task_789\",\n        \"name\": \"Review pull requests\",\n        \"dueDate\": \"2023-09-07T17:00:00.000Z\",\n        \"priority\": \"high\",\n        \"status\": \"in_progress\",\n        \"projectName\": \"Development\",\n        \"isOverdue\": false,\n        \"daysUntilDue\": 1\n      }\n    ],\n    \"recentNotes\": [\n      {\n        \"id\": \"note_456\",\n        \"title\": \"Meeting Notes - Product Planning\",\n        \"preview\": \"Discussed upcoming features and roadmap priorities...\",\n        \"tags\": [\"meeting\", \"planning\", \"product\"],\n        \"lastEditedAt\": \"2023-09-06T09:30:00.000Z\",\n        \"wordCount\": 245\n      }\n    ],\n    \"goalProgress\": [\n      {\n        \"id\": \"goal_123\",\n        \"name\": \"Complete Second Brain System\",\n        \"status\": \"in_progress\",\n        \"deadline\": \"2023-12-31T23:59:59.000Z\",\n        \"progressPercentage\": 65,\n        \"relatedTasksCount\": 15,\n        \"completedTasksCount\": 10,\n        \"isOverdue\": false\n      }\n    ],\n    \"habitStreaks\": [\n      {\n        \"id\": \"habit_456\",\n        \"name\": \"Daily Exercise\",\n        \"currentStreak\": 12,\n        \"bestStreak\": 28,\n        \"frequency\": \"daily\",\n        \"lastCompleted\": \"2023-09-06T07:00:00.000Z\",\n        \"completionRate\": 85.7\n      }\n    ],\n    \"financeSummary\": {\n      \"thisMonthIncome\": 5000.00,\n      \"thisMonthExpenses\": 3200.50,\n      \"thisMonthNet\": 1799.50,\n      \"lastMonthIncome\": 4800.00,\n      \"lastMonthExpenses\": 3100.00,\n      \"lastMonthNet\": 1700.00,\n      \"incomeChange\": 4.17,\n      \"expenseChange\": 3.24,\n      \"topExpenseCategories\": [\n        {\n          \"category\": \"Food\",\n          \"amount\": 850.00,\n          \"percentage\": 26.6\n        },\n        {\n          \"category\": \"Transportation\",\n          \"amount\": 420.00,\n          \"percentage\": 13.1\n        }\n      ],\n      \"recentTransactions\": [\n        {\n          \"id\": \"txn_123\",\n          \"date\": \"2023-09-06T12:00:00.000Z\",\n          \"amount\": -45.50,\n          \"type\": \"expense\",\n          \"category\": \"Food\",\n          \"note\": \"Lunch at restaurant\"\n        }\n      ]\n    },\n    \"workspaceStats\": {\n      \"totalDatabases\": 12,\n      \"totalRecords\": 1247,\n      \"totalViews\": 28,\n      \"storageUsed\": 245760000,\n      \"storageLimit\": 1000000000,\n      \"activeMembers\": 1,\n      \"lastActivityAt\": \"2023-09-06T10:15:00.000Z\"\n    }\n  }\n}"
            }
          ]
        },
        {
          "name": "Get Quick Stats",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/dashboard/quick-stats",
              "host": ["{{baseUrl}}"],
              "path": ["dashboard", "quick-stats"]
            },
            "description": "Get quick statistics overview"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/dashboard/quick-stats",
                  "host": ["{{baseUrl}}"],
                  "path": ["dashboard", "quick-stats"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Quick statistics retrieved successfully\",\n  \"data\": {\n    \"totalTasks\": 45,\n    \"completedTasks\": 32,\n    \"overdueTasks\": 3,\n    \"totalNotes\": 128,\n    \"totalGoals\": 8,\n    \"activeHabits\": 12,\n    \"totalProjects\": 6,\n    \"activeProjects\": 4,\n    \"thisWeekExpenses\": 450.75,\n    \"thisWeekIncome\": 2500.00,\n    \"journalEntriesThisMonth\": 18,\n    \"averageMoodThisWeek\": 4.2\n  }\n}"
            }
          ]
        },
        {
          "name": "Get Recent Activity",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/dashboard/activity?limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["dashboard", "activity"],
              "query": [
                {
                  "key": "limit",
                  "value": "20",
                  "description": "Number of activity items to return"
                }
              ]
            },
            "description": "Get recent activity feed"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/dashboard/activity?limit=20",
                  "host": ["{{baseUrl}}"],
                  "path": ["dashboard", "activity"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "20"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Recent activity retrieved successfully\",\n  \"data\": [\n    {\n      \"id\": \"activity_1\",\n      \"type\": \"task_completed\",\n      \"title\": \"Task Completed\",\n      \"description\": \"Completed task: Implement user authentication • 2h ago\",\n      \"entityId\": \"task_123\",\n      \"entityType\": \"tasks\",\n      \"userId\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n      \"timestamp\": \"2023-09-06T10:15:00.000Z\"\n    },\n    {\n      \"id\": \"activity_2\",\n      \"type\": \"note_created\",\n      \"title\": \"Note Created\",\n      \"description\": \"Created note: Meeting Notes - Product Planning • 3h ago\",\n      \"entityId\": \"note_456\",\n      \"entityType\": \"notes\",\n      \"userId\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n      \"timestamp\": \"2023-09-06T09:30:00.000Z\"\n    }\n  ]\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Database Management",
      "description": "Database/Table management endpoints for data-table first architecture",
      "item": [
        {
          "name": "Create Database",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"workspaceId\": \"workspace_123\",\n  \"name\": \"My Tasks Database\",\n  \"type\": \"tasks\",\n  \"description\": \"Database for managing personal and work tasks\",\n  \"icon\": {\n    \"type\": \"emoji\",\n    \"value\": \"✅\"\n  },\n  \"cover\": {\n    \"type\": \"color\",\n    \"value\": \"#3B82F6\"\n  },\n  \"isPublic\": false,\n  \"allowComments\": true,\n  \"enableVersioning\": false,\n  \"enableAuditLog\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/databases",
              "host": ["{{baseUrl}}"],
              "path": ["databases"]
            },
            "description": "Create a new database/table"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"workspaceId\": \"workspace_123\",\n  \"name\": \"My Tasks Database\",\n  \"type\": \"tasks\",\n  \"description\": \"Database for managing personal and work tasks\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/databases",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Database created successfully\",\n  \"data\": {\n    \"id\": \"64f8a1b2c3d4e5f6a7b8c9d1\",\n    \"workspaceId\": \"workspace_123\",\n    \"name\": \"My Tasks Database\",\n    \"type\": \"tasks\",\n    \"description\": \"Database for managing personal and work tasks\",\n    \"icon\": {\n      \"type\": \"emoji\",\n      \"value\": \"✅\"\n    },\n    \"cover\": {\n      \"type\": \"color\",\n      \"value\": \"#3B82F6\"\n    },\n    \"isPublic\": false,\n    \"isTemplate\": false,\n    \"properties\": [\n      \"prop_name\",\n      \"prop_status\",\n      \"prop_priority\",\n      \"prop_due_date\",\n      \"prop_created_time\",\n      \"prop_last_edited_time\"\n    ],\n    \"views\": [\n      \"view_all_tasks\",\n      \"view_board\",\n      \"view_calendar\"\n    ],\n    \"recordCount\": 0,\n    \"allowComments\": true,\n    \"enableVersioning\": false,\n    \"enableAuditLog\": true,\n    \"createdAt\": \"2023-09-06T12:00:00.000Z\",\n    \"updatedAt\": \"2023-09-06T12:00:00.000Z\",\n    \"createdBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\"\n  }\n}"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('databaseId', response.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Databases",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/databases?workspaceId=workspace_123&type=tasks&sortBy=updatedAt&sortOrder=desc&page=1&limit=25",
              "host": ["{{baseUrl}}"],
              "path": ["databases"],
              "query": [
                {
                  "key": "workspaceId",
                  "value": "workspace_123",
                  "description": "Filter by workspace"
                },
                {
                  "key": "type",
                  "value": "tasks",
                  "description": "Filter by database type"
                },
                {
                  "key": "sortBy",
                  "value": "updatedAt",
                  "description": "Sort field"
                },
                {
                  "key": "sortOrder",
                  "value": "desc",
                  "description": "Sort order"
                },
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                },
                {
                  "key": "limit",
                  "value": "25",
                  "description": "Items per page"
                }
              ]
            },
            "description": "Get list of databases with filtering and pagination"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/databases?workspaceId=workspace_123",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases"],
                  "query": [
                    {
                      "key": "workspaceId",
                      "value": "workspace_123"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Databases retrieved successfully\",\n  \"data\": [\n    {\n      \"id\": \"64f8a1b2c3d4e5f6a7b8c9d1\",\n      \"workspaceId\": \"workspace_123\",\n      \"name\": \"My Tasks Database\",\n      \"type\": \"tasks\",\n      \"description\": \"Database for managing personal and work tasks\",\n      \"icon\": {\n        \"type\": \"emoji\",\n        \"value\": \"✅\"\n      },\n      \"recordCount\": 15,\n      \"lastActivityAt\": \"2023-09-06T11:30:00.000Z\",\n      \"createdAt\": \"2023-09-06T10:00:00.000Z\",\n      \"updatedAt\": \"2023-09-06T11:30:00.000Z\"\n    },\n    {\n      \"id\": \"64f8a1b2c3d4e5f6a7b8c9d2\",\n      \"workspaceId\": \"workspace_123\",\n      \"name\": \"Meeting Notes\",\n      \"type\": \"notes\",\n      \"description\": \"Database for storing meeting notes and documentation\",\n      \"icon\": {\n        \"type\": \"emoji\",\n        \"value\": \"📝\"\n      },\n      \"recordCount\": 28,\n      \"lastActivityAt\": \"2023-09-06T09:15:00.000Z\",\n      \"createdAt\": \"2023-09-05T14:00:00.000Z\",\n      \"updatedAt\": \"2023-09-06T09:15:00.000Z\"\n    }\n  ],\n  \"pagination\": {\n    \"total\": 12,\n    \"page\": 1,\n    \"limit\": 25,\n    \"totalPages\": 1,\n    \"hasNext\": false,\n    \"hasPrev\": false\n  }\n}"
            }
          ]
        },
        {
          "name": "Get Database by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}"]
            },
            "description": "Get detailed information about a specific database"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/databases/64f8a1b2c3d4e5f6a7b8c9d1",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "64f8a1b2c3d4e5f6a7b8c9d1"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Database retrieved successfully\",\n  \"data\": {\n    \"id\": \"64f8a1b2c3d4e5f6a7b8c9d1\",\n    \"workspaceId\": \"workspace_123\",\n    \"name\": \"My Tasks Database\",\n    \"type\": \"tasks\",\n    \"description\": \"Database for managing personal and work tasks\",\n    \"icon\": {\n      \"type\": \"emoji\",\n      \"value\": \"✅\"\n    },\n    \"cover\": {\n      \"type\": \"color\",\n      \"value\": \"#3B82F6\"\n    },\n    \"isPublic\": false,\n    \"isTemplate\": false,\n    \"properties\": [\n      {\n        \"id\": \"prop_name\",\n        \"name\": \"Name\",\n        \"type\": \"text\",\n        \"isSystem\": true,\n        \"isVisible\": true,\n        \"order\": 0\n      },\n      {\n        \"id\": \"prop_status\",\n        \"name\": \"Status\",\n        \"type\": \"status\",\n        \"isSystem\": true,\n        \"isVisible\": true,\n        \"order\": 1\n      },\n      {\n        \"id\": \"prop_priority\",\n        \"name\": \"Priority\",\n        \"type\": \"priority\",\n        \"isSystem\": true,\n        \"isVisible\": true,\n        \"order\": 2\n      }\n    ],\n    \"views\": [\n      {\n        \"id\": \"view_all_tasks\",\n        \"name\": \"All Tasks\",\n        \"type\": \"table\",\n        \"isDefault\": true,\n        \"order\": 0\n      },\n      {\n        \"id\": \"view_board\",\n        \"name\": \"Board\",\n        \"type\": \"board\",\n        \"isDefault\": false,\n        \"order\": 1\n      }\n    ],\n    \"recordCount\": 15,\n    \"allowComments\": true,\n    \"enableVersioning\": false,\n    \"enableAuditLog\": true,\n    \"createdAt\": \"2023-09-06T10:00:00.000Z\",\n    \"updatedAt\": \"2023-09-06T11:30:00.000Z\",\n    \"createdBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Update Database",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Tasks Database\",\n  \"description\": \"Updated description for the tasks database\",\n  \"icon\": {\n    \"type\": \"emoji\",\n    \"value\": \"📋\"\n  },\n  \"allowComments\": false,\n  \"enableVersioning\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}"]
            },
            "description": "Update database properties"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Updated Tasks Database\",\n  \"description\": \"Updated description for the tasks database\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/databases/64f8a1b2c3d4e5f6a7b8c9d1",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "64f8a1b2c3d4e5f6a7b8c9d1"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Database updated successfully\",\n  \"data\": {\n    \"id\": \"64f8a1b2c3d4e5f6a7b8c9d1\",\n    \"name\": \"Updated Tasks Database\",\n    \"description\": \"Updated description for the tasks database\",\n    \"icon\": {\n      \"type\": \"emoji\",\n      \"value\": \"📋\"\n    },\n    \"allowComments\": false,\n    \"enableVersioning\": true,\n    \"updatedAt\": \"2023-09-06T12:30:00.000Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Delete Database",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}?permanent=false",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}"],
              "query": [
                {
                  "key": "permanent",
                  "value": "false",
                  "description": "Whether to permanently delete (true) or soft delete (false)"
                }
              ]
            },
            "description": "Delete a database (soft delete by default)"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/databases/64f8a1b2c3d4e5f6a7b8c9d1",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "64f8a1b2c3d4e5f6a7b8c9d1"]
                }
              },
              "status": "No Content",
              "code": 204,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Duplicate Database",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Copy of Tasks Database\",\n  \"workspaceId\": \"workspace_123\",\n  \"includeRecords\": false,\n  \"includeViews\": true,\n  \"includeTemplates\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/duplicate",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "duplicate"]
            },
            "description": "Duplicate a database with options"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Copy of Tasks Database\",\n  \"workspaceId\": \"workspace_123\",\n  \"includeRecords\": false\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/databases/64f8a1b2c3d4e5f6a7b8c9d1/duplicate",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "64f8a1b2c3d4e5f6a7b8c9d1", "duplicate"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Database duplicated successfully\",\n  \"data\": {\n    \"id\": \"64f8a1b2c3d4e5f6a7b8c9d3\",\n    \"name\": \"Copy of Tasks Database\",\n    \"type\": \"tasks\",\n    \"workspaceId\": \"workspace_123\",\n    \"recordCount\": 0,\n    \"createdAt\": \"2023-09-06T12:45:00.000Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Get Database Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/stats?period=month&includeRecordStats=true&includeActivityStats=true",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "stats"],
              "query": [
                {
                  "key": "period",
                  "value": "month",
                  "description": "Time period for statistics"
                },
                {
                  "key": "includeRecordStats",
                  "value": "true",
                  "description": "Include record statistics"
                },
                {
                  "key": "includeActivityStats",
                  "value": "true",
                  "description": "Include activity statistics"
                }
              ]
            },
            "description": "Get detailed database statistics"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/databases/64f8a1b2c3d4e5f6a7b8c9d1/stats",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "64f8a1b2c3d4e5f6a7b8c9d1", "stats"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Database statistics retrieved successfully\",\n  \"data\": {\n    \"databaseId\": \"64f8a1b2c3d4e5f6a7b8c9d1\",\n    \"recordCount\": 15,\n    \"propertyCount\": 8,\n    \"viewCount\": 3,\n    \"templateCount\": 2,\n    \"lastActivityAt\": \"2023-09-06T11:30:00.000Z\",\n    \"createdThisWeek\": 5,\n    \"updatedThisWeek\": 12,\n    \"topContributors\": [\n      {\n        \"userId\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n        \"recordCount\": 15\n      }\n    ]\n  }\n}"
            }
          ]
        },
        {
          "name": "Create Database View",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"High Priority Tasks\",\n  \"type\": \"table\",\n  \"description\": \"View showing only high and urgent priority tasks\",\n  \"isDefault\": false,\n  \"isPublic\": false,\n  \"settings\": {\n    \"filters\": [\n      {\n        \"property\": \"priority\",\n        \"condition\": \"equals\",\n        \"value\": \"high\"\n      },\n      {\n        \"property\": \"priority\",\n        \"condition\": \"equals\",\n        \"value\": \"urgent\",\n        \"operator\": \"or\"\n      }\n    ],\n    \"sorts\": [\n      {\n        \"property\": \"due_date\",\n        \"direction\": \"ascending\"\n      },\n      {\n        \"property\": \"priority\",\n        \"direction\": \"descending\"\n      }\n    ],\n    \"groupBy\": {\n      \"property\": \"status\",\n      \"direction\": \"ascending\"\n    },\n    \"visibleProperties\": [\n      \"name\",\n      \"status\",\n      \"priority\",\n      \"due_date\",\n      \"assignee\"\n    ],\n    \"frozenColumns\": [\"name\"],\n    \"pageSize\": 50,\n    \"showSubItems\": true\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/views",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "views"]
            },
            "description": "Create a new view for a database with filtering, sorting, and grouping"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"High Priority Tasks\",\n  \"type\": \"table\",\n  \"settings\": {\n    \"filters\": [\n      {\n        \"property\": \"priority\",\n        \"condition\": \"equals\",\n        \"value\": \"high\"\n      }\n    ]\n  }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/databases/64f8a1b2c3d4e5f6a7b8c9d1/views",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "64f8a1b2c3d4e5f6a7b8c9d1", "views"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"View created successfully\",\n  \"data\": {\n    \"id\": \"view_64f8a1b2c3d4e5f6a7b8c9d8\",\n    \"databaseId\": \"64f8a1b2c3d4e5f6a7b8c9d1\",\n    \"name\": \"High Priority Tasks\",\n    \"type\": \"table\",\n    \"description\": \"View showing only high and urgent priority tasks\",\n    \"isDefault\": false,\n    \"isPublic\": false,\n    \"order\": 2,\n    \"settings\": {\n      \"filters\": [\n        {\n          \"id\": \"filter_1\",\n          \"property\": \"priority\",\n          \"condition\": \"equals\",\n          \"value\": \"high\",\n          \"operator\": \"and\"\n        },\n        {\n          \"id\": \"filter_2\",\n          \"property\": \"priority\",\n          \"condition\": \"equals\",\n          \"value\": \"urgent\",\n          \"operator\": \"or\"\n        }\n      ],\n      \"sorts\": [\n        {\n          \"property\": \"due_date\",\n          \"direction\": \"ascending\"\n        },\n        {\n          \"property\": \"priority\",\n          \"direction\": \"descending\"\n        }\n      ],\n      \"groupBy\": {\n        \"property\": \"status\",\n        \"direction\": \"ascending\"\n      },\n      \"visibleProperties\": [\n        \"name\",\n        \"status\",\n        \"priority\",\n        \"due_date\",\n        \"assignee\"\n      ],\n      \"frozenColumns\": [\"name\"],\n      \"pageSize\": 50,\n      \"showSubItems\": true\n    },\n    \"createdAt\": \"2023-09-06T16:00:00.000Z\",\n    \"updatedAt\": \"2023-09-06T16:00:00.000Z\",\n    \"createdBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Get Database Views",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/views",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "views"]
            },
            "description": "Get all views for a database"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/databases/64f8a1b2c3d4e5f6a7b8c9d1/views",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "64f8a1b2c3d4e5f6a7b8c9d1", "views"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Views retrieved successfully\",\n  \"data\": [\n    {\n      \"id\": \"view_default\",\n      \"name\": \"All Tasks\",\n      \"type\": \"table\",\n      \"isDefault\": true,\n      \"isPublic\": true,\n      \"order\": 0,\n      \"recordCount\": 15,\n      \"lastUsedAt\": \"2023-09-06T15:30:00.000Z\"\n    },\n    {\n      \"id\": \"view_board\",\n      \"name\": \"Kanban Board\",\n      \"type\": \"board\",\n      \"isDefault\": false,\n      \"isPublic\": false,\n      \"order\": 1,\n      \"recordCount\": 15,\n      \"lastUsedAt\": \"2023-09-06T14:20:00.000Z\"\n    },\n    {\n      \"id\": \"view_64f8a1b2c3d4e5f6a7b8c9d8\",\n      \"name\": \"High Priority Tasks\",\n      \"type\": \"table\",\n      \"isDefault\": false,\n      \"isPublic\": false,\n      \"order\": 2,\n      \"recordCount\": 5,\n      \"lastUsedAt\": \"2023-09-06T16:00:00.000Z\"\n    }\n  ]\n}"
            }
          ]
        },
        {
          "name": "Update Database View",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Critical Priority Tasks\",\n  \"description\": \"Updated view for critical and urgent tasks only\",\n  \"settings\": {\n    \"filters\": [\n      {\n        \"property\": \"priority\",\n        \"condition\": \"equals\",\n        \"value\": \"urgent\"\n      },\n      {\n        \"property\": \"status\",\n        \"condition\": \"not_equals\",\n        \"value\": \"completed\",\n        \"operator\": \"and\"\n      }\n    ],\n    \"sorts\": [\n      {\n        \"property\": \"due_date\",\n        \"direction\": \"ascending\"\n      }\n    ],\n    \"visibleProperties\": [\n      \"name\",\n      \"status\",\n      \"priority\",\n      \"due_date\",\n      \"assignee\",\n      \"progress\"\n    ],\n    \"frozenColumns\": [\"name\", \"status\"]\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/views/view_64f8a1b2c3d4e5f6a7b8c9d8",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "views", "view_64f8a1b2c3d4e5f6a7b8c9d8"]
            },
            "description": "Update view settings including filters, sorts, and visible properties"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Critical Priority Tasks\",\n  \"settings\": {\n    \"filters\": [\n      {\n        \"property\": \"priority\",\n        \"condition\": \"equals\",\n        \"value\": \"urgent\"\n      }\n    ]\n  }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/databases/64f8a1b2c3d4e5f6a7b8c9d1/views/view_64f8a1b2c3d4e5f6a7b8c9d8",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "64f8a1b2c3d4e5f6a7b8c9d1", "views", "view_64f8a1b2c3d4e5f6a7b8c9d8"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"View updated successfully\",\n  \"data\": {\n    \"id\": \"view_64f8a1b2c3d4e5f6a7b8c9d8\",\n    \"name\": \"Critical Priority Tasks\",\n    \"description\": \"Updated view for critical and urgent tasks only\",\n    \"updatedAt\": \"2023-09-06T16:30:00.000Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Delete Database View",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/views/view_64f8a1b2c3d4e5f6a7b8c9d8",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "views", "view_64f8a1b2c3d4e5f6a7b8c9d8"]
            },
            "description": "Delete a database view"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/databases/64f8a1b2c3d4e5f6a7b8c9d1/views/view_64f8a1b2c3d4e5f6a7b8c9d8",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "64f8a1b2c3d4e5f6a7b8c9d1", "views", "view_64f8a1b2c3d4e5f6a7b8c9d8"]
                }
              },
              "status": "No Content",
              "code": 204,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        }
      ]
    },
    {
      "name": "Global Search System",
      "description": "Global search across all databases, records, blocks, templates, and users",
      "item": [
        {
          "name": "Global Search",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/search?q=test&scope=all&limit=25&offset=0&includeContent=true&includeHighlights=true&sortBy=relevance&sortOrder=desc",
              "host": ["{{baseUrl}}"],
              "path": ["search"],
              "query": [
                {
                  "key": "q",
                  "value": "test",
                  "description": "Search query (required)"
                },
                {
                  "key": "scope",
                  "value": "all",
                  "description": "Search scope: all, databases, records, blocks, templates, users"
                },
                {
                  "key": "workspaceId",
                  "value": "{{workspaceId}}",
                  "description": "Filter by workspace ID",
                  "disabled": true
                },
                {
                  "key": "databaseTypes",
                  "value": "tasks,notes",
                  "description": "Comma-separated database types",
                  "disabled": true
                },
                {
                  "key": "databaseIds",
                  "value": "{{databaseId}}",
                  "description": "Comma-separated database IDs",
                  "disabled": true
                },
                {
                  "key": "createdBy",
                  "value": "{{userId}}",
                  "description": "Filter by creator user ID",
                  "disabled": true
                },
                {
                  "key": "startDate",
                  "value": "2024-01-01T00:00:00Z",
                  "description": "Filter by creation date start",
                  "disabled": true
                },
                {
                  "key": "endDate",
                  "value": "2024-12-31T23:59:59Z",
                  "description": "Filter by creation date end",
                  "disabled": true
                },
                {
                  "key": "tags",
                  "value": "important,urgent",
                  "description": "Comma-separated tags",
                  "disabled": true
                },
                {
                  "key": "isPublic",
                  "value": "true",
                  "description": "Filter by public/private status",
                  "disabled": true
                },
                {
                  "key": "isArchived",
                  "value": "false",
                  "description": "Filter by archived status",
                  "disabled": true
                },
                {
                  "key": "isTemplate",
                  "value": "false",
                  "description": "Filter by template status",
                  "disabled": true
                },
                {
                  "key": "fuzzy",
                  "value": "false",
                  "description": "Enable fuzzy search"
                },
                {
                  "key": "caseSensitive",
                  "value": "false",
                  "description": "Enable case-sensitive search"
                },
                {
                  "key": "includeContent",
                  "value": "true",
                  "description": "Include content in search"
                },
                {
                  "key": "includeHighlights",
                  "value": "true",
                  "description": "Include search highlights"
                },
                {
                  "key": "sortBy",
                  "value": "relevance",
                  "description": "Sort by: relevance, date, name, type"
                },
                {
                  "key": "sortOrder",
                  "value": "desc",
                  "description": "Sort order: asc, desc"
                },
                {
                  "key": "limit",
                  "value": "25",
                  "description": "Number of results (1-100)"
                },
                {
                  "key": "offset",
                  "value": "0",
                  "description": "Number of results to skip"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Search Databases",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/search/databases?q=tasks&workspaceId={{workspaceId}}&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["search", "databases"],
              "query": [
                {
                  "key": "q",
                  "value": "tasks",
                  "description": "Search query (required)"
                },
                {
                  "key": "workspaceId",
                  "value": "{{workspaceId}}",
                  "description": "Filter by workspace ID",
                  "disabled": true
                },
                {
                  "key": "databaseTypes",
                  "value": "tasks,notes",
                  "description": "Comma-separated database types",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Number of results (1-100)"
                },
                {
                  "key": "offset",
                  "value": "0",
                  "description": "Number of results to skip"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Search Records",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/search/records?q=important&databaseIds={{databaseId}}&includeContent=true&limit=15",
              "host": ["{{baseUrl}}"],
              "path": ["search", "records"],
              "query": [
                {
                  "key": "q",
                  "value": "important",
                  "description": "Search query (required)"
                },
                {
                  "key": "databaseIds",
                  "value": "{{databaseId}}",
                  "description": "Comma-separated database IDs",
                  "disabled": true
                },
                {
                  "key": "includeContent",
                  "value": "true",
                  "description": "Include record content in search"
                },
                {
                  "key": "limit",
                  "value": "15",
                  "description": "Number of results (1-100)"
                },
                {
                  "key": "offset",
                  "value": "0",
                  "description": "Number of results to skip"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Search Suggestions",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/search/suggestions?q=te&scope=all&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["search", "suggestions"],
              "query": [
                {
                  "key": "q",
                  "value": "te",
                  "description": "Partial search query (required)"
                },
                {
                  "key": "scope",
                  "value": "all",
                  "description": "Search scope for suggestions",
                  "disabled": true
                },
                {
                  "key": "workspaceId",
                  "value": "{{workspaceId}}",
                  "description": "Filter suggestions by workspace",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Number of suggestions (1-20)"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Recent Searches",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/search/recent?limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["search", "recent"],
              "query": [
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Number of recent searches (1-50)"
                },
                {
                  "key": "scope",
                  "value": "all",
                  "description": "Filter by search scope",
                  "disabled": true
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Properties Management",
      "description": "Database properties/columns management endpoints",
      "item": [
        {
          "name": "Create Database Property",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Estimated Hours\",\n  \"type\": \"number\",\n  \"description\": \"Estimated time to complete the task in hours\",\n  \"isRequired\": false,\n  \"isVisible\": true,\n  \"isFrozen\": false,\n  \"order\": 5,\n  \"config\": {\n    \"format\": \"number\",\n    \"precision\": 1,\n    \"min\": 0,\n    \"max\": 100,\n    \"defaultValue\": 1,\n    \"unit\": \"hours\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/properties",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "properties"]
            },
            "description": "Create a new property/column for a database"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Estimated Hours\",\n  \"type\": \"number\",\n  \"config\": {\n    \"format\": \"number\",\n    \"precision\": 1\n  }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/databases/64f8a1b2c3d4e5f6a7b8c9d1/properties",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "64f8a1b2c3d4e5f6a7b8c9d1", "properties"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Property created successfully\",\n  \"data\": {\n    \"id\": \"prop_64f8a1b2c3d4e5f6a7b8c9d9\",\n    \"databaseId\": \"64f8a1b2c3d4e5f6a7b8c9d1\",\n    \"name\": \"Estimated Hours\",\n    \"type\": \"number\",\n    \"description\": \"Estimated time to complete the task in hours\",\n    \"isRequired\": false,\n    \"isVisible\": true,\n    \"isFrozen\": false,\n    \"isSystem\": false,\n    \"order\": 5,\n    \"config\": {\n      \"format\": \"number\",\n      \"precision\": 1,\n      \"min\": 0,\n      \"max\": 100,\n      \"defaultValue\": 1,\n      \"unit\": \"hours\"\n    },\n    \"createdAt\": \"2023-09-06T17:00:00.000Z\",\n    \"updatedAt\": \"2023-09-06T17:00:00.000Z\",\n    \"createdBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Get Database Properties",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/properties?includeHidden=true",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "properties"],
              "query": [
                {
                  "key": "includeHidden",
                  "value": "true",
                  "description": "Include hidden properties"
                }
              ]
            },
            "description": "Get all properties for a database with visibility states"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/databases/64f8a1b2c3d4e5f6a7b8c9d1/properties",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "64f8a1b2c3d4e5f6a7b8c9d1", "properties"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Properties retrieved successfully\",\n  \"data\": [\n    {\n      \"id\": \"prop_name\",\n      \"name\": \"Name\",\n      \"type\": \"text\",\n      \"isRequired\": true,\n      \"isVisible\": true,\n      \"isFrozen\": true,\n      \"isSystem\": true,\n      \"order\": 0,\n      \"config\": {\n        \"maxLength\": 200\n      }\n    },\n    {\n      \"id\": \"prop_status\",\n      \"name\": \"Status\",\n      \"type\": \"status\",\n      \"isRequired\": true,\n      \"isVisible\": true,\n      \"isFrozen\": false,\n      \"isSystem\": true,\n      \"order\": 1,\n      \"config\": {\n        \"options\": [\n          {\n            \"id\": \"not_started\",\n            \"name\": \"Not Started\",\n            \"color\": \"gray\"\n          },\n          {\n            \"id\": \"in_progress\",\n            \"name\": \"In Progress\",\n            \"color\": \"blue\"\n          },\n          {\n            \"id\": \"completed\",\n            \"name\": \"Completed\",\n            \"color\": \"green\"\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"prop_priority\",\n      \"name\": \"Priority\",\n      \"type\": \"priority\",\n      \"isRequired\": false,\n      \"isVisible\": true,\n      \"isFrozen\": false,\n      \"isSystem\": true,\n      \"order\": 2,\n      \"config\": {\n        \"options\": [\n          {\n            \"id\": \"low\",\n            \"name\": \"Low\",\n            \"color\": \"green\"\n          },\n          {\n            \"id\": \"medium\",\n            \"name\": \"Medium\",\n            \"color\": \"yellow\"\n          },\n          {\n            \"id\": \"high\",\n            \"name\": \"High\",\n            \"color\": \"orange\"\n          },\n          {\n            \"id\": \"urgent\",\n            \"name\": \"Urgent\",\n            \"color\": \"red\"\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"prop_due_date\",\n      \"name\": \"Due Date\",\n      \"type\": \"date\",\n      \"isRequired\": false,\n      \"isVisible\": true,\n      \"isFrozen\": false,\n      \"isSystem\": false,\n      \"order\": 3,\n      \"config\": {\n        \"format\": \"date\",\n        \"includeTime\": true\n      }\n    },\n    {\n      \"id\": \"prop_assignee\",\n      \"name\": \"Assignee\",\n      \"type\": \"people\",\n      \"isRequired\": false,\n      \"isVisible\": true,\n      \"isFrozen\": false,\n      \"isSystem\": false,\n      \"order\": 4,\n      \"config\": {\n        \"allowMultiple\": true\n      }\n    },\n    {\n      \"id\": \"prop_64f8a1b2c3d4e5f6a7b8c9d9\",\n      \"name\": \"Estimated Hours\",\n      \"type\": \"number\",\n      \"isRequired\": false,\n      \"isVisible\": true,\n      \"isFrozen\": false,\n      \"isSystem\": false,\n      \"order\": 5,\n      \"config\": {\n        \"format\": \"number\",\n        \"precision\": 1,\n        \"min\": 0,\n        \"max\": 100,\n        \"unit\": \"hours\"\n      }\n    }\n  ]\n}"
            }
          ]
        },
        {
          "name": "Update Database Property",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Time Estimate (Hours)\",\n  \"description\": \"Updated description for time estimation\",\n  \"isVisible\": false,\n  \"isFrozen\": true,\n  \"order\": 3,\n  \"config\": {\n    \"format\": \"number\",\n    \"precision\": 0.5,\n    \"min\": 0.5,\n    \"max\": 200,\n    \"defaultValue\": 2,\n    \"unit\": \"hrs\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/properties/prop_64f8a1b2c3d4e5f6a7b8c9d9",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "properties", "prop_64f8a1b2c3d4e5f6a7b8c9d9"]
            },
            "description": "Update property settings including name, visibility, order, and configuration"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Time Estimate (Hours)\",\n  \"isVisible\": false,\n  \"order\": 3\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/databases/64f8a1b2c3d4e5f6a7b8c9d1/properties/prop_64f8a1b2c3d4e5f6a7b8c9d9",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "64f8a1b2c3d4e5f6a7b8c9d1", "properties", "prop_64f8a1b2c3d4e5f6a7b8c9d9"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Property updated successfully\",\n  \"data\": {\n    \"id\": \"prop_64f8a1b2c3d4e5f6a7b8c9d9\",\n    \"name\": \"Time Estimate (Hours)\",\n    \"description\": \"Updated description for time estimation\",\n    \"isVisible\": false,\n    \"isFrozen\": true,\n    \"order\": 3,\n    \"updatedAt\": \"2023-09-06T17:30:00.000Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Reorder Database Properties",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"propertyOrders\": [\n    {\n      \"propertyId\": \"prop_name\",\n      \"order\": 0\n    },\n    {\n      \"propertyId\": \"prop_priority\",\n      \"order\": 1\n    },\n    {\n      \"propertyId\": \"prop_status\",\n      \"order\": 2\n    },\n    {\n      \"propertyId\": \"prop_64f8a1b2c3d4e5f6a7b8c9d9\",\n      \"order\": 3\n    },\n    {\n      \"propertyId\": \"prop_due_date\",\n      \"order\": 4\n    },\n    {\n      \"propertyId\": \"prop_assignee\",\n      \"order\": 5\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/properties/reorder",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "properties", "reorder"]
            },
            "description": "Reorder database properties (change column order)"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"propertyOrders\": [\n    {\n      \"propertyId\": \"prop_name\",\n      \"order\": 0\n    },\n    {\n      \"propertyId\": \"prop_priority\",\n      \"order\": 1\n    }\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/databases/64f8a1b2c3d4e5f6a7b8c9d1/properties/reorder",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "64f8a1b2c3d4e5f6a7b8c9d1", "properties", "reorder"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Properties reordered successfully\",\n  \"data\": {\n    \"updatedProperties\": 6,\n    \"updatedAt\": \"2023-09-06T17:45:00.000Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Delete Database Property",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/properties/prop_64f8a1b2c3d4e5f6a7b8c9d9",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "properties", "prop_64f8a1b2c3d4e5f6a7b8c9d9"]
            },
            "description": "Delete a database property (cannot delete system properties)"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/databases/64f8a1b2c3d4e5f6a7b8c9d1/properties/prop_64f8a1b2c3d4e5f6a7b8c9d9",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "64f8a1b2c3d4e5f6a7b8c9d1", "properties", "prop_64f8a1b2c3d4e5f6a7b8c9d9"]
                }
              },
              "status": "No Content",
              "code": 204,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Duplicate Database Property",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Custom Field (Copy)\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/properties/{{propertyId}}/duplicate",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "properties", "{{propertyId}}", "duplicate"]
            },
            "description": "Duplicate an existing property with optional new name"
          },
          "response": []
        },
        {
          "name": "Change Property Type",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"select\",\n  \"config\": {\n    \"options\": [\n      {\"id\": \"opt1\", \"value\": \"option1\", \"label\": \"Option 1\", \"color\": \"blue\"},\n      {\"id\": \"opt2\", \"value\": \"option2\", \"label\": \"Option 2\", \"color\": \"green\"}\n    ]\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/properties/{{propertyId}}/change-type",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "properties", "{{propertyId}}", "change-type"]
            },
            "description": "Change the type of an existing property (non-system properties only)"
          },
          "response": []
        },
        {
          "name": "Insert Property After",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"afterPropertyId\": \"{{propertyId}}\",\n  \"name\": \"New Inserted Property\",\n  \"type\": \"text\",\n  \"description\": \"A property inserted after another property\",\n  \"config\": {\n    \"maxLength\": 500\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/properties/insert-after",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "properties", "insert-after"]
            },
            "description": "Insert a new property after a specific property (or at beginning if afterPropertyId is null)"
          },
          "response": []
        },
        {
          "name": "Get Property Calculations",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/properties/{{propertyId}}/calculations",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "properties", "{{propertyId}}", "calculations"]
            },
            "description": "Get statistical calculations and aggregations for a property (count all, count values, count unique, percentages, etc.)"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/databases/{{databaseId}}/properties/{{propertyId}}/calculations",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "{{databaseId}}", "properties", "{{propertyId}}", "calculations"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Property calculations retrieved successfully\",\n  \"data\": {\n    \"propertyId\": \"64f8a1b2c3d4e5f6a7b8c9d2\",\n    \"propertyName\": \"Estimated Hours\",\n    \"propertyType\": \"number\",\n    \"countAll\": 25,\n    \"countValues\": 20,\n    \"countEmpty\": 5,\n    \"countNotEmpty\": 20,\n    \"countUnique\": 15,\n    \"percentEmpty\": 20,\n    \"percentNotEmpty\": 80,\n    \"sum\": 180,\n    \"average\": 9,\n    \"min\": 2,\n    \"max\": 24,\n    \"median\": 8\n  }\n}"
            }
          ]
        },
        {
          "name": "Toggle Property Visibility",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/properties/{{propertyId}}/toggle-visibility",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "properties", "{{propertyId}}", "toggle-visibility"]
            },
            "description": "Toggle the visibility of a property (show/hide)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Records Management",
      "description": "Database records/rows management with rich content support",
      "item": [
        {
          "name": "Create Database Record",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"properties\": {\n    \"name\": \"Setup development environment\",\n    \"status\": \"not_started\",\n    \"priority\": \"medium\",\n    \"due_date\": \"2023-09-15T17:00:00.000Z\",\n    \"assignee\": [\"{{userId}}\"],\n    \"estimated_hours\": 4,\n    \"tags\": [\"setup\", \"development\", \"environment\"],\n    \"description\": \"Set up local development environment with all necessary tools and dependencies\"\n  },\n  \"content\": [\n    {\n      \"id\": \"block_1693996800010\",\n      \"type\": \"heading_2\",\n      \"content\": [\n        {\n          \"type\": \"text\",\n          \"text\": {\n            \"content\": \"Development Environment Setup\"\n          },\n          \"annotations\": {\n            \"bold\": false,\n            \"italic\": false,\n            \"strikethrough\": false,\n            \"underline\": false,\n            \"code\": false,\n            \"color\": \"default\"\n          },\n          \"plain_text\": \"Development Environment Setup\"\n        }\n      ],\n      \"createdAt\": \"2023-09-06T18:00:00.000Z\",\n      \"createdBy\": \"{{userId}}\",\n      \"lastEditedAt\": \"2023-09-06T18:00:00.000Z\",\n      \"lastEditedBy\": \"{{userId}}\"\n    },\n    {\n      \"id\": \"block_1693996800011\",\n      \"type\": \"to_do\",\n      \"content\": [\n        {\n          \"type\": \"text\",\n          \"text\": {\n            \"content\": \"Install Node.js and npm\"\n          },\n          \"annotations\": {\n            \"bold\": false,\n            \"italic\": false,\n            \"strikethrough\": false,\n            \"underline\": false,\n            \"code\": false,\n            \"color\": \"default\"\n          },\n          \"plain_text\": \"Install Node.js and npm\"\n        }\n      ],\n      \"checked\": false,\n      \"createdAt\": \"2023-09-06T18:01:00.000Z\",\n      \"createdBy\": \"{{userId}}\",\n      \"lastEditedAt\": \"2023-09-06T18:01:00.000Z\",\n      \"lastEditedBy\": \"{{userId}}\"\n    },\n    {\n      \"id\": \"block_1693996800012\",\n      \"type\": \"code\",\n      \"content\": [\n        {\n          \"type\": \"text\",\n          \"text\": {\n            \"content\": \"npm install\\nnpm run dev\"\n          },\n          \"annotations\": {\n            \"bold\": false,\n            \"italic\": false,\n            \"strikethrough\": false,\n            \"underline\": false,\n            \"code\": false,\n            \"color\": \"default\"\n          },\n          \"plain_text\": \"npm install\\nnpm run dev\"\n        }\n      ],\n      \"language\": \"bash\",\n      \"createdAt\": \"2023-09-06T18:02:00.000Z\",\n      \"createdBy\": \"{{userId}}\",\n      \"lastEditedAt\": \"2023-09-06T18:02:00.000Z\",\n      \"lastEditedBy\": \"{{userId}}\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/records",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "records"]
            },
            "description": "Create a new record with properties and rich content"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"properties\": {\n    \"name\": \"Setup development environment\",\n    \"status\": \"not_started\",\n    \"priority\": \"medium\"\n  }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/databases/64f8a1b2c3d4e5f6a7b8c9d1/records",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "64f8a1b2c3d4e5f6a7b8c9d1", "records"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Record created successfully\",\n  \"data\": {\n    \"id\": \"64f8a1b2c3d4e5f6a7b8c9da\",\n    \"databaseId\": \"64f8a1b2c3d4e5f6a7b8c9d1\",\n    \"properties\": {\n      \"name\": \"Setup development environment\",\n      \"status\": \"not_started\",\n      \"priority\": \"medium\",\n      \"due_date\": \"2023-09-15T17:00:00.000Z\",\n      \"assignee\": [\"64f8a1b2c3d4e5f6a7b8c9d0\"],\n      \"estimated_hours\": 4,\n      \"tags\": [\"setup\", \"development\", \"environment\"],\n      \"description\": \"Set up local development environment with all necessary tools and dependencies\"\n    },\n    \"content\": [\n      {\n        \"id\": \"block_1693996800010\",\n        \"type\": \"heading_2\",\n        \"content\": [\n          {\n            \"type\": \"text\",\n            \"text\": {\n              \"content\": \"Development Environment Setup\"\n            },\n            \"annotations\": {\n              \"bold\": false,\n              \"italic\": false,\n              \"strikethrough\": false,\n              \"underline\": false,\n              \"code\": false,\n              \"color\": \"default\"\n            },\n            \"plain_text\": \"Development Environment Setup\"\n          }\n        ],\n        \"createdAt\": \"2023-09-06T18:00:00.000Z\",\n        \"createdBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n        \"lastEditedAt\": \"2023-09-06T18:00:00.000Z\",\n        \"lastEditedBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\"\n      }\n    ],\n    \"order\": 16,\n    \"createdAt\": \"2023-09-06T18:00:00.000Z\",\n    \"updatedAt\": \"2023-09-06T18:00:00.000Z\",\n    \"createdBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Get Database Records",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/records?viewId=view_default&includeContent=false&page=1&limit=25",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "records"],
              "query": [
                {
                  "key": "viewId",
                  "value": "view_default",
                  "description": "Apply view filters and sorting"
                },
                {
                  "key": "includeContent",
                  "value": "false",
                  "description": "Include rich content blocks"
                },
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                },
                {
                  "key": "limit",
                  "value": "25",
                  "description": "Items per page"
                }
              ]
            },
            "description": "Get records from a database with view-based filtering and sorting"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/databases/64f8a1b2c3d4e5f6a7b8c9d1/records",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "64f8a1b2c3d4e5f6a7b8c9d1", "records"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Records retrieved successfully\",\n  \"data\": [\n    {\n      \"id\": \"64f8a1b2c3d4e5f6a7b8c9d4\",\n      \"properties\": {\n        \"name\": \"Implement user authentication\",\n        \"status\": \"in_progress\",\n        \"priority\": \"high\",\n        \"due_date\": \"2023-09-10T17:00:00.000Z\",\n        \"assignee\": [\"64f8a1b2c3d4e5f6a7b8c9d0\"],\n        \"estimated_hours\": 8,\n        \"tags\": [\"backend\", \"security\"]\n      },\n      \"order\": 1,\n      \"hasContent\": true,\n      \"lastEditedAt\": \"2023-09-06T14:30:00.000Z\"\n    },\n    {\n      \"id\": \"64f8a1b2c3d4e5f6a7b8c9da\",\n      \"properties\": {\n        \"name\": \"Setup development environment\",\n        \"status\": \"not_started\",\n        \"priority\": \"medium\",\n        \"due_date\": \"2023-09-15T17:00:00.000Z\",\n        \"assignee\": [\"64f8a1b2c3d4e5f6a7b8c9d0\"],\n        \"estimated_hours\": 4,\n        \"tags\": [\"setup\", \"development\"]\n      },\n      \"order\": 16,\n      \"hasContent\": true,\n      \"lastEditedAt\": \"2023-09-06T18:00:00.000Z\"\n    }\n  ],\n  \"pagination\": {\n    \"total\": 16,\n    \"page\": 1,\n    \"limit\": 25,\n    \"totalPages\": 1,\n    \"hasNext\": false,\n    \"hasPrev\": false\n  },\n  \"view\": {\n    \"id\": \"view_default\",\n    \"name\": \"All Tasks\",\n    \"appliedFilters\": [],\n    \"appliedSorts\": [\n      {\n        \"property\": \"created_at\",\n        \"direction\": \"descending\"\n      }\n    ]\n  }\n}"
            }
          ]
        },
        {
          "name": "Get Database Record by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/records/64f8a1b2c3d4e5f6a7b8c9da",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "records", "64f8a1b2c3d4e5f6a7b8c9da"]
            },
            "description": "Get a specific record with full properties and rich content"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/databases/64f8a1b2c3d4e5f6a7b8c9d1/records/64f8a1b2c3d4e5f6a7b8c9da",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "64f8a1b2c3d4e5f6a7b8c9d1", "records", "64f8a1b2c3d4e5f6a7b8c9da"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Record retrieved successfully\",\n  \"data\": {\n    \"id\": \"64f8a1b2c3d4e5f6a7b8c9da\",\n    \"databaseId\": \"64f8a1b2c3d4e5f6a7b8c9d1\",\n    \"properties\": {\n      \"name\": \"Setup development environment\",\n      \"status\": \"not_started\",\n      \"priority\": \"medium\",\n      \"due_date\": \"2023-09-15T17:00:00.000Z\",\n      \"assignee\": [\"64f8a1b2c3d4e5f6a7b8c9d0\"],\n      \"estimated_hours\": 4,\n      \"tags\": [\"setup\", \"development\", \"environment\"],\n      \"description\": \"Set up local development environment with all necessary tools and dependencies\"\n    },\n    \"content\": [\n      {\n        \"id\": \"block_1693996800010\",\n        \"type\": \"heading_2\",\n        \"content\": [\n          {\n            \"type\": \"text\",\n            \"text\": {\n              \"content\": \"Development Environment Setup\"\n            },\n            \"annotations\": {\n              \"bold\": false,\n              \"italic\": false,\n              \"strikethrough\": false,\n              \"underline\": false,\n              \"code\": false,\n              \"color\": \"default\"\n            },\n            \"plain_text\": \"Development Environment Setup\"\n          }\n        ],\n        \"createdAt\": \"2023-09-06T18:00:00.000Z\",\n        \"createdBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n        \"lastEditedAt\": \"2023-09-06T18:00:00.000Z\",\n        \"lastEditedBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\"\n      },\n      {\n        \"id\": \"block_1693996800011\",\n        \"type\": \"to_do\",\n        \"content\": [\n          {\n            \"type\": \"text\",\n            \"text\": {\n              \"content\": \"Install Node.js and npm\"\n            },\n            \"annotations\": {\n              \"bold\": false,\n              \"italic\": false,\n              \"strikethrough\": false,\n              \"underline\": false,\n              \"code\": false,\n              \"color\": \"default\"\n            },\n            \"plain_text\": \"Install Node.js and npm\"\n          }\n        ],\n        \"checked\": true,\n        \"createdAt\": \"2023-09-06T18:01:00.000Z\",\n        \"createdBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n        \"lastEditedAt\": \"2023-09-06T19:00:00.000Z\",\n        \"lastEditedBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\"\n      }\n    ],\n    \"order\": 16,\n    \"createdAt\": \"2023-09-06T18:00:00.000Z\",\n    \"updatedAt\": \"2023-09-06T19:00:00.000Z\",\n    \"createdBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n    \"lastEditedBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n    \"lastEditedAt\": \"2023-09-06T19:00:00.000Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Update Database Record",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"properties\": {\n    \"status\": \"in_progress\",\n    \"priority\": \"high\",\n    \"estimated_hours\": 6,\n    \"tags\": [\"setup\", \"development\", \"environment\", \"urgent\"]\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/records/64f8a1b2c3d4e5f6a7b8c9da",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "records", "64f8a1b2c3d4e5f6a7b8c9da"]
            },
            "description": "Update record properties (inline edits)"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"properties\": {\n    \"status\": \"in_progress\",\n    \"priority\": \"high\"\n  }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/databases/64f8a1b2c3d4e5f6a7b8c9da/records/64f8a1b2c3d4e5f6a7b8c9da",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "64f8a1b2c3d4e5f6a7b8c9da", "records", "64f8a1b2c3d4e5f6a7b8c9da"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Record updated successfully\",\n  \"data\": {\n    \"id\": \"64f8a1b2c3d4e5f6a7b8c9da\",\n    \"properties\": {\n      \"status\": \"in_progress\",\n      \"priority\": \"high\",\n      \"estimated_hours\": 6,\n      \"tags\": [\"setup\", \"development\", \"environment\", \"urgent\"]\n    },\n    \"updatedAt\": \"2023-09-06T19:30:00.000Z\",\n    \"lastEditedBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n    \"lastEditedAt\": \"2023-09-06T19:30:00.000Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Bulk Update Records",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"recordIds\": [\n    \"64f8a1b2c3d4e5f6a7b8c9d4\",\n    \"64f8a1b2c3d4e5f6a7b8c9da\",\n    \"64f8a1b2c3d4e5f6a7b8c9db\"\n  ],\n  \"updates\": {\n    \"properties\": {\n      \"assignee\": [\"{{userId}}\"],\n      \"tags\": [\"sprint-1\", \"q4\"]\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/records/bulk-update",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "records", "bulk-update"]
            },
            "description": "Bulk update multiple records with same property changes"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"recordIds\": [\"64f8a1b2c3d4e5f6a7b8c9d4\", \"64f8a1b2c3d4e5f6a7b8c9da\"],\n  \"updates\": {\n    \"properties\": {\n      \"assignee\": [\"64f8a1b2c3d4e5f6a7b8c9d0\"]\n    }\n  }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/databases/64f8a1b2c3d4e5f6a7b8c9d1/records/bulk-update",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "64f8a1b2c3d4e5f6a7b8c9d1", "records", "bulk-update"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Records updated successfully\",\n  \"data\": {\n    \"updatedCount\": 3,\n    \"failedCount\": 0,\n    \"updatedRecords\": [\n      \"64f8a1b2c3d4e5f6a7b8c9d4\",\n      \"64f8a1b2c3d4e5f6a7b8c9da\",\n      \"64f8a1b2c3d4e5f6a7b8c9db\"\n    ],\n    \"updatedAt\": \"2023-09-06T20:00:00.000Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Delete Database Record",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/records/64f8a1b2c3d4e5f6a7b8c9da",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "records", "64f8a1b2c3d4e5f6a7b8c9da"]
            },
            "description": "Delete a database record"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/databases/64f8a1b2c3d4e5f6a7b8c9d1/records/64f8a1b2c3d4e5f6a7b8c9da",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "64f8a1b2c3d4e5f6a7b8c9d1", "records", "64f8a1b2c3d4e5f6a7b8c9da"]
                }
              },
              "status": "No Content",
              "code": 204,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        }
      ]
    },
    {
      "name": "Rich Content Blocks",
      "description": "Rich-text block operations for records (page-like editor)",
      "item": [
        {
          "name": "Add Content Block",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"bulleted_list_item\",\n  \"content\": [\n    {\n      \"type\": \"text\",\n      \"text\": {\n        \"content\": \"Configure database connection settings\"\n      },\n      \"annotations\": {\n        \"bold\": false,\n        \"italic\": false,\n        \"strikethrough\": false,\n        \"underline\": false,\n        \"code\": false,\n        \"color\": \"default\"\n      },\n      \"plain_text\": \"Configure database connection settings\"\n    }\n  ],\n  \"afterBlockId\": \"block_1693996800012\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/records/64f8a1b2c3d4e5f6a7b8c9da/blocks",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "records", "64f8a1b2c3d4e5f6a7b8c9da", "blocks"]
            },
            "description": "Add a new content block to a record"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"type\": \"bulleted_list_item\",\n  \"content\": [\n    {\n      \"type\": \"text\",\n      \"text\": {\n        \"content\": \"Configure database connection settings\"\n      }\n    }\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/databases/64f8a1b2c3d4e5f6a7b8c9d1/records/64f8a1b2c3d4e5f6a7b8c9da/blocks",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "64f8a1b2c3d4e5f6a7b8c9d1", "records", "64f8a1b2c3d4e5f6a7b8c9da", "blocks"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Content block added successfully\",\n  \"data\": {\n    \"id\": \"block_1693996800013\",\n    \"type\": \"bulleted_list_item\",\n    \"content\": [\n      {\n        \"type\": \"text\",\n        \"text\": {\n          \"content\": \"Configure database connection settings\"\n        },\n        \"annotations\": {\n          \"bold\": false,\n          \"italic\": false,\n          \"strikethrough\": false,\n          \"underline\": false,\n          \"code\": false,\n          \"color\": \"default\"\n        },\n        \"plain_text\": \"Configure database connection settings\"\n      }\n    ],\n    \"createdAt\": \"2023-09-06T20:30:00.000Z\",\n    \"createdBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n    \"lastEditedAt\": \"2023-09-06T20:30:00.000Z\",\n    \"lastEditedBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Update Content Block",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": [\n    {\n      \"type\": \"text\",\n      \"text\": {\n        \"content\": \"Configure database connection settings and environment variables\"\n      },\n      \"annotations\": {\n        \"bold\": true,\n        \"italic\": false,\n        \"strikethrough\": false,\n        \"underline\": false,\n        \"code\": false,\n        \"color\": \"blue\"\n      },\n      \"plain_text\": \"Configure database connection settings and environment variables\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/records/64f8a1b2c3d4e5f6a7b8c9da/blocks/block_1693996800013",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "records", "64f8a1b2c3d4e5f6a7b8c9da", "blocks", "block_1693996800013"]
            },
            "description": "Update content block text and formatting"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": [\n    {\n      \"type\": \"text\",\n      \"text\": {\n        \"content\": \"Configure database connection settings and environment variables\"\n      },\n      \"annotations\": {\n        \"bold\": true\n      }\n    }\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/databases/64f8a1b2c3d4e5f6a7b8c9d1/records/64f8a1b2c3d4e5f6a7b8c9da/blocks/block_1693996800013",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "64f8a1b2c3d4e5f6a7b8c9d1", "records", "64f8a1b2c3d4e5f6a7b8c9da", "blocks", "block_1693996800013"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Content block updated successfully\",\n  \"data\": {\n    \"id\": \"block_1693996800013\",\n    \"content\": [\n      {\n        \"type\": \"text\",\n        \"text\": {\n          \"content\": \"Configure database connection settings and environment variables\"\n        },\n        \"annotations\": {\n          \"bold\": true,\n          \"italic\": false,\n          \"strikethrough\": false,\n          \"underline\": false,\n          \"code\": false,\n          \"color\": \"blue\"\n        },\n        \"plain_text\": \"Configure database connection settings and environment variables\"\n      }\n    ],\n    \"lastEditedAt\": \"2023-09-06T21:00:00.000Z\",\n    \"lastEditedBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Delete Content Block",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/records/64f8a1b2c3d4e5f6a7b8c9da/blocks/block_1693996800013",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "records", "64f8a1b2c3d4e5f6a7b8c9da", "blocks", "block_1693996800013"]
            },
            "description": "Delete a content block from a record"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/databases/64f8a1b2c3d4e5f6a7b8c9d1/records/64f8a1b2c3d4e5f6a7b8c9da/blocks/block_1693996800013",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "64f8a1b2c3d4e5f6a7b8c9d1", "records", "64f8a1b2c3d4e5f6a7b8c9da", "blocks", "block_1693996800013"]
                }
              },
              "status": "No Content",
              "code": 204,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        }
      ]
    },
    {
      "name": "User Management",
      "description": "User profile and account management endpoints",
      "item": [
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/me",
              "host": ["{{baseUrl}}"],
              "path": ["users", "me"]
            },
            "description": "Get current authenticated user profile"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/users/me",
                  "host": ["{{baseUrl}}"],
                  "path": ["users", "me"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"User profile retrieved successfully\",\n  \"data\": {\n    \"id\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n    \"email\": \"john.doe@example.com\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"username\": \"johndoe\",\n    \"avatar\": \"https://example.com/avatars/john.jpg\",\n    \"bio\": \"Software developer passionate about productivity tools\",\n    \"timezone\": \"America/New_York\",\n    \"language\": \"en\",\n    \"isEmailVerified\": true,\n    \"role\": \"user\",\n    \"preferences\": {\n      \"theme\": \"dark\",\n      \"notifications\": {\n        \"email\": true,\n        \"push\": false\n      }\n    },\n    \"createdAt\": \"2023-09-06T10:30:00.000Z\",\n    \"updatedAt\": \"2023-09-06T10:30:00.000Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Update Current User",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Smith\",\n  \"bio\": \"Updated bio description\",\n  \"timezone\": \"America/Los_Angeles\",\n  \"preferences\": {\n    \"theme\": \"light\",\n    \"notifications\": {\n      \"email\": true,\n      \"push\": true\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/me",
              "host": ["{{baseUrl}}"],
              "path": ["users", "me"]
            },
            "description": "Update current user profile"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Smith\",\n  \"bio\": \"Updated bio description\",\n  \"timezone\": \"America/Los_Angeles\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/users/me",
                  "host": ["{{baseUrl}}"],
                  "path": ["users", "me"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"User profile updated successfully\",\n  \"data\": {\n    \"id\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n    \"email\": \"john.doe@example.com\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Smith\",\n    \"username\": \"johndoe\",\n    \"bio\": \"Updated bio description\",\n    \"timezone\": \"America/Los_Angeles\",\n    \"updatedAt\": \"2023-09-06T11:30:00.000Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Change Password",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"oldPassword\": \"SecurePassword123!\",\n  \"newPassword\": \"NewSecurePassword456!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/change-password",
              "host": ["{{baseUrl}}"],
              "path": ["users", "change-password"]
            },
            "description": "Change user password"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"oldPassword\": \"SecurePassword123!\",\n  \"newPassword\": \"NewSecurePassword456!\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/users/change-password",
                  "host": ["{{baseUrl}}"],
                  "path": ["users", "change-password"]
                }
              },
              "status": "No Content",
              "code": 204,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Delete Account",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"password\": \"SecurePassword123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/me",
              "host": ["{{baseUrl}}"],
              "path": ["users", "me"]
            },
            "description": "Delete user account (requires password confirmation)"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"password\": \"SecurePassword123!\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/users/me",
                  "host": ["{{baseUrl}}"],
                  "path": ["users", "me"]
                }
              },
              "status": "No Content",
              "code": 204,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        }
      ]
    },
    {
      "name": "Tasks Management",
      "description": "Task management endpoints with rich content support",
      "item": [
        {
          "name": "Create Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"databaseId\": \"{{databaseId}}\",\n  \"name\": \"Implement user authentication\",\n  \"description\": \"Add JWT-based authentication system with login, register, and password reset functionality\",\n  \"status\": \"not_started\",\n  \"priority\": \"high\",\n  \"dueDate\": \"2023-09-10T17:00:00.000Z\",\n  \"estimatedHours\": 8,\n  \"projectId\": \"project_123\",\n  \"assigneeIds\": [\"{{userId}}\"],\n  \"labels\": [\"backend\", \"security\", \"authentication\"],\n  \"checklistItems\": [\n    {\n      \"text\": \"Set up JWT library\",\n      \"order\": 0\n    },\n    {\n      \"text\": \"Create authentication middleware\",\n      \"order\": 1\n    },\n    {\n      \"text\": \"Implement login endpoint\",\n      \"order\": 2\n    },\n    {\n      \"text\": \"Add password reset functionality\",\n      \"order\": 3\n    }\n  ],\n  \"customFields\": {\n    \"complexity\": \"medium\",\n    \"epic\": \"User Management\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["tasks"]
            },
            "description": "Create a new task with rich properties and checklist"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"databaseId\": \"64f8a1b2c3d4e5f6a7b8c9d1\",\n  \"name\": \"Implement user authentication\",\n  \"description\": \"Add JWT-based authentication system\",\n  \"priority\": \"high\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/tasks",
                  "host": ["{{baseUrl}}"],
                  "path": ["tasks"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Task created successfully\",\n  \"data\": {\n    \"id\": \"64f8a1b2c3d4e5f6a7b8c9d4\",\n    \"databaseId\": \"64f8a1b2c3d4e5f6a7b8c9d1\",\n    \"name\": \"Implement user authentication\",\n    \"description\": \"Add JWT-based authentication system with login, register, and password reset functionality\",\n    \"status\": \"not_started\",\n    \"priority\": \"high\",\n    \"dueDate\": \"2023-09-10T17:00:00.000Z\",\n    \"estimatedHours\": 8,\n    \"projectId\": \"project_123\",\n    \"assigneeIds\": [\"64f8a1b2c3d4e5f6a7b8c9d0\"],\n    \"assigneeNames\": [\"John Doe\"],\n    \"labels\": [\"backend\", \"security\", \"authentication\"],\n    \"progressPercentage\": 0,\n    \"checklistItems\": [\n      {\n        \"id\": \"checklist_1693996800000_0\",\n        \"text\": \"Set up JWT library\",\n        \"isCompleted\": false,\n        \"order\": 0\n      },\n      {\n        \"id\": \"checklist_1693996800000_1\",\n        \"text\": \"Create authentication middleware\",\n        \"isCompleted\": false,\n        \"order\": 1\n      },\n      {\n        \"id\": \"checklist_1693996800000_2\",\n        \"text\": \"Implement login endpoint\",\n        \"isCompleted\": false,\n        \"order\": 2\n      },\n      {\n        \"id\": \"checklist_1693996800000_3\",\n        \"text\": \"Add password reset functionality\",\n        \"isCompleted\": false,\n        \"order\": 3\n      }\n    ],\n    \"dependsOnTaskIds\": [],\n    \"blockedByTaskIds\": [],\n    \"timeEntries\": [],\n    \"totalTimeSpent\": 0,\n    \"isRecurring\": false,\n    \"customFields\": {\n      \"complexity\": \"medium\",\n      \"epic\": \"User Management\"\n    },\n    \"content\": [],\n    \"createdAt\": \"2023-09-06T13:00:00.000Z\",\n    \"updatedAt\": \"2023-09-06T13:00:00.000Z\",\n    \"createdBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\"\n  }\n}"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('taskId', response.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Task by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}"]
            },
            "description": "Get detailed information about a specific task including rich content"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/tasks/64f8a1b2c3d4e5f6a7b8c9d4",
                  "host": ["{{baseUrl}}"],
                  "path": ["tasks", "64f8a1b2c3d4e5f6a7b8c9d4"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Task retrieved successfully\",\n  \"data\": {\n    \"id\": \"64f8a1b2c3d4e5f6a7b8c9d4\",\n    \"databaseId\": \"64f8a1b2c3d4e5f6a7b8c9d1\",\n    \"name\": \"Implement user authentication\",\n    \"description\": \"Add JWT-based authentication system with login, register, and password reset functionality\",\n    \"status\": \"in_progress\",\n    \"priority\": \"high\",\n    \"dueDate\": \"2023-09-10T17:00:00.000Z\",\n    \"startDate\": \"2023-09-06T09:00:00.000Z\",\n    \"estimatedHours\": 8,\n    \"actualHours\": 3.5,\n    \"projectId\": \"project_123\",\n    \"projectName\": \"User Management System\",\n    \"assigneeIds\": [\"64f8a1b2c3d4e5f6a7b8c9d0\"],\n    \"assigneeNames\": [\"John Doe\"],\n    \"labels\": [\"backend\", \"security\", \"authentication\"],\n    \"progressPercentage\": 50,\n    \"checklistItems\": [\n      {\n        \"id\": \"checklist_1693996800000_0\",\n        \"text\": \"Set up JWT library\",\n        \"isCompleted\": true,\n        \"completedAt\": \"2023-09-06T10:30:00.000Z\",\n        \"completedBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n        \"order\": 0\n      },\n      {\n        \"id\": \"checklist_1693996800000_1\",\n        \"text\": \"Create authentication middleware\",\n        \"isCompleted\": true,\n        \"completedAt\": \"2023-09-06T12:15:00.000Z\",\n        \"completedBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n        \"order\": 1\n      },\n      {\n        \"id\": \"checklist_1693996800000_2\",\n        \"text\": \"Implement login endpoint\",\n        \"isCompleted\": false,\n        \"order\": 2\n      },\n      {\n        \"id\": \"checklist_1693996800000_3\",\n        \"text\": \"Add password reset functionality\",\n        \"isCompleted\": false,\n        \"order\": 3\n      }\n    ],\n    \"content\": [\n      {\n        \"id\": \"block_1693996800001\",\n        \"type\": \"heading_2\",\n        \"content\": [\n          {\n            \"type\": \"text\",\n            \"text\": {\n              \"content\": \"Implementation Notes\"\n            },\n            \"annotations\": {\n              \"bold\": false,\n              \"italic\": false,\n              \"strikethrough\": false,\n              \"underline\": false,\n              \"code\": false,\n              \"color\": \"default\"\n            },\n            \"plain_text\": \"Implementation Notes\"\n          }\n        ],\n        \"createdAt\": \"2023-09-06T13:00:00.000Z\",\n        \"createdBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n        \"lastEditedAt\": \"2023-09-06T13:00:00.000Z\",\n        \"lastEditedBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\"\n      },\n      {\n        \"id\": \"block_1693996800002\",\n        \"type\": \"paragraph\",\n        \"content\": [\n          {\n            \"type\": \"text\",\n            \"text\": {\n              \"content\": \"Using JWT for stateless authentication. Need to implement proper token refresh mechanism and secure storage.\"\n            },\n            \"annotations\": {\n              \"bold\": false,\n              \"italic\": false,\n              \"strikethrough\": false,\n              \"underline\": false,\n              \"code\": false,\n              \"color\": \"default\"\n            },\n            \"plain_text\": \"Using JWT for stateless authentication. Need to implement proper token refresh mechanism and secure storage.\"\n          }\n        ],\n        \"createdAt\": \"2023-09-06T13:05:00.000Z\",\n        \"createdBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n        \"lastEditedAt\": \"2023-09-06T13:05:00.000Z\",\n        \"lastEditedBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\"\n      }\n    ],\n    \"timeEntries\": [\n      {\n        \"id\": \"time_1693996800001\",\n        \"startTime\": \"2023-09-06T09:00:00.000Z\",\n        \"endTime\": \"2023-09-06T12:30:00.000Z\",\n        \"duration\": 210,\n        \"description\": \"Initial setup and middleware implementation\",\n        \"userId\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n        \"createdAt\": \"2023-09-06T12:30:00.000Z\"\n      }\n    ],\n    \"totalTimeSpent\": 210,\n    \"dependsOnTaskIds\": [],\n    \"blockedByTaskIds\": [],\n    \"isRecurring\": false,\n    \"customFields\": {\n      \"complexity\": \"medium\",\n      \"epic\": \"User Management\"\n    },\n    \"createdAt\": \"2023-09-06T13:00:00.000Z\",\n    \"updatedAt\": \"2023-09-06T14:30:00.000Z\",\n    \"createdBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n    \"lastEditedBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n    \"lastEditedAt\": \"2023-09-06T14:30:00.000Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Update Task",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Implement user authentication system\",\n  \"description\": \"Updated description with more details\",\n  \"status\": \"in_progress\",\n  \"priority\": \"urgent\",\n  \"progressPercentage\": 75,\n  \"actualHours\": 6,\n  \"labels\": [\"backend\", \"security\", \"authentication\", \"urgent\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}"]
            },
            "description": "Update task properties"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"status\": \"in_progress\",\n  \"progressPercentage\": 75\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/tasks/64f8a1b2c3d4e5f6a7b8c9d4",
                  "host": ["{{baseUrl}}"],
                  "path": ["tasks", "64f8a1b2c3d4e5f6a7b8c9d4"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Task updated successfully\",\n  \"data\": {\n    \"id\": \"64f8a1b2c3d4e5f6a7b8c9d4\",\n    \"name\": \"Implement user authentication system\",\n    \"status\": \"in_progress\",\n    \"priority\": \"urgent\",\n    \"progressPercentage\": 75,\n    \"actualHours\": 6,\n    \"labels\": [\"backend\", \"security\", \"authentication\", \"urgent\"],\n    \"updatedAt\": \"2023-09-06T15:00:00.000Z\",\n    \"lastEditedBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n    \"lastEditedAt\": \"2023-09-06T15:00:00.000Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Complete Task",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}/complete",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}", "complete"]
            },
            "description": "Mark task as completed"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/tasks/64f8a1b2c3d4e5f6a7b8c9d4/complete",
                  "host": ["{{baseUrl}}"],
                  "path": ["tasks", "64f8a1b2c3d4e5f6a7b8c9d4", "complete"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Task completed successfully\",\n  \"data\": {\n    \"id\": \"64f8a1b2c3d4e5f6a7b8c9d4\",\n    \"status\": \"completed\",\n    \"progressPercentage\": 100,\n    \"completedAt\": \"2023-09-06T16:00:00.000Z\",\n    \"completedBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n    \"updatedAt\": \"2023-09-06T16:00:00.000Z\"\n  }\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Notes Management",
      "description": "Notes management with rich content blocks (Notion-like pages)",
      "item": [
        {
          "name": "Create Note",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"databaseId\": \"{{databaseId}}\",\n  \"title\": \"Meeting Notes - Product Planning\",\n  \"summary\": \"Discussion about upcoming features and roadmap priorities for Q4\",\n  \"tags\": [\"meeting\", \"planning\", \"product\", \"q4\"],\n  \"content\": [\n    {\n      \"id\": \"block_1693996800001\",\n      \"type\": \"heading_1\",\n      \"content\": [\n        {\n          \"type\": \"text\",\n          \"text\": {\n            \"content\": \"Product Planning Meeting - September 6, 2023\"\n          },\n          \"annotations\": {\n            \"bold\": false,\n            \"italic\": false,\n            \"strikethrough\": false,\n            \"underline\": false,\n            \"code\": false,\n            \"color\": \"default\"\n          },\n          \"plain_text\": \"Product Planning Meeting - September 6, 2023\"\n        }\n      ],\n      \"createdAt\": \"2023-09-06T14:00:00.000Z\",\n      \"createdBy\": \"{{userId}}\",\n      \"lastEditedAt\": \"2023-09-06T14:00:00.000Z\",\n      \"lastEditedBy\": \"{{userId}}\"\n    },\n    {\n      \"id\": \"block_1693996800002\",\n      \"type\": \"paragraph\",\n      \"content\": [\n        {\n          \"type\": \"text\",\n          \"text\": {\n            \"content\": \"Attendees: \"\n          },\n          \"annotations\": {\n            \"bold\": true,\n            \"italic\": false,\n            \"strikethrough\": false,\n            \"underline\": false,\n            \"code\": false,\n            \"color\": \"default\"\n          },\n          \"plain_text\": \"Attendees: \"\n        },\n        {\n          \"type\": \"mention\",\n          \"mention\": {\n            \"type\": \"user\",\n            \"user\": {\n              \"id\": \"{{userId}}\",\n              \"name\": \"John Doe\"\n            }\n          },\n          \"annotations\": {\n            \"bold\": false,\n            \"italic\": false,\n            \"strikethrough\": false,\n            \"underline\": false,\n            \"code\": false,\n            \"color\": \"default\"\n          },\n          \"plain_text\": \"@John Doe\"\n        },\n        {\n          \"type\": \"text\",\n          \"text\": {\n            \"content\": \", Jane Smith, Mike Johnson\"\n          },\n          \"annotations\": {\n            \"bold\": false,\n            \"italic\": false,\n            \"strikethrough\": false,\n            \"underline\": false,\n            \"code\": false,\n            \"color\": \"default\"\n          },\n          \"plain_text\": \", Jane Smith, Mike Johnson\"\n        }\n      ],\n      \"createdAt\": \"2023-09-06T14:01:00.000Z\",\n      \"createdBy\": \"{{userId}}\",\n      \"lastEditedAt\": \"2023-09-06T14:01:00.000Z\",\n      \"lastEditedBy\": \"{{userId}}\"\n    },\n    {\n      \"id\": \"block_1693996800003\",\n      \"type\": \"heading_2\",\n      \"content\": [\n        {\n          \"type\": \"text\",\n          \"text\": {\n            \"content\": \"Key Discussion Points\"\n          },\n          \"annotations\": {\n            \"bold\": false,\n            \"italic\": false,\n            \"strikethrough\": false,\n            \"underline\": false,\n            \"code\": false,\n            \"color\": \"default\"\n          },\n          \"plain_text\": \"Key Discussion Points\"\n        }\n      ],\n      \"createdAt\": \"2023-09-06T14:02:00.000Z\",\n      \"createdBy\": \"{{userId}}\",\n      \"lastEditedAt\": \"2023-09-06T14:02:00.000Z\",\n      \"lastEditedBy\": \"{{userId}}\"\n    },\n    {\n      \"id\": \"block_1693996800004\",\n      \"type\": \"bulleted_list_item\",\n      \"content\": [\n        {\n          \"type\": \"text\",\n          \"text\": {\n            \"content\": \"User authentication system - high priority\"\n          },\n          \"annotations\": {\n            \"bold\": false,\n            \"italic\": false,\n            \"strikethrough\": false,\n            \"underline\": false,\n            \"code\": false,\n            \"color\": \"default\"\n          },\n          \"plain_text\": \"User authentication system - high priority\"\n        }\n      ],\n      \"createdAt\": \"2023-09-06T14:03:00.000Z\",\n      \"createdBy\": \"{{userId}}\",\n      \"lastEditedAt\": \"2023-09-06T14:03:00.000Z\",\n      \"lastEditedBy\": \"{{userId}}\"\n    },\n    {\n      \"id\": \"block_1693996800005\",\n      \"type\": \"to_do\",\n      \"content\": [\n        {\n          \"type\": \"text\",\n          \"text\": {\n            \"content\": \"Create technical specification document\"\n          },\n          \"annotations\": {\n            \"bold\": false,\n            \"italic\": false,\n            \"strikethrough\": false,\n            \"underline\": false,\n            \"code\": false,\n            \"color\": \"default\"\n          },\n          \"plain_text\": \"Create technical specification document\"\n        }\n      ],\n      \"checked\": false,\n      \"createdAt\": \"2023-09-06T14:04:00.000Z\",\n      \"createdBy\": \"{{userId}}\",\n      \"lastEditedAt\": \"2023-09-06T14:04:00.000Z\",\n      \"lastEditedBy\": \"{{userId}}\"\n    }\n  ],\n  \"isPublished\": false,\n  \"allowComments\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/notes",
              "host": ["{{baseUrl}}"],
              "path": ["notes"]
            },
            "description": "Create a new note with rich content blocks"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"databaseId\": \"64f8a1b2c3d4e5f6a7b8c9d2\",\n  \"title\": \"Meeting Notes - Product Planning\",\n  \"tags\": [\"meeting\", \"planning\"]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/notes",
                  "host": ["{{baseUrl}}"],
                  "path": ["notes"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Note created successfully\",\n  \"data\": {\n    \"id\": \"64f8a1b2c3d4e5f6a7b8c9d6\",\n    \"databaseId\": \"64f8a1b2c3d4e5f6a7b8c9d2\",\n    \"title\": \"Meeting Notes - Product Planning\",\n    \"summary\": \"Discussion about upcoming features and roadmap priorities for Q4\",\n    \"tags\": [\"meeting\", \"planning\", \"product\", \"q4\"],\n    \"wordCount\": 156,\n    \"readingTime\": 1,\n    \"viewCount\": 0,\n    \"linkedNotes\": [],\n    \"backlinks\": [],\n    \"mentions\": [\"64f8a1b2c3d4e5f6a7b8c9d0\"],\n    \"isPublished\": false,\n    \"isBookmarked\": false,\n    \"allowComments\": true,\n    \"extractedKeywords\": [\"product\", \"planning\", \"meeting\", \"features\", \"roadmap\"],\n    \"suggestedTags\": [\"roadmap\", \"features\"],\n    \"content\": [\n      {\n        \"id\": \"block_1693996800001\",\n        \"type\": \"heading_1\",\n        \"content\": [\n          {\n            \"type\": \"text\",\n            \"text\": {\n              \"content\": \"Product Planning Meeting - September 6, 2023\"\n            },\n            \"annotations\": {\n              \"bold\": false,\n              \"italic\": false,\n              \"strikethrough\": false,\n              \"underline\": false,\n              \"code\": false,\n              \"color\": \"default\"\n            },\n            \"plain_text\": \"Product Planning Meeting - September 6, 2023\"\n          }\n        ],\n        \"createdAt\": \"2023-09-06T14:00:00.000Z\",\n        \"createdBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n        \"lastEditedAt\": \"2023-09-06T14:00:00.000Z\",\n        \"lastEditedBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\"\n      }\n    ],\n    \"createdAt\": \"2023-09-06T14:00:00.000Z\",\n    \"updatedAt\": \"2023-09-06T14:00:00.000Z\",\n    \"createdBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\"\n  }\n}"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('noteId', response.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Notes",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/notes?databaseId={{databaseId}}&tags=meeting,planning&sortBy=updatedAt&sortOrder=desc&includeContent=false&page=1&limit=25",
              "host": ["{{baseUrl}}"],
              "path": ["notes"],
              "query": [
                {
                  "key": "databaseId",
                  "value": "{{databaseId}}",
                  "description": "Filter by database"
                },
                {
                  "key": "tags",
                  "value": "meeting,planning",
                  "description": "Filter by tags"
                },
                {
                  "key": "sortBy",
                  "value": "updatedAt",
                  "description": "Sort field"
                },
                {
                  "key": "sortOrder",
                  "value": "desc",
                  "description": "Sort order"
                },
                {
                  "key": "includeContent",
                  "value": "false",
                  "description": "Include full content blocks"
                },
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                },
                {
                  "key": "limit",
                  "value": "25",
                  "description": "Items per page"
                }
              ]
            },
            "description": "Get notes with filtering and pagination"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/notes?databaseId=64f8a1b2c3d4e5f6a7b8c9d2",
                  "host": ["{{baseUrl}}"],
                  "path": ["notes"],
                  "query": [
                    {
                      "key": "databaseId",
                      "value": "64f8a1b2c3d4e5f6a7b8c9d2"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Notes retrieved successfully\",\n  \"data\": [\n    {\n      \"id\": \"64f8a1b2c3d4e5f6a7b8c9d6\",\n      \"title\": \"Meeting Notes - Product Planning\",\n      \"summary\": \"Discussion about upcoming features and roadmap priorities for Q4\",\n      \"tags\": [\"meeting\", \"planning\", \"product\", \"q4\"],\n      \"wordCount\": 156,\n      \"readingTime\": 1,\n      \"viewCount\": 5,\n      \"isPublished\": false,\n      \"isBookmarked\": true,\n      \"lastViewedAt\": \"2023-09-06T15:30:00.000Z\",\n      \"createdAt\": \"2023-09-06T14:00:00.000Z\",\n      \"updatedAt\": \"2023-09-06T14:30:00.000Z\"\n    },\n    {\n      \"id\": \"64f8a1b2c3d4e5f6a7b8c9d7\",\n      \"title\": \"API Documentation Guidelines\",\n      \"summary\": \"Best practices for writing comprehensive API documentation\",\n      \"tags\": [\"documentation\", \"api\", \"guidelines\"],\n      \"wordCount\": 892,\n      \"readingTime\": 4,\n      \"viewCount\": 12,\n      \"isPublished\": true,\n      \"isBookmarked\": false,\n      \"lastViewedAt\": \"2023-09-06T13:45:00.000Z\",\n      \"createdAt\": \"2023-09-05T16:00:00.000Z\",\n      \"updatedAt\": \"2023-09-06T10:15:00.000Z\"\n    }\n  ],\n  \"pagination\": {\n    \"total\": 28,\n    \"page\": 1,\n    \"limit\": 25,\n    \"totalPages\": 2,\n    \"hasNext\": true,\n    \"hasPrev\": false,\n    \"stats\": {\n      \"total\": 28,\n      \"published\": 12,\n      \"drafts\": 16,\n      \"bookmarked\": 8,\n      \"totalWordCount\": 15420,\n      \"averageWordCount\": 551,\n      \"totalReadingTime\": 77,\n      \"mostUsedTags\": [\n        {\n          \"tag\": \"meeting\",\n          \"count\": 8\n        },\n        {\n          \"tag\": \"documentation\",\n          \"count\": 6\n        }\n      ]\n    }\n  }\n}"
            }
          ]
        },
        {
          "name": "Get Note by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/notes/{{noteId}}",
              "host": ["{{baseUrl}}"],
              "path": ["notes", "{{noteId}}"]
            },
            "description": "Get detailed note with full rich content"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/notes/64f8a1b2c3d4e5f6a7b8c9d6",
                  "host": ["{{baseUrl}}"],
                  "path": ["notes", "64f8a1b2c3d4e5f6a7b8c9d6"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Note retrieved successfully\",\n  \"data\": {\n    \"id\": \"64f8a1b2c3d4e5f6a7b8c9d6\",\n    \"databaseId\": \"64f8a1b2c3d4e5f6a7b8c9d2\",\n    \"title\": \"Meeting Notes - Product Planning\",\n    \"summary\": \"Discussion about upcoming features and roadmap priorities for Q4\",\n    \"tags\": [\"meeting\", \"planning\", \"product\", \"q4\"],\n    \"wordCount\": 156,\n    \"readingTime\": 1,\n    \"viewCount\": 6,\n    \"linkedNotes\": [\"64f8a1b2c3d4e5f6a7b8c9d7\"],\n    \"backlinks\": [],\n    \"mentions\": [\"64f8a1b2c3d4e5f6a7b8c9d0\"],\n    \"isPublished\": false,\n    \"isBookmarked\": true,\n    \"allowComments\": true,\n    \"extractedKeywords\": [\"product\", \"planning\", \"meeting\", \"features\", \"roadmap\"],\n    \"suggestedTags\": [\"roadmap\", \"features\"],\n    \"content\": [\n      {\n        \"id\": \"block_1693996800001\",\n        \"type\": \"heading_1\",\n        \"content\": [\n          {\n            \"type\": \"text\",\n            \"text\": {\n              \"content\": \"Product Planning Meeting - September 6, 2023\"\n            },\n            \"annotations\": {\n              \"bold\": false,\n              \"italic\": false,\n              \"strikethrough\": false,\n              \"underline\": false,\n              \"code\": false,\n              \"color\": \"default\"\n            },\n            \"plain_text\": \"Product Planning Meeting - September 6, 2023\"\n          }\n        ],\n        \"createdAt\": \"2023-09-06T14:00:00.000Z\",\n        \"createdBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n        \"lastEditedAt\": \"2023-09-06T14:00:00.000Z\",\n        \"lastEditedBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\"\n      },\n      {\n        \"id\": \"block_1693996800005\",\n        \"type\": \"to_do\",\n        \"content\": [\n          {\n            \"type\": \"text\",\n            \"text\": {\n              \"content\": \"Create technical specification document\"\n            },\n            \"annotations\": {\n              \"bold\": false,\n              \"italic\": false,\n              \"strikethrough\": false,\n              \"underline\": false,\n              \"code\": false,\n              \"color\": \"default\"\n            },\n            \"plain_text\": \"Create technical specification document\"\n          }\n        ],\n        \"checked\": true,\n        \"createdAt\": \"2023-09-06T14:04:00.000Z\",\n        \"createdBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n        \"lastEditedAt\": \"2023-09-06T15:30:00.000Z\",\n        \"lastEditedBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\"\n      }\n    ],\n    \"lastViewedAt\": \"2023-09-06T16:00:00.000Z\",\n    \"createdAt\": \"2023-09-06T14:00:00.000Z\",\n    \"updatedAt\": \"2023-09-06T15:30:00.000Z\",\n    \"createdBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n    \"lastEditedBy\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n    \"lastEditedAt\": \"2023-09-06T15:30:00.000Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Search Notes",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/notes/search?q=authentication&databaseId={{databaseId}}&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["notes", "search"],
              "query": [
                {
                  "key": "q",
                  "value": "authentication",
                  "description": "Search query"
                },
                {
                  "key": "databaseId",
                  "value": "{{databaseId}}",
                  "description": "Filter by database"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Number of results"
                }
              ]
            },
            "description": "Search within note content with full-text search"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/notes/search?q=authentication",
                  "host": ["{{baseUrl}}"],
                  "path": ["notes", "search"],
                  "query": [
                    {
                      "key": "q",
                      "value": "authentication"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Search completed successfully\",\n  \"data\": {\n    \"results\": [\n      {\n        \"noteId\": \"64f8a1b2c3d4e5f6a7b8c9d6\",\n        \"title\": \"Meeting Notes - Product Planning\",\n        \"summary\": \"Discussion about upcoming features and roadmap priorities for Q4\",\n        \"tags\": [\"meeting\", \"planning\", \"product\"],\n        \"matches\": [\n          {\n            \"blockId\": \"block_1693996800004\",\n            \"blockType\": \"bulleted_list_item\",\n            \"content\": \"User authentication system - high priority\",\n            \"context\": \"...Key Discussion Points User authentication system - high priority Database design and schema...\"\n          }\n        ],\n        \"score\": 0.95\n      }\n    ],\n    \"total\": 1,\n    \"query\": \"authentication\",\n    \"suggestions\": [\"auth\", \"login\", \"security\"]\n  }\n}"
            }
          ]
        },
        {
          "name": "Get Note Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/notes/stats?databaseId={{databaseId}}",
              "host": ["{{baseUrl}}"],
              "path": ["notes", "stats"],
              "query": [
                {
                  "key": "databaseId",
                  "value": "{{databaseId}}",
                  "description": "Filter stats by database",
                  "disabled": true
                }
              ]
            },
            "description": "Get comprehensive note statistics and analytics"
          },
          "response": []
        },
        {
          "name": "Get Published Notes",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/notes/published?limit=10&sortBy=updatedAt&sortOrder=desc",
              "host": ["{{baseUrl}}"],
              "path": ["notes", "published"],
              "query": [
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Number of results"
                },
                {
                  "key": "sortBy",
                  "value": "updatedAt",
                  "description": "Sort field"
                },
                {
                  "key": "sortOrder",
                  "value": "desc",
                  "description": "Sort order"
                }
              ]
            },
            "description": "Get all published notes"
          },
          "response": []
        },
        {
          "name": "Get Bookmarked Notes",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/notes/bookmarked?limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["notes", "bookmarked"],
              "query": [
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Number of results"
                }
              ]
            },
            "description": "Get all bookmarked notes"
          },
          "response": []
        },
        {
          "name": "Get Notes by Tag",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/notes/tag/meeting?limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["notes", "tag", "meeting"],
              "query": [
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Number of results"
                }
              ]
            },
            "description": "Get notes filtered by specific tag"
          },
          "response": []
        },
        {
          "name": "Update Note Content",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": [\n    {\n      \"id\": \"block_1693996800001\",\n      \"type\": \"heading_1\",\n      \"content\": [\n        {\n          \"type\": \"text\",\n          \"text\": {\n            \"content\": \"Updated Meeting Notes - Product Planning\"\n          },\n          \"annotations\": {\n            \"bold\": false,\n            \"italic\": false,\n            \"strikethrough\": false,\n            \"underline\": false,\n            \"code\": false,\n            \"color\": \"default\"\n          },\n          \"plain_text\": \"Updated Meeting Notes - Product Planning\"\n        }\n      ],\n      \"createdAt\": \"2023-09-06T14:00:00.000Z\",\n      \"createdBy\": \"{{userId}}\",\n      \"lastEditedAt\": \"2023-09-06T16:00:00.000Z\",\n      \"lastEditedBy\": \"{{userId}}\"\n    },\n    {\n      \"id\": \"block_1693996800006\",\n      \"type\": \"paragraph\",\n      \"content\": [\n        {\n          \"type\": \"text\",\n          \"text\": {\n            \"content\": \"This is new content added to the note.\"\n          },\n          \"annotations\": {\n            \"bold\": false,\n            \"italic\": false,\n            \"strikethrough\": false,\n            \"underline\": false,\n            \"code\": false,\n            \"color\": \"default\"\n          },\n          \"plain_text\": \"This is new content added to the note.\"\n        }\n      ],\n      \"createdAt\": \"2023-09-06T16:00:00.000Z\",\n      \"createdBy\": \"{{userId}}\",\n      \"lastEditedAt\": \"2023-09-06T16:00:00.000Z\",\n      \"lastEditedBy\": \"{{userId}}\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/notes/{{noteId}}/content",
              "host": ["{{baseUrl}}"],
              "path": ["notes", "{{noteId}}", "content"]
            },
            "description": "Update note content blocks"
          },
          "response": []
        },
        {
          "name": "Publish Note",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/notes/{{noteId}}/publish",
              "host": ["{{baseUrl}}"],
              "path": ["notes", "{{noteId}}", "publish"]
            },
            "description": "Publish a note to make it publicly visible"
          },
          "response": []
        },
        {
          "name": "Unpublish Note",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/notes/{{noteId}}/unpublish",
              "host": ["{{baseUrl}}"],
              "path": ["notes", "{{noteId}}", "unpublish"]
            },
            "description": "Unpublish a note to make it private"
          },
          "response": []
        },
        {
          "name": "Bookmark Note",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/notes/{{noteId}}/bookmark",
              "host": ["{{baseUrl}}"],
              "path": ["notes", "{{noteId}}", "bookmark"]
            },
            "description": "Add note to bookmarks"
          },
          "response": []
        },
        {
          "name": "Unbookmark Note",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/notes/{{noteId}}/unbookmark",
              "host": ["{{baseUrl}}"],
              "path": ["notes", "{{noteId}}", "unbookmark"]
            },
            "description": "Remove note from bookmarks"
          },
          "response": []
        },
        {
          "name": "Duplicate Note",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Copy of Meeting Notes - Product Planning\",\n  \"databaseId\": \"{{databaseId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/notes/{{noteId}}/duplicate",
              "host": ["{{baseUrl}}"],
              "path": ["notes", "{{noteId}}", "duplicate"]
            },
            "description": "Create a duplicate of an existing note"
          },
          "response": []
        },
        {
          "name": "Bulk Update Notes",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"noteIds\": [\"{{noteId}}\", \"64f8a1b2c3d4e5f6a7b8c9d7\"],\n  \"updates\": {\n    \"tags\": [\"updated\", \"bulk-operation\"],\n    \"isPublished\": true\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/notes/bulk/update",
              "host": ["{{baseUrl}}"],
              "path": ["notes", "bulk", "update"]
            },
            "description": "Update multiple notes at once"
          },
          "response": []
        },
        {
          "name": "Bulk Delete Notes",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"noteIds\": [\"64f8a1b2c3d4e5f6a7b8c9d7\", \"64f8a1b2c3d4e5f6a7b8c9d8\"],\n  \"permanent\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/notes/bulk/delete",
              "host": ["{{baseUrl}}"],
              "path": ["notes", "bulk", "delete"]
            },
            "description": "Delete multiple notes at once"
          },
          "response": []
        },
        {
          "name": "Create Note Template",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Meeting Notes Template\",\n  \"description\": \"Standard template for meeting notes with agenda and action items\",\n  \"content\": [\n    {\n      \"id\": \"template_block_1\",\n      \"type\": \"heading_1\",\n      \"content\": [\n        {\n          \"type\": \"text\",\n          \"text\": {\n            \"content\": \"{{meetingTitle}} - {{date}}\"\n          },\n          \"annotations\": {\n            \"bold\": false,\n            \"italic\": false,\n            \"strikethrough\": false,\n            \"underline\": false,\n            \"code\": false,\n            \"color\": \"default\"\n          },\n          \"plain_text\": \"{{meetingTitle}} - {{date}}\"\n        }\n      ],\n      \"createdAt\": \"2023-09-06T14:00:00.000Z\",\n      \"createdBy\": \"{{userId}}\",\n      \"lastEditedAt\": \"2023-09-06T14:00:00.000Z\",\n      \"lastEditedBy\": \"{{userId}}\"\n    },\n    {\n      \"id\": \"template_block_2\",\n      \"type\": \"heading_2\",\n      \"content\": [\n        {\n          \"type\": \"text\",\n          \"text\": {\n            \"content\": \"Attendees\"\n          },\n          \"annotations\": {\n            \"bold\": false,\n            \"italic\": false,\n            \"strikethrough\": false,\n            \"underline\": false,\n            \"code\": false,\n            \"color\": \"default\"\n          },\n          \"plain_text\": \"Attendees\"\n        }\n      ],\n      \"createdAt\": \"2023-09-06T14:01:00.000Z\",\n      \"createdBy\": \"{{userId}}\",\n      \"lastEditedAt\": \"2023-09-06T14:01:00.000Z\",\n      \"lastEditedBy\": \"{{userId}}\"\n    },\n    {\n      \"id\": \"template_block_3\",\n      \"type\": \"bulleted_list_item\",\n      \"content\": [\n        {\n          \"type\": \"text\",\n          \"text\": {\n            \"content\": \"{{attendee1}}\"\n          },\n          \"annotations\": {\n            \"bold\": false,\n            \"italic\": false,\n            \"strikethrough\": false,\n            \"underline\": false,\n            \"code\": false,\n            \"color\": \"default\"\n          },\n          \"plain_text\": \"{{attendee1}}\"\n        }\n      ],\n      \"createdAt\": \"2023-09-06T14:02:00.000Z\",\n      \"createdBy\": \"{{userId}}\",\n      \"lastEditedAt\": \"2023-09-06T14:02:00.000Z\",\n      \"lastEditedBy\": \"{{userId}}\"\n    }\n  ],\n  \"tags\": [\"meeting\", \"template\"],\n  \"isPublic\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/notes/templates",
              "host": ["{{baseUrl}}"],
              "path": ["notes", "templates"]
            },
            "description": "Create a reusable note template"
          },
          "response": []
        },
        {
          "name": "Get Note Templates",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/notes/templates?search=meeting&tags=template&isPublic=true&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["notes", "templates"],
              "query": [
                {
                  "key": "search",
                  "value": "meeting",
                  "description": "Search templates by name/description"
                },
                {
                  "key": "tags",
                  "value": "template",
                  "description": "Filter by tags"
                },
                {
                  "key": "isPublic",
                  "value": "true",
                  "description": "Show only public templates"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Number of results"
                }
              ]
            },
            "description": "Get available note templates"
          },
          "response": []
        },
        {
          "name": "Get Popular Templates",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/notes/templates/popular?limit=5",
              "host": ["{{baseUrl}}"],
              "path": ["notes", "templates", "popular"],
              "query": [
                {
                  "key": "limit",
                  "value": "5",
                  "description": "Number of popular templates"
                }
              ]
            },
            "description": "Get most popular note templates"
          },
          "response": []
        },
        {
          "name": "Get Featured Templates",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/notes/templates/featured?limit=5",
              "host": ["{{baseUrl}}"],
              "path": ["notes", "templates", "featured"],
              "query": [
                {
                  "key": "limit",
                  "value": "5",
                  "description": "Number of featured templates"
                }
              ]
            },
            "description": "Get featured note templates"
          },
          "response": []
        },
        {
          "name": "Apply Note Template",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"databaseId\": \"{{databaseId}}\",\n  \"title\": \"Weekly Team Meeting - September 13, 2023\",\n  \"customValues\": {\n    \"meetingTitle\": \"Weekly Team Meeting\",\n    \"date\": \"September 13, 2023\",\n    \"attendee1\": \"John Doe\",\n    \"attendee2\": \"Jane Smith\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/notes/templates/{{templateId}}/apply",
              "host": ["{{baseUrl}}"],
              "path": ["notes", "templates", "{{templateId}}", "apply"]
            },
            "description": "Create a note from a template with custom values"
          },
          "response": []
        },
        {
          "name": "Add Comment to Note",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"blockId\": \"block_1693996800004\",\n  \"content\": \"Great point about the authentication system! We should also consider OAuth integration.\",\n  \"parentCommentId\": null\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/notes/{{noteId}}/comments",
              "host": ["{{baseUrl}}"],
              "path": ["notes", "{{noteId}}", "comments"]
            },
            "description": "Add a comment to a specific block in a note"
          },
          "response": []
        },
        {
          "name": "Get Note Comments",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/notes/{{noteId}}/comments?blockId=block_1693996800004",
              "host": ["{{baseUrl}}"],
              "path": ["notes", "{{noteId}}", "comments"],
              "query": [
                {
                  "key": "blockId",
                  "value": "block_1693996800004",
                  "description": "Filter comments by block ID",
                  "disabled": true
                }
              ]
            },
            "description": "Get all comments for a note or specific block"
          },
          "response": []
        },
        {
          "name": "Update Comment",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"Updated comment: Great point about the authentication system! We should also consider OAuth integration and two-factor authentication.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/notes/{{noteId}}/comments/{{commentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["notes", "{{noteId}}", "comments", "{{commentId}}"]
            },
            "description": "Update an existing comment"
          },
          "response": []
        },
        {
          "name": "Delete Comment",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/notes/{{noteId}}/comments/{{commentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["notes", "{{noteId}}", "comments", "{{commentId}}"]
            },
            "description": "Delete a comment"
          },
          "response": []
        },
        {
          "name": "Add Reaction to Comment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"emoji\": \"👍\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/notes/{{noteId}}/comments/{{commentId}}/reactions",
              "host": ["{{baseUrl}}"],
              "path": ["notes", "{{noteId}}", "comments", "{{commentId}}", "reactions"]
            },
            "description": "Add an emoji reaction to a comment"
          },
          "response": []
        },
        {
          "name": "Remove Reaction from Comment",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"emoji\": \"👍\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/notes/{{noteId}}/comments/{{commentId}}/reactions",
              "host": ["{{baseUrl}}"],
              "path": ["notes", "{{noteId}}", "comments", "{{commentId}}", "reactions"]
            },
            "description": "Remove an emoji reaction from a comment"
          },
          "response": []
        },
        {
          "name": "Resolve Comment",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/notes/{{noteId}}/comments/{{commentId}}/resolve",
              "host": ["{{baseUrl}}"],
              "path": ["notes", "{{noteId}}", "comments", "{{commentId}}", "resolve"]
            },
            "description": "Mark a comment as resolved"
          },
          "response": []
        },
        {
          "name": "Unresolve Comment",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/notes/{{noteId}}/comments/{{commentId}}/unresolve",
              "host": ["{{baseUrl}}"],
              "path": ["notes", "{{noteId}}", "comments", "{{commentId}}", "unresolve"]
            },
            "description": "Mark a comment as unresolved"
          },
          "response": []
        },
        {
          "name": "Share Note",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userIds\": [\"64f8a1b2c3d4e5f6a7b8c9d0\", \"64f8a1b2c3d4e5f6a7b8c9d1\"],\n  \"role\": \"commenter\",\n  \"message\": \"Please review this meeting notes and add your feedback.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/notes/{{noteId}}/share",
              "host": ["{{baseUrl}}"],
              "path": ["notes", "{{noteId}}", "share"]
            },
            "description": "Share a note with specific users"
          },
          "response": []
        },
        {
          "name": "Unshare Note",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userIds\": [\"64f8a1b2c3d4e5f6a7b8c9d0\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/notes/{{noteId}}/unshare",
              "host": ["{{baseUrl}}"],
              "path": ["notes", "{{noteId}}", "unshare"]
            },
            "description": "Remove sharing access for specific users"
          },
          "response": []
        },
        {
          "name": "Goals Management",
          "description": "Goal tracking and achievement system with OKR-style progress tracking",
          "item": [
            {
              "name": "Create Goal",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"databaseId\": \"{{databaseId}}\",\n  \"title\": \"Complete Second Brain System\",\n  \"description\": \"Build a comprehensive personal knowledge management system with all modules integrated\",\n  \"category\": \"professional\",\n  \"priority\": \"high\",\n  \"timeFrame\": \"medium_term\",\n  \"startDate\": \"2024-01-01T00:00:00.000Z\",\n  \"targetDate\": \"2024-06-30T23:59:59.000Z\",\n  \"tags\": [\"productivity\", \"knowledge-management\", \"system\"],\n  \"notes\": \"This goal involves implementing all core modules including notes, tasks, goals, finance, and more.\",\n  \"milestones\": [\n    {\n      \"title\": \"Complete Core Modules\",\n      \"description\": \"Implement notes, tasks, and goals modules\",\n      \"targetDate\": \"2024-03-31T23:59:59.000Z\",\n      \"isCompleted\": false,\n      \"order\": 1\n    },\n    {\n      \"title\": \"Add Finance Module\",\n      \"description\": \"Implement comprehensive finance tracking\",\n      \"targetDate\": \"2024-04-30T23:59:59.000Z\",\n      \"isCompleted\": false,\n      \"order\": 2\n    },\n    {\n      \"title\": \"Integration Testing\",\n      \"description\": \"Test all modules working together\",\n      \"targetDate\": \"2024-05-31T23:59:59.000Z\",\n      \"isCompleted\": false,\n      \"order\": 3\n    }\n  ],\n  \"keyResults\": [\n    {\n      \"title\": \"Modules Implemented\",\n      \"description\": \"Number of core modules fully implemented\",\n      \"targetValue\": 8,\n      \"currentValue\": 0,\n      \"unit\": \"modules\",\n      \"isCompleted\": false\n    },\n    {\n      \"title\": \"Test Coverage\",\n      \"description\": \"Percentage of code covered by tests\",\n      \"targetValue\": 90,\n      \"currentValue\": 0,\n      \"unit\": \"percent\",\n      \"isCompleted\": false\n    }\n  ],\n  \"reviewFrequency\": \"monthly\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/goals",
                  "host": ["{{baseUrl}}"],
                  "path": ["goals"]
                },
                "description": "Create a new goal with milestones and key results"
              },
              "response": []
            },
            {
              "name": "Get Goals",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/goals?limit=10&sortBy=updatedAt&sortOrder=desc&includeStats=true",
                  "host": ["{{baseUrl}}"],
                  "path": ["goals"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    },
                    {
                      "key": "sortBy",
                      "value": "updatedAt",
                      "description": "Sort field"
                    },
                    {
                      "key": "sortOrder",
                      "value": "desc",
                      "description": "Sort order"
                    },
                    {
                      "key": "includeStats",
                      "value": "true",
                      "description": "Include statistics"
                    }
                  ]
                },
                "description": "Get all goals with optional filtering and statistics"
              },
              "response": []
            },
            {
              "name": "Get Goal by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/goals/{{goalId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["goals", "{{goalId}}"]
                },
                "description": "Get a specific goal by ID"
              },
              "response": []
            },
            {
              "name": "Update Goal",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Complete Second Brain System - Updated\",\n  \"description\": \"Build a comprehensive personal knowledge management system with enhanced features\",\n  \"status\": \"in_progress\",\n  \"priority\": \"critical\",\n  \"progressPercentage\": 25,\n  \"notes\": \"Made good progress on core modules. Finance module is next priority.\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/goals/{{goalId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["goals", "{{goalId}}"]
                },
                "description": "Update an existing goal"
              },
              "response": []
            },
            {
              "name": "Delete Goal",
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/goals/{{goalId}}?permanent=false",
                  "host": ["{{baseUrl}}"],
                  "path": ["goals", "{{goalId}}"],
                  "query": [
                    {
                      "key": "permanent",
                      "value": "false",
                      "description": "Soft delete if false"
                    }
                  ]
                },
                "description": "Delete a goal (soft delete by default)"
              },
              "response": []
            },
            {
              "name": "Get Goal Statistics",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/goals/stats?databaseId={{databaseId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["goals", "stats"],
                  "query": [
                    {
                      "key": "databaseId",
                      "value": "{{databaseId}}",
                      "description": "Filter stats by database",
                      "disabled": true
                    }
                  ]
                },
                "description": "Get comprehensive goal statistics and analytics"
              },
              "response": []
            },
            {
              "name": "Get Active Goals",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/goals/active?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["goals", "active"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get all active goals (not started or in progress)"
              },
              "response": []
            },
            {
              "name": "Get Completed Goals",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/goals/completed?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["goals", "completed"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get all completed goals"
              },
              "response": []
            },
            {
              "name": "Get Overdue Goals",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/goals/overdue?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["goals", "overdue"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get all overdue goals"
              },
              "response": []
            },
            {
              "name": "Get Goals by Category",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/goals/category/professional?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["goals", "category", "professional"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get goals filtered by specific category"
              },
              "response": []
            },
            {
              "name": "Search Goals",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/goals/search?q=system&limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["goals", "search"],
                  "query": [
                    {
                      "key": "q",
                      "value": "system",
                      "description": "Search query"
                    },
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Search goals by title, description, or notes"
              },
              "response": []
            },
            {
              "name": "Complete Goal",
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/goals/{{goalId}}/complete",
                  "host": ["{{baseUrl}}"],
                  "path": ["goals", "{{goalId}}", "complete"]
                },
                "description": "Mark a goal as completed"
              },
              "response": []
            },
            {
              "name": "Archive Goal",
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/goals/{{goalId}}/archive",
                  "host": ["{{baseUrl}}"],
                  "path": ["goals", "{{goalId}}", "archive"]
                },
                "description": "Archive a goal"
              },
              "response": []
            },
            {
              "name": "Duplicate Goal",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Complete Second Brain System - Q2 2024\",\n  \"databaseId\": \"{{databaseId}}\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/goals/{{goalId}}/duplicate",
                  "host": ["{{baseUrl}}"],
                  "path": ["goals", "{{goalId}}", "duplicate"]
                },
                "description": "Create a duplicate of an existing goal"
              },
              "response": []
            },
            {
              "name": "Bulk Update Goals",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"goalIds\": [\"{{goalId}}\", \"64f8a1b2c3d4e5f6a7b8c9d7\"],\n  \"updates\": {\n    \"priority\": \"high\",\n    \"reviewFrequency\": \"weekly\"\n  }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/goals/bulk/update",
                  "host": ["{{baseUrl}}"],
                  "path": ["goals", "bulk", "update"]
                },
                "description": "Update multiple goals at once"
              },
              "response": []
            },
            {
              "name": "Bulk Delete Goals",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"goalIds\": [\"64f8a1b2c3d4e5f6a7b8c9d7\", \"64f8a1b2c3d4e5f6a7b8c9d8\"],\n  \"permanent\": false\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/goals/bulk/delete",
                  "host": ["{{baseUrl}}"],
                  "path": ["goals", "bulk", "delete"]
                },
                "description": "Delete multiple goals at once"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Finance Management",
          "description": "Personal finance management with transactions, budgets, and financial goals",
          "item": [
            {
              "name": "Create Transaction",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"databaseId\": \"{{databaseId}}\",\n  \"type\": \"expense\",\n  \"category\": \"food\",\n  \"amount\": 45.67,\n  \"currency\": \"USD\",\n  \"description\": \"Lunch at Italian Restaurant\",\n  \"date\": \"2024-01-15T12:30:00.000Z\",\n  \"merchant\": \"Mario's Italian Bistro\",\n  \"location\": \"Downtown, Main Street\",\n  \"notes\": \"Business lunch with client - excellent pasta\",\n  \"tags\": [\"business\", \"client-meeting\", \"italian\"],\n  \"isRecurring\": false,\n  \"budgetId\": \"{{budgetId}}\",\n  \"projectId\": \"{{projectId}}\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/finance/transactions",
                  "host": ["{{baseUrl}}"],
                  "path": ["finance", "transactions"]
                },
                "description": "Create a new financial transaction"
              },
              "response": []
            },
            {
              "name": "Get Transactions",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/finance/transactions?limit=20&sortBy=date&sortOrder=desc",
                  "host": ["{{baseUrl}}"],
                  "path": ["finance", "transactions"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "20",
                      "description": "Number of results"
                    },
                    {
                      "key": "sortBy",
                      "value": "date",
                      "description": "Sort field"
                    },
                    {
                      "key": "sortOrder",
                      "value": "desc",
                      "description": "Sort order"
                    }
                  ]
                },
                "description": "Get all transactions with optional filtering"
              },
              "response": []
            },
            {
              "name": "Get Transaction by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/finance/transactions/{{transactionId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["finance", "transactions", "{{transactionId}}"]
                },
                "description": "Get a specific transaction by ID"
              },
              "response": []
            },
            {
              "name": "Update Transaction",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": 48.50,\n  \"description\": \"Lunch at Italian Restaurant - Updated Amount\",\n  \"notes\": \"Business lunch with client - excellent pasta. Tip included.\",\n  \"isVerified\": true,\n  \"tags\": [\"business\", \"client-meeting\", \"italian\", \"verified\"]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/finance/transactions/{{transactionId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["finance", "transactions", "{{transactionId}}"]
                },
                "description": "Update an existing transaction"
              },
              "response": []
            },
            {
              "name": "Delete Transaction",
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/finance/transactions/{{transactionId}}?permanent=false",
                  "host": ["{{baseUrl}}"],
                  "path": ["finance", "transactions", "{{transactionId}}"],
                  "query": [
                    {
                      "key": "permanent",
                      "value": "false",
                      "description": "Soft delete if false"
                    }
                  ]
                },
                "description": "Delete a transaction (soft delete by default)"
              },
              "response": []
            },
            {
              "name": "Get Finance Statistics",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/finance/transactions/stats?period=month&databaseId={{databaseId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["finance", "transactions", "stats"],
                  "query": [
                    {
                      "key": "period",
                      "value": "month",
                      "description": "Statistics period"
                    },
                    {
                      "key": "databaseId",
                      "value": "{{databaseId}}",
                      "description": "Filter by database",
                      "disabled": true
                    }
                  ]
                },
                "description": "Get comprehensive finance statistics and analytics"
              },
              "response": []
            },
            {
              "name": "Get Income Transactions",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/finance/transactions/income?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["finance", "transactions", "income"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get all income transactions"
              },
              "response": []
            },
            {
              "name": "Get Expense Transactions",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/finance/transactions/expenses?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["finance", "transactions", "expenses"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get all expense transactions"
              },
              "response": []
            },
            {
              "name": "Get Transactions by Category",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/finance/transactions/category/food?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["finance", "transactions", "category", "food"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get transactions filtered by specific category"
              },
              "response": []
            },
            {
              "name": "Get Transactions by Account",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/finance/transactions/account/{{accountId}}?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["finance", "transactions", "account", "{{accountId}}"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get transactions for a specific account"
              },
              "response": []
            },
            {
              "name": "Get Recurring Transactions",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/finance/transactions/recurring?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["finance", "transactions", "recurring"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get all recurring transactions"
              },
              "response": []
            },
            {
              "name": "Get Unverified Transactions",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/finance/transactions/unverified?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["finance", "transactions", "unverified"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get all unverified transactions"
              },
              "response": []
            },
            {
              "name": "Search Transactions",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/finance/transactions/search?q=restaurant&limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["finance", "transactions", "search"],
                  "query": [
                    {
                      "key": "q",
                      "value": "restaurant",
                      "description": "Search query"
                    },
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Search transactions by description, merchant, or notes"
              },
              "response": []
            },
            {
              "name": "Verify Transaction",
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/finance/transactions/{{transactionId}}/verify",
                  "host": ["{{baseUrl}}"],
                  "path": ["finance", "transactions", "{{transactionId}}", "verify"]
                },
                "description": "Mark a transaction as verified"
              },
              "response": []
            },
            {
              "name": "Duplicate Transaction",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"date\": \"2024-01-16T12:30:00.000Z\",\n  \"amount\": 42.50,\n  \"description\": \"Lunch at Italian Restaurant - Day 2\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/finance/transactions/{{transactionId}}/duplicate",
                  "host": ["{{baseUrl}}"],
                  "path": ["finance", "transactions", "{{transactionId}}", "duplicate"]
                },
                "description": "Create a duplicate of an existing transaction"
              },
              "response": []
            },
            {
              "name": "Bulk Update Transactions",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionIds\": [\"{{transactionId}}\", \"64f8a1b2c3d4e5f6a7b8c9d7\"],\n  \"updates\": {\n    \"isVerified\": true,\n    \"tags\": [\"verified\", \"reviewed\"]\n  }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/finance/transactions/bulk/update",
                  "host": ["{{baseUrl}}"],
                  "path": ["finance", "transactions", "bulk", "update"]
                },
                "description": "Update multiple transactions at once"
              },
              "response": []
            },
            {
              "name": "Bulk Delete Transactions",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionIds\": [\"64f8a1b2c3d4e5f6a7b8c9d7\", \"64f8a1b2c3d4e5f6a7b8c9d8\"],\n  \"permanent\": false\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/finance/transactions/bulk/delete",
                  "host": ["{{baseUrl}}"],
                  "path": ["finance", "transactions", "bulk", "delete"]
                },
                "description": "Delete multiple transactions at once"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Projects Management",
          "description": "Project management with milestones, deliverables, team collaboration, and progress tracking",
          "item": [
            {
              "name": "Create Project",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"databaseId\": \"{{databaseId}}\",\n  \"name\": \"Second Brain Platform Development\",\n  \"description\": \"Comprehensive development of a personal knowledge management platform with multiple integrated modules for productivity and organization.\",\n  \"category\": \"work\",\n  \"priority\": \"high\",\n  \"phase\": \"planning\",\n  \"startDate\": \"2024-01-15T09:00:00.000Z\",\n  \"endDate\": \"2024-06-30T17:00:00.000Z\",\n  \"ownerId\": \"{{userId}}\",\n  \"teamMemberIds\": [\"{{userId}}\", \"64f8a1b2c3d4e5f6a7b8c9d1\"],\n  \"stakeholderIds\": [\"64f8a1b2c3d4e5f6a7b8c9d2\", \"64f8a1b2c3d4e5f6a7b8c9d3\"],\n  \"objectives\": [\n    \"Build scalable backend API with TypeScript and Node.js\",\n    \"Implement comprehensive module system (Notes, Tasks, Goals, Finance, People)\",\n    \"Create intuitive user interface with modern design principles\",\n    \"Ensure high performance and security standards\",\n    \"Deploy to production with CI/CD pipeline\"\n  ],\n  \"tags\": [\"development\", \"typescript\", \"productivity\", \"knowledge-management\"],\n  \"budget\": {\n    \"totalBudget\": 50000,\n    \"currency\": \"USD\",\n    \"categories\": [\n      {\n        \"name\": \"Development\",\n        \"budgeted\": 30000\n      },\n      {\n        \"name\": \"Design\",\n        \"budgeted\": 10000\n      },\n      {\n        \"name\": \"Infrastructure\",\n        \"budgeted\": 5000\n      },\n      {\n        \"name\": \"Testing\",\n        \"budgeted\": 5000\n      }\n    ]\n  },\n  \"timeTracking\": {\n    \"estimatedHours\": 800\n  },\n  \"milestones\": [\n    {\n      \"title\": \"Backend API Foundation\",\n      \"description\": \"Complete core API structure with authentication and database setup\",\n      \"targetDate\": \"2024-02-15T17:00:00.000Z\",\n      \"order\": 1\n    },\n    {\n      \"title\": \"Core Modules Implementation\",\n      \"description\": \"Implement Notes, Tasks, Goals, and Finance modules\",\n      \"targetDate\": \"2024-04-15T17:00:00.000Z\",\n      \"order\": 2\n    },\n    {\n      \"title\": \"Frontend Development\",\n      \"description\": \"Build responsive user interface with React/Vue\",\n      \"targetDate\": \"2024-05-15T17:00:00.000Z\",\n      \"order\": 3\n    },\n    {\n      \"title\": \"Testing & Deployment\",\n      \"description\": \"Complete testing suite and production deployment\",\n      \"targetDate\": \"2024-06-15T17:00:00.000Z\",\n      \"order\": 4\n    }\n  ],\n  \"deliverables\": [\n    {\n      \"title\": \"API Documentation\",\n      \"description\": \"Complete API documentation with examples\",\n      \"type\": \"document\",\n      \"assigneeId\": \"{{userId}}\",\n      \"dueDate\": \"2024-03-01T17:00:00.000Z\"\n    },\n    {\n      \"title\": \"Mobile App\",\n      \"description\": \"React Native mobile application\",\n      \"type\": \"software\",\n      \"assigneeId\": \"64f8a1b2c3d4e5f6a7b8c9d1\",\n      \"dueDate\": \"2024-05-30T17:00:00.000Z\"\n    },\n    {\n      \"title\": \"User Manual\",\n      \"description\": \"Comprehensive user guide and tutorials\",\n      \"type\": \"document\",\n      \"assigneeId\": \"64f8a1b2c3d4e5f6a7b8c9d2\",\n      \"dueDate\": \"2024-06-20T17:00:00.000Z\"\n    }\n  ],\n  \"isTemplate\": false,\n  \"isPublic\": false,\n  \"notificationSettings\": {\n    \"milestoneReminders\": true,\n    \"deadlineAlerts\": true,\n    \"statusUpdates\": true\n  }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/projects",
                  "host": ["{{baseUrl}}"],
                  "path": ["projects"]
                },
                "description": "Create a new project with milestones, deliverables, budget, and team members"
              },
              "response": []
            },
            {
              "name": "Get Projects",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/projects?limit=10&sortBy=updatedAt&sortOrder=desc",
                  "host": ["{{baseUrl}}"],
                  "path": ["projects"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    },
                    {
                      "key": "sortBy",
                      "value": "updatedAt",
                      "description": "Sort field"
                    },
                    {
                      "key": "sortOrder",
                      "value": "desc",
                      "description": "Sort order"
                    }
                  ]
                },
                "description": "Get all projects with optional filtering and sorting"
              },
              "response": []
            },
            {
              "name": "Get Project by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/projects/{{projectId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["projects", "{{projectId}}"]
                },
                "description": "Get a specific project by ID with all details"
              },
              "response": []
            },
            {
              "name": "Update Project",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Second Brain Platform Development - Updated\",\n  \"description\": \"Enhanced development of a personal knowledge management platform with advanced AI features and improved user experience.\",\n  \"status\": \"active\",\n  \"priority\": \"critical\",\n  \"phase\": \"execution\",\n  \"progressPercentage\": 35,\n  \"actualStartDate\": \"2024-01-20T09:00:00.000Z\",\n  \"objectives\": [\n    \"Build scalable backend API with TypeScript and Node.js\",\n    \"Implement comprehensive module system (Notes, Tasks, Goals, Finance, People, Projects)\",\n    \"Create intuitive user interface with modern design principles\",\n    \"Integrate AI-powered features for smart recommendations\",\n    \"Ensure high performance and security standards\",\n    \"Deploy to production with CI/CD pipeline\"\n  ],\n  \"tags\": [\"development\", \"typescript\", \"productivity\", \"knowledge-management\", \"ai-powered\"]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/projects/{{projectId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["projects", "{{projectId}}"]
                },
                "description": "Update an existing project"
              },
              "response": []
            },
            {
              "name": "Delete Project",
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/projects/{{projectId}}?permanent=false",
                  "host": ["{{baseUrl}}"],
                  "path": ["projects", "{{projectId}}"],
                  "query": [
                    {
                      "key": "permanent",
                      "value": "false",
                      "description": "Soft delete if false"
                    }
                  ]
                },
                "description": "Delete a project (soft delete by default)"
              },
              "response": []
            },
            {
              "name": "Get Project Statistics",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/projects/stats?period=month&databaseId={{databaseId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["projects", "stats"],
                  "query": [
                    {
                      "key": "period",
                      "value": "month",
                      "description": "Statistics period"
                    },
                    {
                      "key": "databaseId",
                      "value": "{{databaseId}}",
                      "description": "Filter by database",
                      "disabled": true
                    }
                  ]
                },
                "description": "Get comprehensive project statistics and analytics"
              },
              "response": []
            },
            {
              "name": "Get Active Projects",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/projects/active?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["projects", "active"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get all active and planning projects"
              },
              "response": []
            },
            {
              "name": "Get Completed Projects",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/projects/completed?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["projects", "completed"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get all completed projects"
              },
              "response": []
            },
            {
              "name": "Get My Projects",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/projects/my-projects?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["projects", "my-projects"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get projects owned by the current user"
              },
              "response": []
            },
            {
              "name": "Get Projects I'm Involved In",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/projects/involved-in?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["projects", "involved-in"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get projects where current user is a team member"
              },
              "response": []
            },
            {
              "name": "Get Project Templates",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/projects/templates?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["projects", "templates"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get all project templates"
              },
              "response": []
            },
            {
              "name": "Get Projects by Status",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/projects/status/active?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["projects", "status", "active"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get projects filtered by specific status"
              },
              "response": []
            },
            {
              "name": "Get Projects by Category",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/projects/category/work?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["projects", "category", "work"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get projects filtered by specific category"
              },
              "response": []
            },
            {
              "name": "Get Projects by Priority",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/projects/priority/high?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["projects", "priority", "high"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get projects filtered by specific priority"
              },
              "response": []
            },
            {
              "name": "Search Projects",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/projects/search?q=development&limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["projects", "search"],
                  "query": [
                    {
                      "key": "q",
                      "value": "development",
                      "description": "Search query"
                    },
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Search projects by name, description, or objectives"
              },
              "response": []
            },
            {
              "name": "Start Project",
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/projects/{{projectId}}/start",
                  "host": ["{{baseUrl}}"],
                  "path": ["projects", "{{projectId}}", "start"]
                },
                "description": "Start a project (set status to active and phase to execution)"
              },
              "response": []
            },
            {
              "name": "Complete Project",
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/projects/{{projectId}}/complete",
                  "host": ["{{baseUrl}}"],
                  "path": ["projects", "{{projectId}}", "complete"]
                },
                "description": "Mark a project as completed"
              },
              "response": []
            },
            {
              "name": "Pause Project",
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/projects/{{projectId}}/pause",
                  "host": ["{{baseUrl}}"],
                  "path": ["projects", "{{projectId}}", "pause"]
                },
                "description": "Put a project on hold"
              },
              "response": []
            },
            {
              "name": "Archive Project",
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/projects/{{projectId}}/archive",
                  "host": ["{{baseUrl}}"],
                  "path": ["projects", "{{projectId}}", "archive"]
                },
                "description": "Archive a project"
              },
              "response": []
            },
            {
              "name": "Duplicate Project",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Second Brain Platform Development - Phase 2\",\n  \"databaseId\": \"{{databaseId}}\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/projects/{{projectId}}/duplicate",
                  "host": ["{{baseUrl}}"],
                  "path": ["projects", "{{projectId}}", "duplicate"]
                },
                "description": "Create a duplicate of an existing project"
              },
              "response": []
            },
            {
              "name": "Bulk Update Projects",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"projectIds\": [\"{{projectId}}\", \"64f8a1b2c3d4e5f6a7b8c9d7\"],\n  \"updates\": {\n    \"priority\": \"high\",\n    \"phase\": \"execution\",\n    \"tags\": [\"urgent\", \"high-priority\"]\n  }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/projects/bulk/update",
                  "host": ["{{baseUrl}}"],
                  "path": ["projects", "bulk", "update"]
                },
                "description": "Update multiple projects at once"
              },
              "response": []
            },
            {
              "name": "Bulk Delete Projects",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"projectIds\": [\"64f8a1b2c3d4e5f6a7b8c9d7\", \"64f8a1b2c3d4e5f6a7b8c9d8\"],\n  \"permanent\": false\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/projects/bulk/delete",
                  "host": ["{{baseUrl}}"],
                  "path": ["projects", "bulk", "delete"]
                },
                "description": "Delete multiple projects at once"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Resources Management",
          "description": "Knowledge resource and document management with versioning, collections, and sharing",
          "item": [
            {
              "name": "Create Resource",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"databaseId\": \"{{databaseId}}\",\n  \"title\": \"TypeScript Best Practices Guide\",\n  \"description\": \"Comprehensive guide covering TypeScript best practices, advanced patterns, and real-world examples for building scalable applications.\",\n  \"type\": \"document\",\n  \"category\": \"learning\",\n  \"accessLevel\": \"private\",\n  \"url\": \"https://typescript-guide.example.com/best-practices\",\n  \"content\": \"# TypeScript Best Practices\\n\\nThis guide covers essential TypeScript patterns and practices...\",\n  \"metadata\": {\n    \"author\": \"TypeScript Team\",\n    \"publisher\": \"Microsoft\",\n    \"publishedDate\": \"2024-01-15T00:00:00.000Z\",\n    \"language\": \"English\",\n    \"version\": \"5.3\",\n    \"pageCount\": 150,\n    \"fileSize\": 2048000\n  },\n  \"tags\": [\"typescript\", \"javascript\", \"programming\", \"best-practices\", \"guide\"],\n  \"keywords\": [\"typescript\", \"types\", \"interfaces\", \"generics\", \"decorators\", \"modules\"],\n  \"relatedProjectIds\": [\"{{projectId}}\"],\n  \"relatedGoalIds\": [\"{{goalId}}\"],\n  \"relatedTaskIds\": [\"{{taskId}}\"],\n  \"relatedNoteIds\": [\"{{noteId}}\"],\n  \"relatedPeopleIds\": [\"{{personId}}\"],\n  \"folderPath\": \"/programming/typescript\",\n  \"personalRating\": 5,\n  \"personalNotes\": \"Excellent resource for TypeScript development. Very comprehensive and up-to-date with latest features. Highly recommended for team training.\",\n  \"isShared\": true,\n  \"sharedWith\": [\"{{userId}}\", \"64f8a1b2c3d4e5f6a7b8c9d1\"],\n  \"collaborators\": [\"{{userId}}\"],\n  \"isFavorite\": true,\n  \"isBookmarked\": true,\n  \"notifyOnUpdate\": true,\n  \"notifyOnComment\": true,\n  \"customFields\": {\n    \"difficulty\": \"intermediate\",\n    \"estimatedReadTime\": \"4 hours\",\n    \"lastReviewed\": \"2024-01-20T10:00:00.000Z\"\n  }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/resources",
                  "host": ["{{baseUrl}}"],
                  "path": ["resources"]
                },
                "description": "Create a new resource with comprehensive metadata and relationships"
              },
              "response": []
            },
            {
              "name": "Get Resources",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/resources?limit=10&sortBy=updatedAt&sortOrder=desc",
                  "host": ["{{baseUrl}}"],
                  "path": ["resources"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    },
                    {
                      "key": "sortBy",
                      "value": "updatedAt",
                      "description": "Sort field"
                    },
                    {
                      "key": "sortOrder",
                      "value": "desc",
                      "description": "Sort order"
                    }
                  ]
                },
                "description": "Get all resources with optional filtering and sorting"
              },
              "response": []
            },
            {
              "name": "Get Resource by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/resources/{{resourceId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["resources", "{{resourceId}}"]
                },
                "description": "Get a specific resource by ID with all details and metadata"
              },
              "response": []
            },
            {
              "name": "Update Resource",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"TypeScript Best Practices Guide - Updated\",\n  \"description\": \"Comprehensive guide covering TypeScript best practices, advanced patterns, and real-world examples for building scalable applications. Updated with TypeScript 5.4 features.\",\n  \"status\": \"active\",\n  \"category\": \"documentation\",\n  \"url\": \"https://typescript-guide.example.com/best-practices-v2\",\n  \"metadata\": {\n    \"author\": \"TypeScript Team\",\n    \"publisher\": \"Microsoft\",\n    \"publishedDate\": \"2024-01-15T00:00:00.000Z\",\n    \"language\": \"English\",\n    \"version\": \"5.4\",\n    \"pageCount\": 175,\n    \"fileSize\": 2304000,\n    \"lastModified\": \"2024-02-01T15:30:00.000Z\"\n  },\n  \"tags\": [\"typescript\", \"javascript\", \"programming\", \"best-practices\", \"guide\", \"updated\"],\n  \"personalRating\": 5,\n  \"personalNotes\": \"Excellent resource for TypeScript development. Very comprehensive and up-to-date with latest features including TypeScript 5.4. Highly recommended for team training. Updated with new examples and patterns.\",\n  \"customFields\": {\n    \"difficulty\": \"intermediate-advanced\",\n    \"estimatedReadTime\": \"5 hours\",\n    \"lastReviewed\": \"2024-02-01T10:00:00.000Z\",\n    \"reviewStatus\": \"updated\"\n  }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/resources/{{resourceId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["resources", "{{resourceId}}"]
                },
                "description": "Update an existing resource"
              },
              "response": []
            },
            {
              "name": "Delete Resource",
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/resources/{{resourceId}}?permanent=false",
                  "host": ["{{baseUrl}}"],
                  "path": ["resources", "{{resourceId}}"],
                  "query": [
                    {
                      "key": "permanent",
                      "value": "false",
                      "description": "Soft delete if false"
                    }
                  ]
                },
                "description": "Delete a resource (soft delete by default)"
              },
              "response": []
            },
            {
              "name": "Get Resource Statistics",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/resources/stats?period=month&databaseId={{databaseId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["resources", "stats"],
                  "query": [
                    {
                      "key": "period",
                      "value": "month",
                      "description": "Statistics period"
                    },
                    {
                      "key": "databaseId",
                      "value": "{{databaseId}}",
                      "description": "Filter by database",
                      "disabled": true
                    }
                  ]
                },
                "description": "Get comprehensive resource statistics and analytics"
              },
              "response": []
            },
            {
              "name": "Get Favorite Resources",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/resources/favorites?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["resources", "favorites"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get all favorite resources"
              },
              "response": []
            },
            {
              "name": "Get Bookmarked Resources",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/resources/bookmarks?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["resources", "bookmarks"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get all bookmarked resources"
              },
              "response": []
            },
            {
              "name": "Get Archived Resources",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/resources/archived?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["resources", "archived"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get all archived resources"
              },
              "response": []
            },
            {
              "name": "Get Shared Resources",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/resources/shared?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["resources", "shared"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get all shared resources"
              },
              "response": []
            },
            {
              "name": "Get Resources by Type",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/resources/type/document?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["resources", "type", "document"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get resources filtered by specific type"
              },
              "response": []
            },
            {
              "name": "Get Resources by Category",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/resources/category/learning?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["resources", "category", "learning"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get resources filtered by specific category"
              },
              "response": []
            },
            {
              "name": "Get Resources by Status",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/resources/status/active?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["resources", "status", "active"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get resources filtered by specific status"
              },
              "response": []
            },
            {
              "name": "Get Resources by Folder",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/resources/folder/programming%2Ftypescript?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["resources", "folder", "programming%2Ftypescript"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get resources in a specific folder path"
              },
              "response": []
            },
            {
              "name": "Search Resources",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/resources/search?q=typescript&limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["resources", "search"],
                  "query": [
                    {
                      "key": "q",
                      "value": "typescript",
                      "description": "Search query"
                    },
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Search resources by title, description, keywords, and tags"
              },
              "response": []
            },
            {
              "name": "Add to Favorites",
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/resources/{{resourceId}}/favorite",
                  "host": ["{{baseUrl}}"],
                  "path": ["resources", "{{resourceId}}", "favorite"]
                },
                "description": "Add a resource to favorites"
              },
              "response": []
            },
            {
              "name": "Remove from Favorites",
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/resources/{{resourceId}}/favorite",
                  "host": ["{{baseUrl}}"],
                  "path": ["resources", "{{resourceId}}", "favorite"]
                },
                "description": "Remove a resource from favorites"
              },
              "response": []
            },
            {
              "name": "Add Bookmark",
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/resources/{{resourceId}}/bookmark",
                  "host": ["{{baseUrl}}"],
                  "path": ["resources", "{{resourceId}}", "bookmark"]
                },
                "description": "Bookmark a resource"
              },
              "response": []
            },
            {
              "name": "Remove Bookmark",
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/resources/{{resourceId}}/bookmark",
                  "host": ["{{baseUrl}}"],
                  "path": ["resources", "{{resourceId}}", "bookmark"]
                },
                "description": "Remove bookmark from a resource"
              },
              "response": []
            },
            {
              "name": "Archive Resource",
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/resources/{{resourceId}}/archive",
                  "host": ["{{baseUrl}}"],
                  "path": ["resources", "{{resourceId}}", "archive"]
                },
                "description": "Archive a resource"
              },
              "response": []
            },
            {
              "name": "Unarchive Resource",
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/resources/{{resourceId}}/unarchive",
                  "host": ["{{baseUrl}}"],
                  "path": ["resources", "{{resourceId}}", "unarchive"]
                },
                "description": "Unarchive a resource"
              },
              "response": []
            },
            {
              "name": "Duplicate Resource",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"TypeScript Best Practices Guide - Team Copy\",\n  \"databaseId\": \"{{databaseId}}\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/resources/{{resourceId}}/duplicate",
                  "host": ["{{baseUrl}}"],
                  "path": ["resources", "{{resourceId}}", "duplicate"]
                },
                "description": "Create a duplicate of an existing resource"
              },
              "response": []
            },
            {
              "name": "Bulk Update Resources",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"resourceIds\": [\"{{resourceId}}\", \"64f8a1b2c3d4e5f6a7b8c9d7\"],\n  \"updates\": {\n    \"category\": \"documentation\",\n    \"tags\": [\"updated\", \"reviewed\", \"current\"],\n    \"status\": \"active\"\n  }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/resources/bulk/update",
                  "host": ["{{baseUrl}}"],
                  "path": ["resources", "bulk", "update"]
                },
                "description": "Update multiple resources at once"
              },
              "response": []
            },
            {
              "name": "Bulk Delete Resources",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"resourceIds\": [\"64f8a1b2c3d4e5f6a7b8c9d7\", \"64f8a1b2c3d4e5f6a7b8c9d8\"],\n  \"permanent\": false\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/resources/bulk/delete",
                  "host": ["{{baseUrl}}"],
                  "path": ["resources", "bulk", "delete"]
                },
                "description": "Delete multiple resources at once"
              },
              "response": []
            }
          ]
        },
        {
          "name": "PARA Method Management",
          "description": "PARA (Projects, Areas, Resources, Archive) organizational framework with cross-module integration",
          "item": [
            {
              "name": "Create PARA Item",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"databaseId\": \"{{databaseId}}\",\n  \"category\": \"areas\",\n  \"title\": \"Health & Wellness\",\n  \"description\": \"Maintaining physical and mental health through consistent habits, regular exercise, proper nutrition, and stress management.\",\n  \"priority\": \"high\",\n  \"linkedProjectIds\": [\"{{projectId}}\"],\n  \"linkedResourceIds\": [\"{{resourceId}}\"],\n  \"linkedTaskIds\": [\"{{taskId}}\"],\n  \"linkedGoalIds\": [\"{{goalId}}\"],\n  \"reviewFrequency\": \"monthly\",\n  \"tags\": [\"health\", \"wellness\", \"fitness\", \"nutrition\", \"mental-health\"],\n  \"areaType\": \"health\",\n  \"maintenanceLevel\": \"high\",\n  \"standardsOfExcellence\": [\n    \"Exercise at least 4 times per week\",\n    \"Maintain healthy sleep schedule (7-8 hours)\",\n    \"Practice mindfulness daily\",\n    \"Eat balanced, nutritious meals\",\n    \"Regular health checkups\"\n  ],\n  \"isResponsibilityArea\": true,\n  \"stakeholders\": [\"{{personId}}\"],\n  \"customFields\": {\n    \"currentFitnessLevel\": \"intermediate\",\n    \"primaryHealthGoals\": [\"weight management\", \"stress reduction\", \"energy improvement\"],\n    \"lastHealthCheckup\": \"2024-01-15T00:00:00.000Z\"\n  }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/para",
                  "host": ["{{baseUrl}}"],
                  "path": ["para"]
                },
                "description": "Create a new PARA item with comprehensive organization and cross-module relationships"
              },
              "response": []
            },
            {
              "name": "Get PARA Items",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/para?limit=10&sortBy=updatedAt&sortOrder=desc",
                  "host": ["{{baseUrl}}"],
                  "path": ["para"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    },
                    {
                      "key": "sortBy",
                      "value": "updatedAt",
                      "description": "Sort field"
                    },
                    {
                      "key": "sortOrder",
                      "value": "desc",
                      "description": "Sort order"
                    }
                  ]
                },
                "description": "Get all PARA items with optional filtering and sorting"
              },
              "response": []
            },
            {
              "name": "Get PARA Item by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/para/{{paraItemId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["para", "{{paraItemId}}"]
                },
                "description": "Get a specific PARA item by ID with all details and relationships"
              },
              "response": []
            },
            {
              "name": "Update PARA Item",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Health & Wellness - Updated\",\n  \"description\": \"Comprehensive health management including physical fitness, mental wellness, nutrition optimization, and preventive healthcare.\",\n  \"status\": \"active\",\n  \"priority\": \"critical\",\n  \"completionPercentage\": 75,\n  \"currentChallenges\": [\n    \"Maintaining consistency with workout schedule\",\n    \"Managing stress during busy periods\",\n    \"Balancing social activities with health goals\"\n  ],\n  \"customFields\": {\n    \"currentFitnessLevel\": \"advanced\",\n    \"primaryHealthGoals\": [\"strength building\", \"flexibility improvement\", \"stress management\"],\n    \"lastHealthCheckup\": \"2024-02-01T00:00:00.000Z\",\n    \"healthMetrics\": {\n      \"weight\": 70,\n      \"bodyFat\": 15,\n      \"restingHeartRate\": 60\n    }\n  }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/para/{{paraItemId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["para", "{{paraItemId}}"]
                },
                "description": "Update an existing PARA item"
              },
              "response": []
            },
            {
              "name": "Delete PARA Item",
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/para/{{paraItemId}}?permanent=false",
                  "host": ["{{baseUrl}}"],
                  "path": ["para", "{{paraItemId}}"],
                  "query": [
                    {
                      "key": "permanent",
                      "value": "false",
                      "description": "Soft delete if false"
                    }
                  ]
                },
                "description": "Delete a PARA item (soft delete by default)"
              },
              "response": []
            },
            {
              "name": "Get PARA Statistics",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/para/stats?period=month&databaseId={{databaseId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["para", "stats"],
                  "query": [
                    {
                      "key": "period",
                      "value": "month",
                      "description": "Statistics period"
                    },
                    {
                      "key": "databaseId",
                      "value": "{{databaseId}}",
                      "description": "Filter by database",
                      "disabled": true
                    }
                  ]
                },
                "description": "Get comprehensive PARA statistics and analytics"
              },
              "response": []
            },
            {
              "name": "Get PARA Projects",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/para/categories/projects?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["para", "categories", "projects"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get all PARA items in the Projects category"
              },
              "response": []
            },
            {
              "name": "Get PARA Areas",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/para/categories/areas?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["para", "categories", "areas"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get all PARA items in the Areas category"
              },
              "response": []
            },
            {
              "name": "Get PARA Resources",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/para/categories/resources?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["para", "categories", "resources"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get all PARA items in the Resources category"
              },
              "response": []
            },
            {
              "name": "Get PARA Archive",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/para/categories/archive?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["para", "categories", "archive"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get all PARA items in the Archive category"
              },
              "response": []
            },
            {
              "name": "Get Items by Status",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/para/status/active?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["para", "status", "active"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get PARA items filtered by specific status"
              },
              "response": []
            },
            {
              "name": "Get Items by Priority",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/para/priority/high?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["para", "priority", "high"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get PARA items filtered by specific priority"
              },
              "response": []
            },
            {
              "name": "Get Reviews Overdue",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/para/reviews/overdue?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["para", "reviews", "overdue"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get PARA items with overdue reviews"
              },
              "response": []
            },
            {
              "name": "Search PARA Items",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/para/search?q=health&limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["para", "search"],
                  "query": [
                    {
                      "key": "q",
                      "value": "health",
                      "description": "Search query"
                    },
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Search PARA items by title, description, and tags"
              },
              "response": []
            },
            {
              "name": "Move to Archive",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"itemIds\": [\"{{paraItemId}}\", \"64f8a1b2c3d4e5f6a7b8c9d7\"],\n  \"archiveReason\": \"completed\",\n  \"archiveNotes\": \"Successfully completed health goals for this quarter. Moving to archive for reference.\",\n  \"retentionPolicy\": \"permanent\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/para/archive",
                  "host": ["{{baseUrl}}"],
                  "path": ["para", "archive"]
                },
                "description": "Move multiple PARA items to archive"
              },
              "response": []
            },
            {
              "name": "Restore from Archive",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"itemIds\": [\"{{paraItemId}}\", \"64f8a1b2c3d4e5f6a7b8c9d8\"],\n  \"targetCategory\": \"areas\",\n  \"restoreNotes\": \"Restoring health area as it requires ongoing attention and maintenance.\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/para/restore",
                  "host": ["{{baseUrl}}"],
                  "path": ["para", "restore"]
                },
                "description": "Restore multiple items from archive to active categories"
              },
              "response": []
            },
            {
              "name": "Categorize Existing Item",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"itemType\": \"project\",\n  \"itemId\": \"{{projectId}}\",\n  \"targetCategory\": \"projects\",\n  \"createNew\": true,\n  \"newParaItem\": {\n    \"databaseId\": \"{{databaseId}}\",\n    \"category\": \"projects\",\n    \"title\": \"Website Redesign Project\",\n    \"description\": \"Complete redesign of company website with modern UI/UX and improved performance.\",\n    \"priority\": \"high\",\n    \"linkedProjectIds\": [\"{{projectId}}\"],\n    \"reviewFrequency\": \"weekly\",\n    \"tags\": [\"web-development\", \"design\", \"project\"]\n  }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/para/categorize",
                  "host": ["{{baseUrl}}"],
                  "path": ["para", "categorize"]
                },
                "description": "Categorize existing items from other modules into PARA framework"
              },
              "response": []
            },
            {
              "name": "Mark as Reviewed",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"notes\": \"Reviewed health area progress. All standards are being met consistently. Considering increasing fitness goals for next quarter.\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/para/{{paraItemId}}/review",
                  "host": ["{{baseUrl}}"],
                  "path": ["para", "{{paraItemId}}", "review"]
                },
                "description": "Mark a PARA item as reviewed with notes"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Mood Tracker",
          "description": "Advanced mood tracking and analytics with AI insights, pattern recognition, and comprehensive context tracking",
          "item": [
            {
              "name": "Create Mood Entry",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"databaseId\": \"{{databaseId}}\",\n  \"overallMood\": 8,\n  \"categories\": [\n    {\n      \"category\": \"happiness\",\n      \"intensity\": 8,\n      \"notes\": \"Feeling very positive after completing a challenging project\"\n    },\n    {\n      \"category\": \"energy\",\n      \"intensity\": 7,\n      \"notes\": \"Good energy levels throughout the day\"\n    },\n    {\n      \"category\": \"confidence\",\n      \"intensity\": 9,\n      \"notes\": \"High confidence after successful presentation\"\n    }\n  ],\n  \"triggers\": [\"achievement\", \"work\", \"social\"],\n  \"customTriggers\": [\"successful presentation\", \"team recognition\"],\n  \"location\": \"Office\",\n  \"weather\": \"Sunny, 22°C\",\n  \"energyLevel\": 7,\n  \"stressLevel\": 3,\n  \"anxietyLevel\": 2,\n  \"focusLevel\": 8,\n  \"socialLevel\": 8,\n  \"sleepQuality\": 7,\n  \"sleepHours\": 7.5,\n  \"exerciseMinutes\": 45,\n  \"exerciseType\": \"Morning run\",\n  \"activities\": [\"project presentation\", \"team meeting\", \"code review\", \"lunch with colleagues\"],\n  \"significantEvents\": [\"Successfully presented quarterly results\", \"Received positive feedback from CEO\"],\n  \"notes\": \"Excellent day overall. The presentation went better than expected and the team was very supportive. Feeling motivated and energized for upcoming challenges.\",\n  \"gratitude\": [\n    \"Supportive team members\",\n    \"Opportunity to present to leadership\",\n    \"Beautiful weather for morning run\"\n  ],\n  \"improvements\": \"Could have prepared slides earlier to reduce last-minute stress\",\n  \"tomorrowGoals\": [\n    \"Start planning next quarter's objectives\",\n    \"Schedule one-on-ones with team members\",\n    \"Continue morning exercise routine\"\n  ],\n  \"socialInteractions\": [\n    {\n      \"person\": \"Team Lead\",\n      \"type\": \"colleague\",\n      \"quality\": 9,\n      \"duration\": 60,\n      \"notes\": \"Great feedback session and planning discussion\"\n    },\n    {\n      \"person\": \"Sarah\",\n      \"type\": \"colleague\",\n      \"quality\": 8,\n      \"duration\": 30,\n      \"notes\": \"Helpful collaboration on presentation slides\"\n    }\n  ],\n  \"mediaConsumed\": [\n    {\n      \"type\": \"podcast\",\n      \"title\": \"Leadership in Tech\",\n      \"duration\": 25,\n      \"impact\": 7\n    },\n    {\n      \"type\": \"news\",\n      \"title\": \"Tech Industry Updates\",\n      \"duration\": 15,\n      \"impact\": 6\n    }\n  ],\n  \"habitsCompleted\": [\"morning exercise\", \"meditation\", \"healthy breakfast\", \"daily planning\"],\n  \"routineAdherence\": 8,\n  \"predictedMood\": 6,\n  \"moodGoal\": 7,\n  \"timezone\": \"UTC+1\",\n  \"tags\": [\"work-success\", \"presentation\", \"team-collaboration\", \"high-energy\"],\n  \"customFields\": {\n    \"workProductivity\": 9,\n    \"creativityLevel\": 8,\n    \"motivationLevel\": 9,\n    \"workLifeBalance\": 7\n  }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/mood",
                  "host": ["{{baseUrl}}"],
                  "path": ["mood"]
                },
                "description": "Create a comprehensive mood entry with detailed context and analytics"
              },
              "response": []
            },
            {
              "name": "Get Mood Entries",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/mood?limit=10&sortBy=entryTime&sortOrder=desc",
                  "host": ["{{baseUrl}}"],
                  "path": ["mood"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    },
                    {
                      "key": "sortBy",
                      "value": "entryTime",
                      "description": "Sort field"
                    },
                    {
                      "key": "sortOrder",
                      "value": "desc",
                      "description": "Sort order"
                    }
                  ]
                },
                "description": "Get all mood entries with optional filtering and sorting"
              },
              "response": []
            },
            {
              "name": "Get Mood Entry by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/mood/{{moodEntryId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["mood", "{{moodEntryId}}"]
                },
                "description": "Get a specific mood entry by ID with all details and context"
              },
              "response": []
            },
            {
              "name": "Update Mood Entry",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"overallMood\": 9,\n  \"notes\": \"Updated: The day got even better after receiving a promotion offer! Feeling incredibly grateful and excited about the future.\",\n  \"gratitude\": [\n    \"Supportive team members\",\n    \"Opportunity to present to leadership\",\n    \"Beautiful weather for morning run\",\n    \"Unexpected promotion opportunity\"\n  ],\n  \"significantEvents\": [\n    \"Successfully presented quarterly results\",\n    \"Received positive feedback from CEO\",\n    \"Offered promotion to Senior Developer\"\n  ],\n  \"customFields\": {\n    \"workProductivity\": 9,\n    \"creativityLevel\": 8,\n    \"motivationLevel\": 10,\n    \"workLifeBalance\": 8,\n    \"careerSatisfaction\": 10\n  }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/mood/{{moodEntryId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["mood", "{{moodEntryId}}"]
                },
                "description": "Update an existing mood entry"
              },
              "response": []
            },
            {
              "name": "Delete Mood Entry",
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/mood/{{moodEntryId}}?permanent=false",
                  "host": ["{{baseUrl}}"],
                  "path": ["mood", "{{moodEntryId}}"],
                  "query": [
                    {
                      "key": "permanent",
                      "value": "false",
                      "description": "Soft delete if false"
                    }
                  ]
                },
                "description": "Delete a mood entry (soft delete by default)"
              },
              "response": []
            },
            {
              "name": "Get Mood Analytics",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/mood/analytics?startDate=2024-01-01T00:00:00.000Z&endDate=2024-02-01T00:00:00.000Z&includePatterns=true&includePredictions=true&includeCorrelations=true",
                  "host": ["{{baseUrl}}"],
                  "path": ["mood", "analytics"],
                  "query": [
                    {
                      "key": "startDate",
                      "value": "2024-01-01T00:00:00.000Z",
                      "description": "Start date for analytics"
                    },
                    {
                      "key": "endDate",
                      "value": "2024-02-01T00:00:00.000Z",
                      "description": "End date for analytics"
                    },
                    {
                      "key": "includePatterns",
                      "value": "true",
                      "description": "Include pattern analysis"
                    },
                    {
                      "key": "includePredictions",
                      "value": "true",
                      "description": "Include mood predictions"
                    },
                    {
                      "key": "includeCorrelations",
                      "value": "true",
                      "description": "Include correlation analysis"
                    }
                  ]
                },
                "description": "Get comprehensive mood analytics with patterns and predictions"
              },
              "response": []
            },
            {
              "name": "Get Today's Mood",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/mood/today?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["mood", "today"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get today's mood entries"
              },
              "response": []
            },
            {
              "name": "Get Weekly Moods",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/mood/weekly?limit=50",
                  "host": ["{{baseUrl}}"],
                  "path": ["mood", "weekly"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "50",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get mood entries from the past week"
              },
              "response": []
            },
            {
              "name": "Get Monthly Moods",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/mood/monthly?limit=100",
                  "host": ["{{baseUrl}}"],
                  "path": ["mood", "monthly"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get mood entries from the past month"
              },
              "response": []
            },
            {
              "name": "Get Positive Moods",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/mood/positive?limit=20",
                  "host": ["{{baseUrl}}"],
                  "path": ["mood", "positive"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "20",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get mood entries with positive ratings (7+)"
              },
              "response": []
            },
            {
              "name": "Get Negative Moods",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/mood/negative?limit=20",
                  "host": ["{{baseUrl}}"],
                  "path": ["mood", "negative"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "20",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get mood entries with negative ratings (4 and below)"
              },
              "response": []
            },
            {
              "name": "Get Moods by Scale",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/mood/scale/8?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["mood", "scale", "8"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get mood entries with specific mood scale rating"
              },
              "response": []
            },
            {
              "name": "Get Moods by Category",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/mood/category/happiness?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["mood", "category", "happiness"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get mood entries filtered by specific category"
              },
              "response": []
            },
            {
              "name": "Get Moods by Trigger",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/mood/trigger/work?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["mood", "trigger", "work"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get mood entries filtered by specific trigger"
              },
              "response": []
            },
            {
              "name": "Search Mood Entries",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/mood/search?q=presentation&limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["mood", "search"],
                  "query": [
                    {
                      "key": "q",
                      "value": "presentation",
                      "description": "Search query"
                    },
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Search mood entries by notes, activities, and events"
              },
              "response": []
            },
            {
              "name": "Quick Mood Entry",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"databaseId\": \"{{databaseId}}\",\n  \"mood\": 7,\n  \"note\": \"Feeling good after a productive morning. Ready to tackle the rest of the day!\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/mood/quick",
                  "host": ["{{baseUrl}}"],
                  "path": ["mood", "quick"]
                },
                "description": "Create a quick mood entry with minimal information"
              },
              "response": []
            },
            {
              "name": "Mood Check-in",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"databaseId\": \"{{databaseId}}\",\n  \"overallMood\": 8,\n  \"energyLevel\": 7,\n  \"stressLevel\": 3,\n  \"gratitude\": \"Grateful for a supportive team and interesting challenges at work\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/mood/checkin",
                  "host": ["{{baseUrl}}"],
                  "path": ["mood", "checkin"]
                },
                "description": "Perform a structured mood check-in with key metrics"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Content Management",
          "description": "Content creation and publishing workflow management with multi-platform publishing, SEO optimization, and team collaboration",
          "item": [
            {
              "name": "Create Content",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"databaseId\": \"{{databaseId}}\",\n  \"title\": \"The Future of AI in Software Development\",\n  \"subtitle\": \"How artificial intelligence is transforming the way we build software\",\n  \"description\": \"An in-depth exploration of AI tools and techniques that are revolutionizing software development, from code generation to automated testing and deployment.\",\n  \"type\": \"blog_post\",\n  \"priority\": \"high\",\n  \"content\": \"# The Future of AI in Software Development\\n\\nArtificial Intelligence is rapidly transforming the software development landscape. From intelligent code completion to automated testing, AI tools are becoming indispensable for modern developers.\\n\\n## Key Areas of Impact\\n\\n### 1. Code Generation\\nAI-powered tools like GitHub Copilot and ChatGPT are helping developers write code faster and more efficiently.\\n\\n### 2. Automated Testing\\nMachine learning algorithms can now generate comprehensive test suites and identify potential bugs before they reach production.\\n\\n### 3. Code Review\\nAI systems can analyze code quality, suggest improvements, and ensure adherence to best practices.\\n\\n## The Road Ahead\\n\\nAs AI continues to evolve, we can expect even more sophisticated tools that will further streamline the development process while maintaining code quality and security.\",\n  \"excerpt\": \"Discover how AI is revolutionizing software development through intelligent code generation, automated testing, and enhanced code review processes.\",\n  \"seoTitle\": \"AI in Software Development: Future Trends & Tools 2024\",\n  \"metaDescription\": \"Explore how AI is transforming software development with intelligent code generation, automated testing, and advanced code review tools. Learn about the future trends.\",\n  \"keywords\": [\"artificial intelligence\", \"software development\", \"AI tools\", \"code generation\", \"automated testing\", \"GitHub Copilot\", \"machine learning\", \"developer productivity\"],\n  \"slug\": \"future-ai-software-development-2024\",\n  \"scheduledDate\": \"2024-03-15T10:00:00.000Z\",\n  \"currentStage\": \"writing\",\n  \"assignedTo\": \"{{userId}}\",\n  \"reviewers\": [\"{{userId}}\", \"64f8a1b2c3d4e5f6a7b8c9d1\"],\n  \"approvers\": [\"64f8a1b2c3d4e5f6a7b8c9d2\"],\n  \"categories\": [\"Technology\", \"AI\", \"Software Development\", \"Programming\"],\n  \"tags\": [\"AI\", \"machine-learning\", \"developer-tools\", \"automation\", \"future-tech\", \"programming\"],\n  \"series\": \"AI in Tech Series\",\n  \"seriesOrder\": 1,\n  \"relatedContentIds\": [],\n  \"sourceNoteIds\": [\"{{noteId}}\"],\n  \"sourceResourceIds\": [\"{{resourceId}}\"],\n  \"featuredImage\": {\n    \"url\": \"https://example.com/images/ai-software-development.jpg\",\n    \"alt\": \"AI and software development concept illustration\",\n    \"caption\": \"The intersection of AI and software development is creating new possibilities for developers worldwide.\"\n  },\n  \"autoPublish\": false,\n  \"autoPromote\": true,\n  \"isPublic\": true,\n  \"allowComments\": true,\n  \"requireApproval\": true,\n  \"customFields\": {\n    \"targetAudience\": \"Software developers, tech enthusiasts, AI researchers\",\n    \"readingLevel\": \"intermediate\",\n    \"estimatedReadTime\": \"8 minutes\",\n    \"contentGoal\": \"educate and inform about AI trends\",\n    \"callToAction\": \"Subscribe to newsletter for more AI insights\"\n  }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/content",
                  "host": ["{{baseUrl}}"],
                  "path": ["content"]
                },
                "description": "Create a new content piece with comprehensive metadata and workflow settings"
              },
              "response": []
            },
            {
              "name": "Get Content",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/content?limit=10&sortBy=updatedAt&sortOrder=desc",
                  "host": ["{{baseUrl}}"],
                  "path": ["content"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    },
                    {
                      "key": "sortBy",
                      "value": "updatedAt",
                      "description": "Sort field"
                    },
                    {
                      "key": "sortOrder",
                      "value": "desc",
                      "description": "Sort order"
                    }
                  ]
                },
                "description": "Get all content with optional filtering and sorting"
              },
              "response": []
            },
            {
              "name": "Get Content by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/content/{{contentId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["content", "{{contentId}}"]
                },
                "description": "Get a specific content piece by ID with all details and metadata"
              },
              "response": []
            },
            {
              "name": "Update Content",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"The Future of AI in Software Development - Updated\",\n  \"status\": \"review\",\n  \"currentStage\": \"review\",\n  \"content\": \"# The Future of AI in Software Development\\n\\nArtificial Intelligence is rapidly transforming the software development landscape. From intelligent code completion to automated testing, AI tools are becoming indispensable for modern developers.\\n\\n## Key Areas of Impact\\n\\n### 1. Code Generation\\nAI-powered tools like GitHub Copilot, ChatGPT, and Claude are helping developers write code faster and more efficiently. These tools can generate entire functions, suggest optimizations, and even help with debugging.\\n\\n### 2. Automated Testing\\nMachine learning algorithms can now generate comprehensive test suites, identify edge cases, and predict potential bugs before they reach production. Tools like Testim and Applitools are leading this revolution.\\n\\n### 3. Code Review\\nAI systems can analyze code quality, suggest improvements, ensure adherence to best practices, and even detect security vulnerabilities. DeepCode and SonarQube are examples of such tools.\\n\\n### 4. DevOps and Deployment\\nAI is also transforming DevOps with intelligent monitoring, predictive scaling, and automated incident response.\\n\\n## The Road Ahead\\n\\nAs AI continues to evolve, we can expect even more sophisticated tools that will further streamline the development process while maintaining code quality and security. The future holds promise for AI pair programming, intelligent architecture suggestions, and fully automated code optimization.\",\n  \"editorNotes\": \"Added new section on DevOps and expanded existing sections with specific tool examples. Ready for review.\",\n  \"customFields\": {\n    \"targetAudience\": \"Software developers, tech enthusiasts, AI researchers, DevOps engineers\",\n    \"readingLevel\": \"intermediate\",\n    \"estimatedReadTime\": \"10 minutes\",\n    \"contentGoal\": \"educate and inform about AI trends in software development\",\n    \"callToAction\": \"Subscribe to newsletter for more AI insights\",\n    \"lastUpdated\": \"2024-02-15T14:30:00.000Z\"\n  }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/content/{{contentId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["content", "{{contentId}}"]
                },
                "description": "Update an existing content piece"
              },
              "response": []
            },
            {
              "name": "Delete Content",
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/content/{{contentId}}?permanent=false",
                  "host": ["{{baseUrl}}"],
                  "path": ["content", "{{contentId}}"],
                  "query": [
                    {
                      "key": "permanent",
                      "value": "false",
                      "description": "Soft delete if false"
                    }
                  ]
                },
                "description": "Delete a content piece (soft delete by default)"
              },
              "response": []
            },
            {
              "name": "Get Content Statistics",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/content/stats?databaseId={{databaseId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["content", "stats"],
                  "query": [
                    {
                      "key": "databaseId",
                      "value": "{{databaseId}}",
                      "description": "Filter by database",
                      "disabled": true
                    }
                  ]
                },
                "description": "Get comprehensive content statistics and analytics"
              },
              "response": []
            },
            {
              "name": "Get Draft Content",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/content/drafts?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["content", "drafts"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get all draft content pieces"
              },
              "response": []
            },
            {
              "name": "Get Published Content",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/content/published?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["content", "published"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get all published content pieces"
              },
              "response": []
            },
            {
              "name": "Get Scheduled Content",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/content/scheduled?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["content", "scheduled"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get all scheduled content pieces"
              },
              "response": []
            },
            {
              "name": "Get Content Templates",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/content/templates?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["content", "templates"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get all content templates"
              },
              "response": []
            },
            {
              "name": "Get Content by Type",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/content/type/blog_post?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["content", "type", "blog_post"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get content filtered by specific type"
              },
              "response": []
            },
            {
              "name": "Get Content by Status",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/content/status/review?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["content", "status", "review"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get content filtered by specific status"
              },
              "response": []
            },
            {
              "name": "Get Content by Stage",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/content/stage/writing?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["content", "stage", "writing"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get content filtered by specific workflow stage"
              },
              "response": []
            },
            {
              "name": "Get Content by Series",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/content/series/AI%20in%20Tech%20Series?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["content", "series", "AI%20in%20Tech%20Series"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get content in a specific series"
              },
              "response": []
            },
            {
              "name": "Search Content",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/content/search?q=artificial%20intelligence&limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["content", "search"],
                  "query": [
                    {
                      "key": "q",
                      "value": "artificial intelligence",
                      "description": "Search query"
                    },
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Search content by title, description, content, and tags"
              },
              "response": []
            },
            {
              "name": "Duplicate Content",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"The Future of AI in Software Development - Part 2\",\n  \"databaseId\": \"{{databaseId}}\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/content/{{contentId}}/duplicate",
                  "host": ["{{baseUrl}}"],
                  "path": ["content", "{{contentId}}", "duplicate"]
                },
                "description": "Create a duplicate of an existing content piece"
              },
              "response": []
            },
            {
              "name": "Move to Next Stage",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"notes\": \"Content has been thoroughly reviewed and is ready for the next stage. All feedback has been incorporated and SEO optimization is complete.\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/content/{{contentId}}/next-stage",
                  "host": ["{{baseUrl}}"],
                  "path": ["content", "{{contentId}}", "next-stage"]
                },
                "description": "Move content to the next workflow stage"
              },
              "response": []
            },
            {
              "name": "Assign Content",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"assignedTo\": \"{{userId}}\",\n  \"notes\": \"Assigning to senior editor for final review and SEO optimization before publication.\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/content/{{contentId}}/assign",
                  "host": ["{{baseUrl}}"],
                  "path": ["content", "{{contentId}}", "assign"]
                },
                "description": "Assign content to a specific user"
              },
              "response": []
            },
            {
              "name": "Bulk Update Content",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"contentIds\": [\"{{contentId}}\", \"64f8a1b2c3d4e5f6a7b8c9d7\"],\n  \"updates\": {\n    \"status\": \"approved\",\n    \"currentStage\": \"scheduling\",\n    \"tags\": [\"AI\", \"technology\", \"approved\", \"ready-to-publish\"],\n    \"customFields\": {\n      \"approvalDate\": \"2024-02-15T16:00:00.000Z\",\n      \"approvedBy\": \"Editorial Team\"\n    }\n  }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/content/bulk/update",
                  "host": ["{{baseUrl}}"],
                  "path": ["content", "bulk", "update"]
                },
                "description": "Update multiple content pieces at once"
              },
              "response": []
            },
            {
              "name": "Bulk Delete Content",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"contentIds\": [\"64f8a1b2c3d4e5f6a7b8c9d7\", \"64f8a1b2c3d4e5f6a7b8c9d8\"],\n  \"permanent\": false\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/content/bulk/delete",
                  "host": ["{{baseUrl}}"],
                  "path": ["content", "bulk", "delete"]
                },
                "description": "Delete multiple content pieces at once"
              },
              "response": []
            }
          ]
        },
        {
          "name": "People Management",
          "description": "Contact management and relationship tracking with comprehensive personal and professional information",
          "item": [
            {
              "name": "Create Person",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"databaseId\": \"{{databaseId}}\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Smith\",\n  \"nickname\": \"Johnny\",\n  \"title\": \"Mr.\",\n  \"company\": \"Tech Innovations Inc.\",\n  \"department\": \"Engineering\",\n  \"position\": \"Senior Software Engineer\",\n  \"contactInfo\": {\n    \"email\": \"john.smith@techinnovations.com\",\n    \"phone\": \"+1-555-123-4567\",\n    \"address\": {\n      \"street\": \"123 Innovation Drive\",\n      \"city\": \"San Francisco\",\n      \"state\": \"CA\",\n      \"country\": \"USA\",\n      \"zipCode\": \"94105\"\n    },\n    \"socialMedia\": {\n      \"linkedin\": \"https://linkedin.com/in/johnsmith\",\n      \"twitter\": \"@johnsmith_dev\",\n      \"github\": \"johnsmith-dev\",\n      \"website\": \"https://johnsmith.dev\"\n    }\n  },\n  \"type\": \"professional\",\n  \"relationshipNotes\": \"Met at tech conference in 2023. Great expertise in React and Node.js.\",\n  \"howWeMet\": \"Tech Conference 2023 - React Summit\",\n  \"metDate\": \"2023-10-15T14:30:00.000Z\",\n  \"communicationPreference\": [\"email\", \"video_call\", \"messaging_app\"],\n  \"timezone\": \"America/Los_Angeles\",\n  \"birthday\": \"1990-03-15T00:00:00.000Z\",\n  \"interests\": [\"React\", \"Node.js\", \"TypeScript\", \"AI/ML\", \"Open Source\", \"Photography\"],\n  \"skills\": [\"JavaScript\", \"TypeScript\", \"React\", \"Node.js\", \"Python\", \"Docker\", \"AWS\"],\n  \"goals\": [\"Lead a major open source project\", \"Speak at international conferences\", \"Mentor junior developers\"],\n  \"challenges\": [\"Work-life balance\", \"Keeping up with rapidly changing tech stack\"],\n  \"personalNotes\": \"Very passionate about clean code and best practices. Has a great sense of humor and is always willing to help others. Loves photography in his spare time.\",\n  \"industry\": \"Technology\",\n  \"experience\": \"8+ years in software development, specializing in full-stack web applications\",\n  \"expertise\": [\"Full-Stack Development\", \"React Ecosystem\", \"Node.js\", \"Cloud Architecture\", \"DevOps\"],\n  \"contactFrequency\": \"monthly\",\n  \"nextFollowUpDate\": \"2024-02-15T10:00:00.000Z\",\n  \"tags\": [\"tech-lead\", \"react-expert\", \"mentor\", \"conference-speaker\"],\n  \"customFields\": {\n    \"preferredMeetingTime\": \"10:00 AM PST\",\n    \"coffeePreference\": \"Espresso\",\n    \"workingStyle\": \"Remote-first\"\n  },\n  \"isFavorite\": true,\n  \"reminderEnabled\": true\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/people",
                  "host": ["{{baseUrl}}"],
                  "path": ["people"]
                },
                "description": "Create a new contact with comprehensive information"
              },
              "response": []
            },
            {
              "name": "Get People",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/people?limit=20&sortBy=lastName&sortOrder=asc",
                  "host": ["{{baseUrl}}"],
                  "path": ["people"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "20",
                      "description": "Number of results"
                    },
                    {
                      "key": "sortBy",
                      "value": "lastName",
                      "description": "Sort field"
                    },
                    {
                      "key": "sortOrder",
                      "value": "asc",
                      "description": "Sort order"
                    }
                  ]
                },
                "description": "Get all people with optional filtering"
              },
              "response": []
            },
            {
              "name": "Get Person by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/people/{{personId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["people", "{{personId}}"]
                },
                "description": "Get a specific person by ID"
              },
              "response": []
            },
            {
              "name": "Update Person",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"position\": \"Lead Software Engineer\",\n  \"contactInfo\": {\n    \"email\": \"john.smith@techinnovations.com\",\n    \"phone\": \"+1-555-123-4567\",\n    \"socialMedia\": {\n      \"linkedin\": \"https://linkedin.com/in/johnsmith\",\n      \"twitter\": \"@johnsmith_dev\",\n      \"github\": \"johnsmith-dev\",\n      \"website\": \"https://johnsmith.dev\"\n    }\n  },\n  \"skills\": [\"JavaScript\", \"TypeScript\", \"React\", \"Node.js\", \"Python\", \"Docker\", \"AWS\", \"Kubernetes\"],\n  \"personalNotes\": \"Recently promoted to Lead Engineer. Very passionate about clean code and best practices. Has a great sense of humor and is always willing to help others. Loves photography in his spare time. Now leading a team of 5 developers.\",\n  \"nextFollowUpDate\": \"2024-03-15T10:00:00.000Z\",\n  \"tags\": [\"tech-lead\", \"react-expert\", \"mentor\", \"conference-speaker\", \"team-leader\"]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/people/{{personId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["people", "{{personId}}"]
                },
                "description": "Update an existing person"
              },
              "response": []
            },
            {
              "name": "Delete Person",
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/people/{{personId}}?permanent=false",
                  "host": ["{{baseUrl}}"],
                  "path": ["people", "{{personId}}"],
                  "query": [
                    {
                      "key": "permanent",
                      "value": "false",
                      "description": "Soft delete if false"
                    }
                  ]
                },
                "description": "Delete a person (soft delete by default)"
              },
              "response": []
            },
            {
              "name": "Get People Statistics",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/people/stats?period=month&databaseId={{databaseId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["people", "stats"],
                  "query": [
                    {
                      "key": "period",
                      "value": "month",
                      "description": "Statistics period"
                    },
                    {
                      "key": "databaseId",
                      "value": "{{databaseId}}",
                      "description": "Filter by database",
                      "disabled": true
                    }
                  ]
                },
                "description": "Get comprehensive people statistics and analytics"
              },
              "response": []
            },
            {
              "name": "Get Favorite People",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/people/favorites?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["people", "favorites"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get all favorite people"
              },
              "response": []
            },
            {
              "name": "Get People by Type",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/people/type/professional?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["people", "type", "professional"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get people filtered by specific type"
              },
              "response": []
            },
            {
              "name": "Get People by Company",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/people/company/Tech%20Innovations%20Inc.?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["people", "company", "Tech%20Innovations%20Inc."],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get people from a specific company"
              },
              "response": []
            },
            {
              "name": "Get Upcoming Follow-ups",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/people/follow-ups/upcoming?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["people", "follow-ups", "upcoming"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get people with upcoming follow-ups"
              },
              "response": []
            },
            {
              "name": "Get Overdue Follow-ups",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/people/follow-ups/overdue?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["people", "follow-ups", "overdue"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get people with overdue follow-ups"
              },
              "response": []
            },
            {
              "name": "Get Upcoming Birthdays",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/people/birthdays/upcoming?limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["people", "birthdays", "upcoming"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Get people with upcoming birthdays this month"
              },
              "response": []
            },
            {
              "name": "Search People",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/people/search?q=john&limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["people", "search"],
                  "query": [
                    {
                      "key": "q",
                      "value": "john",
                      "description": "Search query"
                    },
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Search people by name, company, position, or notes"
              },
              "response": []
            },
            {
              "name": "Add to Favorites",
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/people/{{personId}}/favorite",
                  "host": ["{{baseUrl}}"],
                  "path": ["people", "{{personId}}", "favorite"]
                },
                "description": "Add a person to favorites"
              },
              "response": []
            },
            {
              "name": "Remove from Favorites",
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/people/{{personId}}/favorite",
                  "host": ["{{baseUrl}}"],
                  "path": ["people", "{{personId}}", "favorite"]
                },
                "description": "Remove a person from favorites"
              },
              "response": []
            },
            {
              "name": "Archive Person",
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/people/{{personId}}/archive",
                  "host": ["{{baseUrl}}"],
                  "path": ["people", "{{personId}}", "archive"]
                },
                "description": "Archive a person"
              },
              "response": []
            },
            {
              "name": "Unarchive Person",
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/people/{{personId}}/unarchive",
                  "host": ["{{baseUrl}}"],
                  "path": ["people", "{{personId}}", "unarchive"]
                },
                "description": "Unarchive a person"
              },
              "response": []
            },
            {
              "name": "Duplicate Person",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"firstName\": \"Jane\",\n  \"lastName\": \"Smith\",\n  \"company\": \"Tech Innovations Inc.\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/people/{{personId}}/duplicate",
                  "host": ["{{baseUrl}}"],
                  "path": ["people", "{{personId}}", "duplicate"]
                },
                "description": "Create a duplicate of an existing person"
              },
              "response": []
            },
            {
              "name": "Bulk Update People",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"personIds\": [\"{{personId}}\", \"64f8a1b2c3d4e5f6a7b8c9d7\"],\n  \"updates\": {\n    \"tags\": [\"updated\", \"bulk-operation\"],\n    \"reminderEnabled\": true\n  }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/people/bulk/update",
                  "host": ["{{baseUrl}}"],
                  "path": ["people", "bulk", "update"]
                },
                "description": "Update multiple people at once"
              },
              "response": []
            },
            {
              "name": "Bulk Delete People",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"personIds\": [\"64f8a1b2c3d4e5f6a7b8c9d7\", \"64f8a1b2c3d4e5f6a7b8c9d8\"],\n  \"permanent\": false\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/people/bulk/delete",
                  "host": ["{{baseUrl}}"],
                  "path": ["people", "bulk", "delete"]
                },
                "description": "Delete multiple people at once"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Database Records",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"properties\": {\n    \"title\": {\n      \"type\": \"title\",\n      \"value\": \"New Record Title\"\n    },\n    \"status\": {\n      \"type\": \"select\",\n      \"value\": \"active\"\n    },\n    \"priority\": {\n      \"type\": \"select\",\n      \"value\": \"medium\"\n    },\n    \"description\": {\n      \"type\": \"rich_text\",\n      \"value\": \"Record description\"\n    }\n  },\n  \"blocks\": [\n    {\n      \"type\": \"paragraph\",\n      \"content\": \"This is the first paragraph of content.\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/records",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "records"]
            },
            "description": "Create a new record in a database"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"properties\": {\n    \"title\": {\n      \"type\": \"title\",\n      \"value\": \"New Record Title\"\n    }\n  }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/databases/64f8a1b2c3d4e5f6a7b8c9d1/records",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "64f8a1b2c3d4e5f6a7b8c9d1", "records"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Record created successfully\",\n  \"data\": {\n    \"id\": \"64f8a1b2c3d4e5f6a7b8c9d5\",\n    \"databaseId\": \"64f8a1b2c3d4e5f6a7b8c9d1\",\n    \"properties\": {\n      \"title\": {\n        \"type\": \"title\",\n        \"value\": \"New Record Title\"\n      },\n      \"status\": {\n        \"type\": \"select\",\n        \"value\": \"active\"\n      }\n    },\n    \"blocks\": [\n      {\n        \"id\": \"block_1\",\n        \"type\": \"paragraph\",\n        \"content\": \"This is the first paragraph of content.\"\n      }\n    ],\n    \"createdAt\": \"2023-09-06T20:00:00.000Z\",\n    \"updatedAt\": \"2023-09-06T20:00:00.000Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Get Database Records",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/records?page=1&limit=25&sortBy=createdAt&sortOrder=desc&filter=",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "records"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                },
                {
                  "key": "limit",
                  "value": "25",
                  "description": "Records per page"
                },
                {
                  "key": "sortBy",
                  "value": "createdAt",
                  "description": "Sort field"
                },
                {
                  "key": "sortOrder",
                  "value": "desc",
                  "description": "Sort order"
                },
                {
                  "key": "filter",
                  "value": "",
                  "description": "Filter conditions"
                }
              ]
            },
            "description": "Get all records from a database with pagination and filtering"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/databases/64f8a1b2c3d4e5f6a7b8c9d1/records",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "64f8a1b2c3d4e5f6a7b8c9d1", "records"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Records retrieved successfully\",\n  \"data\": {\n    \"records\": [\n      {\n        \"id\": \"64f8a1b2c3d4e5f6a7b8c9d5\",\n        \"databaseId\": \"64f8a1b2c3d4e5f6a7b8c9d1\",\n        \"properties\": {\n          \"title\": {\n            \"type\": \"title\",\n            \"value\": \"Sample Record\"\n          },\n          \"status\": {\n            \"type\": \"select\",\n            \"value\": \"active\"\n          }\n        },\n        \"createdAt\": \"2023-09-06T20:00:00.000Z\",\n        \"updatedAt\": \"2023-09-06T20:00:00.000Z\"\n      }\n    ],\n    \"pagination\": {\n      \"total\": 1,\n      \"page\": 1,\n      \"limit\": 25,\n      \"totalPages\": 1,\n      \"hasNext\": false,\n      \"hasPrev\": false\n    }\n  }\n}"
            }
          ]
        },
        {
          "name": "Database Properties",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Priority\",\n  \"type\": \"select\",\n  \"config\": {\n    \"options\": [\n      {\n        \"name\": \"High\",\n        \"color\": \"red\",\n        \"value\": \"high\"\n      },\n      {\n        \"name\": \"Medium\",\n        \"color\": \"yellow\",\n        \"value\": \"medium\"\n      },\n      {\n        \"name\": \"Low\",\n        \"color\": \"green\",\n        \"value\": \"low\"\n      }\n    ]\n  },\n  \"isRequired\": false,\n  \"description\": \"Task priority level\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/properties",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "properties"]
            },
            "description": "Create a new property for a database"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Priority\",\n  \"type\": \"select\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/databases/64f8a1b2c3d4e5f6a7b8c9d1/properties",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "64f8a1b2c3d4e5f6a7b8c9d1", "properties"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Property created successfully\",\n  \"data\": {\n    \"id\": \"property_123\",\n    \"databaseId\": \"64f8a1b2c3d4e5f6a7b8c9d1\",\n    \"name\": \"Priority\",\n    \"type\": \"select\",\n    \"config\": {\n      \"options\": [\n        {\n          \"name\": \"High\",\n          \"color\": \"red\",\n          \"value\": \"high\"\n        }\n      ]\n    },\n    \"isRequired\": false,\n    \"order\": 1,\n    \"createdAt\": \"2023-09-06T20:30:00.000Z\"\n  }\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Email Management",
      "description": "Email service endpoints for sending various types of emails",
      "item": [
        {
          "name": "Send Test Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"to\": \"test@example.com\",\n  \"subject\": \"Test Email\",\n  \"text\": \"This is a test email\",\n  \"html\": \"<p>This is a <strong>test email</strong></p>\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/email/test",
              "host": ["{{baseUrl}}"],
              "path": ["email", "test"]
            },
            "description": "Send a test email (Admin only)"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"to\": \"test@example.com\",\n  \"subject\": \"Test Email\",\n  \"text\": \"This is a test email\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/email/test",
                  "host": ["{{baseUrl}}"],
                  "path": ["email", "test"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Test email sent successfully\",\n  \"data\": {\n    \"sent\": true\n  }\n}"
            }
          ]
        },
        {
          "name": "Send Password Reset Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\",\n  \"resetToken\": \"reset-token-here\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/email/password-reset",
              "host": ["{{baseUrl}}"],
              "path": ["email", "password-reset"]
            },
            "description": "Send password reset email"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"user@example.com\",\n  \"resetToken\": \"reset-token-here\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/email/password-reset",
                  "host": ["{{baseUrl}}"],
                  "path": ["email", "password-reset"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Password reset email sent successfully\",\n  \"data\": {\n    \"sent\": true\n  }\n}"
            }
          ]
        },
        {
          "name": "Send Welcome Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"newuser@example.com\",\n  \"name\": \"New User\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/email/welcome",
              "host": ["{{baseUrl}}"],
              "path": ["email", "welcome"]
            },
            "description": "Send welcome email to new user"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"newuser@example.com\",\n  \"name\": \"New User\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/email/welcome",
                  "host": ["{{baseUrl}}"],
                  "path": ["email", "welcome"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Welcome email sent successfully\",\n  \"data\": {\n    \"sent\": true\n  }\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "File Management",
      "description": "File upload, download, and management endpoints",
      "item": [
        {
          "name": "Upload File",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": []
                },
                {
                  "key": "description",
                  "value": "Sample file upload",
                  "type": "text"
                },
                {
                  "key": "category",
                  "value": "documents",
                  "type": "text"
                },
                {
                  "key": "isPublic",
                  "value": "false",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/files/upload",
              "host": ["{{baseUrl}}"],
              "path": ["files", "upload"]
            },
            "description": "Upload a single file"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "file",
                      "type": "file",
                      "src": []
                    }
                  ]
                },
                "url": {
                  "raw": "{{baseUrl}}/files/upload",
                  "host": ["{{baseUrl}}"],
                  "path": ["files", "upload"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"File uploaded successfully\",\n  \"data\": {\n    \"id\": \"64f8a1b2c3d4e5f6a7b8c9d8\",\n    \"originalName\": \"document.pdf\",\n    \"fileName\": \"document.pdf\",\n    \"mimeType\": \"application/pdf\",\n    \"size\": 1024000,\n    \"url\": \"https://s3.amazonaws.com/bucket/files/document.pdf\",\n    \"description\": \"Sample file upload\",\n    \"category\": \"documents\",\n    \"isPublic\": false,\n    \"createdAt\": \"2023-09-06T16:00:00.000Z\"\n  }\n}"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('fileId', response.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get User Files",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/files?category=documents&search=&mimeType=&sortBy=createdAt&sortOrder=desc&page=1&limit=25",
              "host": ["{{baseUrl}}"],
              "path": ["files"],
              "query": [
                {
                  "key": "category",
                  "value": "documents",
                  "description": "Filter by category"
                },
                {
                  "key": "search",
                  "value": "",
                  "description": "Search in file names"
                },
                {
                  "key": "mimeType",
                  "value": "",
                  "description": "Filter by MIME type"
                },
                {
                  "key": "sortBy",
                  "value": "createdAt",
                  "description": "Sort field"
                },
                {
                  "key": "sortOrder",
                  "value": "desc",
                  "description": "Sort order"
                },
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                },
                {
                  "key": "limit",
                  "value": "25",
                  "description": "Items per page"
                }
              ]
            },
            "description": "Get user's files with filtering and pagination"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/files",
                  "host": ["{{baseUrl}}"],
                  "path": ["files"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Files retrieved successfully\",\n  \"data\": {\n    \"files\": [\n      {\n        \"id\": \"64f8a1b2c3d4e5f6a7b8c9d8\",\n        \"originalName\": \"document.pdf\",\n        \"mimeType\": \"application/pdf\",\n        \"size\": 1024000,\n        \"description\": \"Sample file upload\",\n        \"category\": \"documents\",\n        \"isPublic\": false,\n        \"createdAt\": \"2023-09-06T16:00:00.000Z\"\n      }\n    ],\n    \"pagination\": {\n      \"total\": 1,\n      \"page\": 1,\n      \"limit\": 25,\n      \"totalPages\": 1,\n      \"hasNext\": false,\n      \"hasPrev\": false\n    }\n  }\n}"
            }
          ]
        },
        {
          "name": "Get File by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/files/{{fileId}}",
              "host": ["{{baseUrl}}"],
              "path": ["files", "{{fileId}}"]
            },
            "description": "Get file details by ID"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/files/64f8a1b2c3d4e5f6a7b8c9d8",
                  "host": ["{{baseUrl}}"],
                  "path": ["files", "64f8a1b2c3d4e5f6a7b8c9d8"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"File retrieved successfully\",\n  \"data\": {\n    \"id\": \"64f8a1b2c3d4e5f6a7b8c9d8\",\n    \"originalName\": \"document.pdf\",\n    \"fileName\": \"document.pdf\",\n    \"mimeType\": \"application/pdf\",\n    \"size\": 1024000,\n    \"url\": \"https://s3.amazonaws.com/bucket/files/document.pdf\",\n    \"description\": \"Sample file upload\",\n    \"category\": \"documents\",\n    \"isPublic\": false,\n    \"createdAt\": \"2023-09-06T16:00:00.000Z\",\n    \"updatedAt\": \"2023-09-06T16:00:00.000Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Download File",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/files/{{fileId}}/download",
              "host": ["{{baseUrl}}"],
              "path": ["files", "{{fileId}}", "download"]
            },
            "description": "Download file by ID"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/files/64f8a1b2c3d4e5f6a7b8c9d8/download",
                  "host": ["{{baseUrl}}"],
                  "path": ["files", "64f8a1b2c3d4e5f6a7b8c9d8", "download"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/pdf"
                },
                {
                  "key": "Content-Disposition",
                  "value": "attachment; filename=\"document.pdf\""
                },
                {
                  "key": "Content-Length",
                  "value": "1024000"
                }
              ],
              "cookie": [],
              "body": "[Binary file content]"
            }
          ]
        },
        {
          "name": "Delete File",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/files/{{fileId}}",
              "host": ["{{baseUrl}}"],
              "path": ["files", "{{fileId}}"]
            },
            "description": "Delete file by ID"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/files/64f8a1b2c3d4e5f6a7b8c9d8",
                  "host": ["{{baseUrl}}"],
                  "path": ["files", "64f8a1b2c3d4e5f6a7b8c9d8"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"File deleted successfully\",\n  \"data\": null\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Task Management - Advanced",
      "description": "Advanced task management features including time tracking, comments, and specialized operations",
      "item": [
        {
          "name": "Complete Task",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}/complete",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}", "complete"]
            },
            "description": "Mark a task as completed"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/tasks/64f8a1b2c3d4e5f6a7b8c9d4/complete",
                  "host": ["{{baseUrl}}"],
                  "path": ["tasks", "64f8a1b2c3d4e5f6a7b8c9d4", "complete"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Task completed successfully\",\n  \"data\": {\n    \"id\": \"64f8a1b2c3d4e5f6a7b8c9d4\",\n    \"status\": \"completed\",\n    \"completedAt\": \"2023-09-06T21:00:00.000Z\",\n    \"completionTime\": 3600\n  }\n}"
            }
          ]
        },
        {
          "name": "Assign Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"assigneeId\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n  \"note\": \"Please review and complete by end of week\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}/assign",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}", "assign"]
            },
            "description": "Assign a task to a user"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"assigneeId\": \"64f8a1b2c3d4e5f6a7b8c9d0\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/tasks/64f8a1b2c3d4e5f6a7b8c9d4/assign",
                  "host": ["{{baseUrl}}"],
                  "path": ["tasks", "64f8a1b2c3d4e5f6a7b8c9d4", "assign"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Task assigned successfully\",\n  \"data\": {\n    \"id\": \"64f8a1b2c3d4e5f6a7b8c9d4\",\n    \"assigneeId\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n    \"assignedAt\": \"2023-09-06T21:00:00.000Z\",\n    \"assignmentNote\": \"Please review and complete by end of week\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Start Time Tracking",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}/time/start",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}", "time", "start"]
            },
            "description": "Start time tracking for a task"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/tasks/64f8a1b2c3d4e5f6a7b8c9d4/time/start",
                  "host": ["{{baseUrl}}"],
                  "path": ["tasks", "64f8a1b2c3d4e5f6a7b8c9d4", "time", "start"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Time tracking started\",\n  \"data\": {\n    \"taskId\": \"64f8a1b2c3d4e5f6a7b8c9d4\",\n    \"startTime\": \"2023-09-06T21:00:00.000Z\",\n    \"isTracking\": true,\n    \"sessionId\": \"session_123\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Stop Time Tracking",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}/time/stop",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}", "time", "stop"]
            },
            "description": "Stop time tracking for a task"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/tasks/64f8a1b2c3d4e5f6a7b8c9d4/time/stop",
                  "host": ["{{baseUrl}}"],
                  "path": ["tasks", "64f8a1b2c3d4e5f6a7b8c9d4", "time", "stop"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Time tracking stopped\",\n  \"data\": {\n    \"taskId\": \"64f8a1b2c3d4e5f6a7b8c9d4\",\n    \"startTime\": \"2023-09-06T21:00:00.000Z\",\n    \"endTime\": \"2023-09-06T22:30:00.000Z\",\n    \"duration\": 5400,\n    \"isTracking\": false,\n    \"sessionId\": \"session_123\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Add Task Comment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"This task is progressing well. Need to review the implementation details.\",\n  \"mentions\": [\"64f8a1b2c3d4e5f6a7b8c9d0\"],\n  \"attachments\": []\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tasks/{{taskId}}/comments",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "{{taskId}}", "comments"]
            },
            "description": "Add a comment to a task"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"This task is progressing well.\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/tasks/64f8a1b2c3d4e5f6a7b8c9d4/comments",
                  "host": ["{{baseUrl}}"],
                  "path": ["tasks", "64f8a1b2c3d4e5f6a7b8c9d4", "comments"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Comment added successfully\",\n  \"data\": {\n    \"id\": \"comment_123\",\n    \"taskId\": \"64f8a1b2c3d4e5f6a7b8c9d4\",\n    \"content\": \"This task is progressing well. Need to review the implementation details.\",\n    \"authorId\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n    \"mentions\": [\"64f8a1b2c3d4e5f6a7b8c9d0\"],\n    \"reactions\": [],\n    \"isResolved\": false,\n    \"createdAt\": \"2023-09-06T21:30:00.000Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Get Overdue Tasks",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/tasks/overdue",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "overdue"]
            },
            "description": "Get all overdue tasks for the current user"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/tasks/overdue",
                  "host": ["{{baseUrl}}"],
                  "path": ["tasks", "overdue"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Overdue tasks retrieved successfully\",\n  \"data\": {\n    \"tasks\": [\n      {\n        \"id\": \"64f8a1b2c3d4e5f6a7b8c9d4\",\n        \"title\": \"Overdue Task\",\n        \"dueDate\": \"2023-09-05T23:59:59.000Z\",\n        \"priority\": \"high\",\n        \"status\": \"in_progress\",\n        \"overdueDays\": 1\n      }\n    ],\n    \"count\": 1,\n    \"totalOverdueDays\": 1\n  }\n}"
            }
          ]
        },
        {
          "name": "Bulk Update Tasks",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"taskIds\": [\"64f8a1b2c3d4e5f6a7b8c9d4\", \"64f8a1b2c3d4e5f6a7b8c9d5\"],\n  \"updates\": {\n    \"status\": \"completed\",\n    \"priority\": \"low\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tasks/bulk/update",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "bulk", "update"]
            },
            "description": "Update multiple tasks at once"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"taskIds\": [\"64f8a1b2c3d4e5f6a7b8c9d4\"],\n  \"updates\": {\n    \"status\": \"completed\"\n  }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/tasks/bulk/update",
                  "host": ["{{baseUrl}}"],
                  "path": ["tasks", "bulk", "update"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Tasks updated successfully\",\n  \"data\": {\n    \"updatedCount\": 2,\n    \"updatedTasks\": [\n      {\n        \"id\": \"64f8a1b2c3d4e5f6a7b8c9d4\",\n        \"status\": \"completed\",\n        \"priority\": \"low\"\n      }\n    ]\n  }\n}"
            }
          ]
        },
        {
          "name": "Bulk Upload Files",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": []
                },
                {
                  "key": "files",
                  "type": "file",
                  "src": []
                },
                {
                  "key": "category",
                  "value": "documents",
                  "type": "text"
                },
                {
                  "key": "isPublic",
                  "value": "false",
                  "type": "text"
                },
                {
                  "key": "description",
                  "value": "Bulk file upload",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/files/bulk-upload",
              "host": ["{{baseUrl}}"],
              "path": ["files", "bulk-upload"]
            },
            "description": "Upload multiple files at once (max 10 files)"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "files",
                      "type": "file",
                      "src": []
                    }
                  ]
                },
                "url": {
                  "raw": "{{baseUrl}}/files/bulk-upload",
                  "host": ["{{baseUrl}}"],
                  "path": ["files", "bulk-upload"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Files uploaded successfully\",\n  \"data\": {\n    \"uploadedFiles\": [\n      {\n        \"id\": \"64f8a1b2c3d4e5f6a7b8c9d8\",\n        \"originalName\": \"document1.pdf\",\n        \"fileName\": \"document1.pdf\",\n        \"mimeType\": \"application/pdf\",\n        \"size\": 1024000,\n        \"url\": \"https://s3.amazonaws.com/bucket/files/document1.pdf\"\n      },\n      {\n        \"id\": \"64f8a1b2c3d4e5f6a7b8c9d9\",\n        \"originalName\": \"document2.pdf\",\n        \"fileName\": \"document2.pdf\",\n        \"mimeType\": \"application/pdf\",\n        \"size\": 2048000,\n        \"url\": \"https://s3.amazonaws.com/bucket/files/document2.pdf\"\n      }\n    ],\n    \"totalUploaded\": 2,\n    \"totalSize\": 3072000,\n    \"uploadedAt\": \"2023-09-06T16:30:00.000Z\"\n  }\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Calendar Management",
      "description": "Calendar and event management endpoints",
      "item": [
        {
          "name": "Create Calendar",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Work Calendar\",\n  \"description\": \"Calendar for work-related events\",\n  \"color\": \"#3B82F6\",\n  \"isDefault\": false,\n  \"isPublic\": false,\n  \"timezone\": \"America/New_York\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/calendar",
              "host": ["{{baseUrl}}"],
              "path": ["calendar"]
            },
            "description": "Create a new calendar"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Work Calendar\",\n  \"description\": \"Calendar for work-related events\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/calendar",
                  "host": ["{{baseUrl}}"],
                  "path": ["calendar"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Calendar created successfully\",\n  \"data\": {\n    \"id\": \"64f8a1b2c3d4e5f6a7b8c9d9\",\n    \"name\": \"Work Calendar\",\n    \"description\": \"Calendar for work-related events\",\n    \"color\": \"#3B82F6\",\n    \"isDefault\": false,\n    \"isPublic\": false,\n    \"timezone\": \"America/New_York\",\n    \"createdAt\": \"2023-09-06T17:00:00.000Z\",\n    \"updatedAt\": \"2023-09-06T17:00:00.000Z\"\n  }\n}"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('calendarId', response.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Calendars",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/calendar",
              "host": ["{{baseUrl}}"],
              "path": ["calendar"]
            },
            "description": "Get all user calendars"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/calendar",
                  "host": ["{{baseUrl}}"],
                  "path": ["calendar"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Calendars retrieved successfully\",\n  \"data\": [\n    {\n      \"id\": \"64f8a1b2c3d4e5f6a7b8c9d9\",\n      \"name\": \"Work Calendar\",\n      \"description\": \"Calendar for work-related events\",\n      \"color\": \"#3B82F6\",\n      \"isDefault\": false,\n      \"isPublic\": false,\n      \"timezone\": \"America/New_York\",\n      \"eventCount\": 5,\n      \"createdAt\": \"2023-09-06T17:00:00.000Z\"\n    }\n  ]\n}"
            }
          ]
        },
        {
          "name": "Create Event",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"calendarId\": \"{{calendarId}}\",\n  \"title\": \"Team Meeting\",\n  \"description\": \"Weekly team sync meeting\",\n  \"startTime\": \"2023-09-07T10:00:00.000Z\",\n  \"endTime\": \"2023-09-07T11:00:00.000Z\",\n  \"location\": \"Conference Room A\",\n  \"isAllDay\": false,\n  \"recurrence\": {\n    \"frequency\": \"weekly\",\n    \"interval\": 1,\n    \"daysOfWeek\": [\"thursday\"]\n  },\n  \"attendees\": [\n    {\n      \"email\": \"john@example.com\",\n      \"name\": \"John Doe\",\n      \"status\": \"pending\"\n    }\n  ],\n  \"reminders\": [\n    {\n      \"method\": \"email\",\n      \"minutes\": 15\n    },\n    {\n      \"method\": \"popup\",\n      \"minutes\": 5\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/calendar/events",
              "host": ["{{baseUrl}}"],
              "path": ["calendar", "events"]
            },
            "description": "Create a new calendar event"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"calendarId\": \"64f8a1b2c3d4e5f6a7b8c9d9\",\n  \"title\": \"Team Meeting\",\n  \"startTime\": \"2023-09-07T10:00:00.000Z\",\n  \"endTime\": \"2023-09-07T11:00:00.000Z\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/calendar/events",
                  "host": ["{{baseUrl}}"],
                  "path": ["calendar", "events"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Event created successfully\",\n  \"data\": {\n    \"id\": \"64f8a1b2c3d4e5f6a7b8c9da\",\n    \"calendarId\": \"64f8a1b2c3d4e5f6a7b8c9d9\",\n    \"title\": \"Team Meeting\",\n    \"description\": \"Weekly team sync meeting\",\n    \"startTime\": \"2023-09-07T10:00:00.000Z\",\n    \"endTime\": \"2023-09-07T11:00:00.000Z\",\n    \"location\": \"Conference Room A\",\n    \"isAllDay\": false,\n    \"status\": \"confirmed\",\n    \"attendees\": [\n      {\n        \"email\": \"john@example.com\",\n        \"name\": \"John Doe\",\n        \"status\": \"pending\"\n      }\n    ],\n    \"createdAt\": \"2023-09-06T17:30:00.000Z\"\n  }\n}"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('eventId', response.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Upcoming Events",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/calendar/events/upcoming?limit=10&days=7",
              "host": ["{{baseUrl}}"],
              "path": ["calendar", "events", "upcoming"],
              "query": [
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Number of events to return"
                },
                {
                  "key": "days",
                  "value": "7",
                  "description": "Number of days to look ahead"
                }
              ]
            },
            "description": "Get upcoming events"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/calendar/events/upcoming",
                  "host": ["{{baseUrl}}"],
                  "path": ["calendar", "events", "upcoming"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Upcoming events retrieved successfully\",\n  \"data\": {\n    \"events\": [\n      {\n        \"id\": \"64f8a1b2c3d4e5f6a7b8c9da\",\n        \"title\": \"Team Meeting\",\n        \"startTime\": \"2023-09-07T10:00:00.000Z\",\n        \"endTime\": \"2023-09-07T11:00:00.000Z\",\n        \"calendarId\": \"64f8a1b2c3d4e5f6a7b8c9d9\",\n        \"location\": \"Conference Room A\",\n        \"isAllDay\": false\n      }\n    ],\n    \"count\": 1,\n    \"period\": \"7 days\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Search Events",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/calendar/events/search?q=meeting&limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["calendar", "events", "search"],
              "query": [
                {
                  "key": "q",
                  "value": "meeting",
                  "description": "Search query"
                },
                {
                  "key": "limit",
                  "value": "20",
                  "description": "Maximum results"
                }
              ]
            },
            "description": "Search calendar events"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/calendar/events/search?q=meeting",
                  "host": ["{{baseUrl}}"],
                  "path": ["calendar", "events", "search"],
                  "query": [
                    {
                      "key": "q",
                      "value": "meeting"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Events search completed\",\n  \"data\": {\n    \"events\": [\n      {\n        \"id\": \"64f8a1b2c3d4e5f6a7b8c9da\",\n        \"title\": \"Team Meeting\",\n        \"description\": \"Weekly team sync meeting\",\n        \"startTime\": \"2023-09-07T10:00:00.000Z\",\n        \"calendarId\": \"64f8a1b2c3d4e5f6a7b8c9d9\"\n      }\n    ],\n    \"query\": \"meeting\",\n    \"count\": 1\n  }\n}"
            }
          ]
        },
        {
          "name": "Calendar Connections",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"provider\": \"google\",\n  \"credentials\": {\n    \"accessToken\": \"google_access_token\",\n    \"refreshToken\": \"google_refresh_token\"\n  },\n  \"settings\": {\n    \"syncDirection\": \"bidirectional\",\n    \"autoSync\": true,\n    \"syncFrequency\": \"15min\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/calendar/connections",
              "host": ["{{baseUrl}}"],
              "path": ["calendar", "connections"]
            },
            "description": "Connect external calendar provider"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"provider\": \"google\",\n  \"credentials\": {\n    \"accessToken\": \"google_access_token\"\n  }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/calendar/connections",
                  "host": ["{{baseUrl}}"],
                  "path": ["calendar", "connections"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Calendar connection created successfully\",\n  \"data\": {\n    \"id\": \"connection_123\",\n    \"provider\": \"google\",\n    \"status\": \"connected\",\n    \"lastSync\": \"2023-09-06T22:00:00.000Z\",\n    \"settings\": {\n      \"syncDirection\": \"bidirectional\",\n      \"autoSync\": true,\n      \"syncFrequency\": \"15min\"\n    },\n    \"connectedAt\": \"2023-09-06T22:00:00.000Z\"\n  }\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "System Management",
      "description": "System features including notifications, analytics, and activity tracking",
      "item": [
        {
          "name": "Get Notifications",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/system/notifications?page=1&limit=25&type=&isRead=false",
              "host": ["{{baseUrl}}"],
              "path": ["system", "notifications"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                },
                {
                  "key": "limit",
                  "value": "25",
                  "description": "Items per page"
                },
                {
                  "key": "type",
                  "value": "",
                  "description": "Filter by notification type"
                },
                {
                  "key": "isRead",
                  "value": "false",
                  "description": "Filter by read status"
                }
              ]
            },
            "description": "Get user notifications with filtering"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/system/notifications",
                  "host": ["{{baseUrl}}"],
                  "path": ["system", "notifications"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Notifications retrieved successfully\",\n  \"data\": {\n    \"notifications\": [\n      {\n        \"id\": \"64f8a1b2c3d4e5f6a7b8c9db\",\n        \"type\": \"task_due\",\n        \"title\": \"Task Due Soon\",\n        \"message\": \"Your task 'Implement user authentication' is due in 2 hours\",\n        \"isRead\": false,\n        \"priority\": \"high\",\n        \"entityType\": \"task\",\n        \"entityId\": \"64f8a1b2c3d4e5f6a7b8c9d4\",\n        \"createdAt\": \"2023-09-06T15:00:00.000Z\"\n      }\n    ],\n    \"pagination\": {\n      \"total\": 1,\n      \"page\": 1,\n      \"limit\": 25,\n      \"totalPages\": 1,\n      \"hasNext\": false,\n      \"hasPrev\": false\n    },\n    \"unreadCount\": 1\n  }\n}"
            }
          ]
        },
        {
          "name": "Mark Notification as Read",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/system/notifications/{{notificationId}}/read",
              "host": ["{{baseUrl}}"],
              "path": ["system", "notifications", "{{notificationId}}", "read"]
            },
            "description": "Mark a notification as read"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "PATCH",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/system/notifications/64f8a1b2c3d4e5f6a7b8c9db/read",
                  "host": ["{{baseUrl}}"],
                  "path": ["system", "notifications", "64f8a1b2c3d4e5f6a7b8c9db", "read"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Notification marked as read\",\n  \"data\": {\n    \"id\": \"64f8a1b2c3d4e5f6a7b8c9db\",\n    \"isRead\": true,\n    \"readAt\": \"2023-09-06T18:00:00.000Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Get Activity Feed",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/system/activity?limit=20&entityType=&action=",
              "host": ["{{baseUrl}}"],
              "path": ["system", "activity"],
              "query": [
                {
                  "key": "limit",
                  "value": "20",
                  "description": "Number of activity items"
                },
                {
                  "key": "entityType",
                  "value": "",
                  "description": "Filter by entity type"
                },
                {
                  "key": "action",
                  "value": "",
                  "description": "Filter by action type"
                }
              ]
            },
            "description": "Get user activity feed"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/system/activity",
                  "host": ["{{baseUrl}}"],
                  "path": ["system", "activity"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Activity feed retrieved successfully\",\n  \"data\": [\n    {\n      \"id\": \"activity_1\",\n      \"type\": \"task_completed\",\n      \"action\": \"completed\",\n      \"entityType\": \"task\",\n      \"entityId\": \"64f8a1b2c3d4e5f6a7b8c9d4\",\n      \"entityName\": \"Implement user authentication\",\n      \"description\": \"Completed task: Implement user authentication\",\n      \"userId\": \"64f8a1b2c3d4e5f6a7b8c9d0\",\n      \"timestamp\": \"2023-09-06T16:00:00.000Z\"\n    }\n  ]\n}"
            }
          ]
        },
        {
          "name": "Get Analytics Dashboard",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/system/analytics?period=week&includeProductivity=true&includeTasks=true&includeGoals=true",
              "host": ["{{baseUrl}}"],
              "path": ["system", "analytics"],
              "query": [
                {
                  "key": "period",
                  "value": "week",
                  "description": "Time period for analytics"
                },
                {
                  "key": "includeProductivity",
                  "value": "true",
                  "description": "Include productivity metrics"
                },
                {
                  "key": "includeTasks",
                  "value": "true",
                  "description": "Include task analytics"
                },
                {
                  "key": "includeGoals",
                  "value": "true",
                  "description": "Include goal analytics"
                }
              ]
            },
            "description": "Get comprehensive analytics dashboard"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/system/analytics?period=week",
                  "host": ["{{baseUrl}}"],
                  "path": ["system", "analytics"],
                  "query": [
                    {
                      "key": "period",
                      "value": "week"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Analytics data retrieved successfully\",\n  \"data\": {\n    \"productivity\": {\n      \"tasksCompleted\": 15,\n      \"tasksCreated\": 20,\n      \"completionRate\": 75,\n      \"averageCompletionTime\": 2.5,\n      \"focusTime\": 28.5,\n      \"productivityScore\": 85\n    },\n    \"tasks\": {\n      \"total\": 45,\n      \"completed\": 32,\n      \"inProgress\": 10,\n      \"overdue\": 3,\n      \"byPriority\": {\n        \"high\": 8,\n        \"medium\": 25,\n        \"low\": 12\n      }\n    },\n    \"goals\": {\n      \"total\": 8,\n      \"completed\": 2,\n      \"inProgress\": 5,\n      \"notStarted\": 1,\n      \"averageProgress\": 65\n    },\n    \"timeTracking\": {\n      \"totalHours\": 40,\n      \"billableHours\": 32,\n      \"breakTime\": 8,\n      \"mostProductiveHour\": 10\n    }\n  }\n}"
            }
          ]
        },
        {
          "name": "Get Productivity Analytics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/system/analytics/productivity?period=month&includeGoals=true",
              "host": ["{{baseUrl}}"],
              "path": ["system", "analytics", "productivity"],
              "query": [
                {
                  "key": "period",
                  "value": "month",
                  "description": "Time period for analytics"
                },
                {
                  "key": "includeGoals",
                  "value": "true",
                  "description": "Include goal progress"
                }
              ]
            },
            "description": "Get detailed productivity analytics"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/system/analytics/productivity",
                  "host": ["{{baseUrl}}"],
                  "path": ["system", "analytics", "productivity"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Productivity analytics retrieved successfully\",\n  \"data\": {\n    \"period\": \"month\",\n    \"tasksCompleted\": 45,\n    \"tasksCreated\": 52,\n    \"completionRate\": 86.5,\n    \"averageCompletionTime\": 2.3,\n    \"focusTime\": 120.5,\n    \"productivityScore\": 88,\n    \"trends\": {\n      \"tasksCompletedTrend\": \"+12%\",\n      \"focusTimeTrend\": \"+8%\",\n      \"productivityScoreTrend\": \"+5%\"\n    },\n    \"goals\": {\n      \"monthlyTaskGoal\": 50,\n      \"progress\": 90,\n      \"onTrack\": true\n    }\n  }\n}"
            }
          ]
        },
        {
          "name": "Export Analytics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/system/analytics/export?format=csv&period=quarter&types=productivity,tasks,time",
              "host": ["{{baseUrl}}"],
              "path": ["system", "analytics", "export"],
              "query": [
                {
                  "key": "format",
                  "value": "csv",
                  "description": "Export format (csv, json, xlsx)"
                },
                {
                  "key": "period",
                  "value": "quarter",
                  "description": "Time period"
                },
                {
                  "key": "types",
                  "value": "productivity,tasks,time",
                  "description": "Analytics types to include"
                }
              ]
            },
            "description": "Export analytics data"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/system/analytics/export?format=csv",
                  "host": ["{{baseUrl}}"],
                  "path": ["system", "analytics", "export"],
                  "query": [
                    {
                      "key": "format",
                      "value": "csv"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/csv"
                },
                {
                  "key": "Content-Disposition",
                  "value": "attachment; filename=\"analytics-export-2023-09-06.csv\""
                }
              ],
              "cookie": [],
              "body": "Date,Tasks Completed,Focus Time,Productivity Score\n2023-09-01,5,8.5,85\n2023-09-02,3,6.2,78\n..."
            }
          ]
        }
      ]
    },
    {
      "name": "Content Blocks",
      "description": "Rich content block management for database records",
      "item": [
        {
          "name": "Add Content Block",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"paragraph\",\n  \"content\": \"This is a paragraph block with rich text content.\",\n  \"position\": 0,\n  \"config\": {\n    \"alignment\": \"left\",\n    \"fontSize\": \"medium\"\n  },\n  \"metadata\": {\n    \"author\": \"user\",\n    \"version\": 1\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/records/{{recordId}}/blocks",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "records", "{{recordId}}", "blocks"]
            },
            "description": "Add a content block to a database record"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"type\": \"paragraph\",\n  \"content\": \"This is a paragraph block.\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/databases/64f8a1b2c3d4e5f6a7b8c9d1/records/64f8a1b2c3d4e5f6a7b8c9d5/blocks",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "64f8a1b2c3d4e5f6a7b8c9d1", "records", "64f8a1b2c3d4e5f6a7b8c9d5", "blocks"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Content block added successfully\",\n  \"data\": {\n    \"id\": \"block_123\",\n    \"recordId\": \"64f8a1b2c3d4e5f6a7b8c9d5\",\n    \"type\": \"paragraph\",\n    \"content\": \"This is a paragraph block with rich text content.\",\n    \"position\": 0,\n    \"config\": {\n      \"alignment\": \"left\",\n      \"fontSize\": \"medium\"\n    },\n    \"metadata\": {\n      \"author\": \"user\",\n      \"version\": 1\n    },\n    \"createdAt\": \"2023-09-06T22:30:00.000Z\",\n    \"updatedAt\": \"2023-09-06T22:30:00.000Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Get Content Blocks",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/records/{{recordId}}/blocks?type=&includeArchived=false",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "records", "{{recordId}}", "blocks"],
              "query": [
                {
                  "key": "type",
                  "value": "",
                  "description": "Filter by block type"
                },
                {
                  "key": "includeArchived",
                  "value": "false",
                  "description": "Include archived blocks"
                }
              ]
            },
            "description": "Get all content blocks for a record"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/databases/64f8a1b2c3d4e5f6a7b8c9d1/records/64f8a1b2c3d4e5f6a7b8c9d5/blocks",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "64f8a1b2c3d4e5f6a7b8c9d1", "records", "64f8a1b2c3d4e5f6a7b8c9d5", "blocks"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Content blocks retrieved successfully\",\n  \"data\": {\n    \"blocks\": [\n      {\n        \"id\": \"block_123\",\n        \"type\": \"paragraph\",\n        \"content\": \"This is a paragraph block.\",\n        \"position\": 0,\n        \"isArchived\": false,\n        \"createdAt\": \"2023-09-06T22:30:00.000Z\"\n      },\n      {\n        \"id\": \"block_124\",\n        \"type\": \"heading\",\n        \"content\": \"Section Title\",\n        \"position\": 1,\n        \"config\": {\n          \"level\": 2\n        },\n        \"isArchived\": false,\n        \"createdAt\": \"2023-09-06T22:31:00.000Z\"\n      }\n    ],\n    \"count\": 2\n  }\n}"
            }
          ]
        },
        {
          "name": "Search Content Blocks",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/records/{{recordId}}/blocks/search?query=paragraph&type=&limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "records", "{{recordId}}", "blocks", "search"],
              "query": [
                {
                  "key": "query",
                  "value": "paragraph",
                  "description": "Search query"
                },
                {
                  "key": "type",
                  "value": "",
                  "description": "Filter by block type"
                },
                {
                  "key": "limit",
                  "value": "20",
                  "description": "Maximum results"
                }
              ]
            },
            "description": "Search content blocks within a record"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/databases/64f8a1b2c3d4e5f6a7b8c9d1/records/64f8a1b2c3d4e5f6a7b8c9d5/blocks/search?query=paragraph",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "64f8a1b2c3d4e5f6a7b8c9d1", "records", "64f8a1b2c3d4e5f6a7b8c9d5", "blocks", "search"],
                  "query": [
                    {
                      "key": "query",
                      "value": "paragraph"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Blocks searched successfully\",\n  \"data\": {\n    \"blocks\": [\n      {\n        \"id\": \"block_123\",\n        \"type\": \"paragraph\",\n        \"content\": \"This is a paragraph block with rich text content.\",\n        \"position\": 0,\n        \"relevanceScore\": 0.95,\n        \"highlights\": [\"paragraph\"]\n      }\n    ],\n    \"query\": \"paragraph\",\n    \"count\": 1,\n    \"totalResults\": 1\n  }\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Module Management",
      "description": "Second Brain module initialization and management",
      "item": [
        {
          "name": "Get Available Modules",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/modules/available",
              "host": ["{{baseUrl}}"],
              "path": ["modules", "available"]
            },
            "description": "Get all available module configurations"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/modules/available",
                  "host": ["{{baseUrl}}"],
                  "path": ["modules", "available"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Available modules retrieved successfully\",\n  \"data\": [\n    {\n      \"id\": \"tasks\",\n      \"name\": \"Tasks\",\n      \"description\": \"Task management with rich content support\",\n      \"category\": \"productivity\",\n      \"icon\": \"✅\",\n      \"isCore\": true,\n      \"dependencies\": [],\n      \"features\": [\"task_creation\", \"task_tracking\", \"due_dates\", \"priorities\"]\n    },\n    {\n      \"id\": \"notes\",\n      \"name\": \"Notes\",\n      \"description\": \"Rich note-taking with blocks and linking\",\n      \"category\": \"knowledge\",\n      \"icon\": \"📝\",\n      \"isCore\": true,\n      \"dependencies\": [],\n      \"features\": [\"rich_content\", \"linking\", \"tagging\", \"search\"]\n    },\n    {\n      \"id\": \"calendar\",\n      \"name\": \"Calendar\",\n      \"description\": \"Event scheduling and time management\",\n      \"category\": \"productivity\",\n      \"icon\": \"📅\",\n      \"isCore\": false,\n      \"dependencies\": [\"tasks\"],\n      \"features\": [\"events\", \"scheduling\", \"reminders\", \"sync\"]\n    }\n  ]\n}"
            }
          ]
        },
        {
          "name": "Initialize Core Modules",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"workspaceId\": \"{{workspaceId}}\",\n  \"createSampleData\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/modules/workspaces/{{workspaceId}}/initialize-core",
              "host": ["{{baseUrl}}"],
              "path": ["modules", "workspaces", "{{workspaceId}}", "initialize-core"]
            },
            "description": "Initialize core modules for a workspace"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"workspaceId\": \"workspace_123\",\n  \"createSampleData\": true\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/modules/workspaces/workspace_123/initialize-core",
                  "host": ["{{baseUrl}}"],
                  "path": ["modules", "workspaces", "workspace_123", "initialize-core"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Core modules initialized successfully\",\n  \"data\": {\n    \"workspaceId\": \"workspace_123\",\n    \"initializedModules\": [\n      {\n        \"moduleId\": \"tasks\",\n        \"databaseId\": \"64f8a1b2c3d4e5f6a7b8c9d1\",\n        \"status\": \"initialized\",\n        \"sampleDataCreated\": true\n      },\n      {\n        \"moduleId\": \"notes\",\n        \"databaseId\": \"64f8a1b2c3d4e5f6a7b8c9d2\",\n        \"status\": \"initialized\",\n        \"sampleDataCreated\": true\n      }\n    ],\n    \"totalModules\": 2,\n    \"initializationTime\": \"2023-09-06T18:30:00.000Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Get Workspace Modules",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/modules/workspaces/{{workspaceId}}/overview",
              "host": ["{{baseUrl}}"],
              "path": ["modules", "workspaces", "{{workspaceId}}", "overview"]
            },
            "description": "Get overview of initialized modules in workspace"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/modules/workspaces/workspace_123/overview",
                  "host": ["{{baseUrl}}"],
                  "path": ["modules", "workspaces", "workspace_123", "overview"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Workspace modules overview retrieved successfully\",\n  \"data\": {\n    \"workspaceId\": \"workspace_123\",\n    \"totalModules\": 2,\n    \"initializedModules\": [\n      {\n        \"moduleId\": \"tasks\",\n        \"name\": \"Tasks\",\n        \"databaseId\": \"64f8a1b2c3d4e5f6a7b8c9d1\",\n        \"status\": \"active\",\n        \"recordCount\": 15,\n        \"lastActivity\": \"2023-09-06T16:00:00.000Z\",\n        \"initializedAt\": \"2023-09-06T10:00:00.000Z\"\n      },\n      {\n        \"moduleId\": \"notes\",\n        \"name\": \"Notes\",\n        \"databaseId\": \"64f8a1b2c3d4e5f6a7b8c9d2\",\n        \"status\": \"active\",\n        \"recordCount\": 28,\n        \"lastActivity\": \"2023-09-06T15:30:00.000Z\",\n        \"initializedAt\": \"2023-09-06T10:00:00.000Z\"\n      }\n    ],\n    \"availableModules\": [\n      {\n        \"moduleId\": \"calendar\",\n        \"name\": \"Calendar\",\n        \"canInitialize\": true,\n        \"dependencies\": [\"tasks\"]\n      }\n    ]\n  }\n}"
            }
          ]
        },
        {
          "name": "Get Core Modules",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/modules/core",
              "host": ["{{baseUrl}}"],
              "path": ["modules", "core"]
            },
            "description": "Get core module configurations"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/modules/core",
                  "host": ["{{baseUrl}}"],
                  "path": ["modules", "core"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Core modules retrieved successfully\",\n  \"data\": [\n    {\n      \"id\": \"tasks\",\n      \"name\": \"Tasks\",\n      \"description\": \"Task management with rich content support\",\n      \"isCore\": true,\n      \"isRequired\": true,\n      \"version\": \"1.0.0\",\n      \"dependencies\": []\n    },\n    {\n      \"id\": \"notes\",\n      \"name\": \"Notes\",\n      \"description\": \"Rich note-taking with blocks and linking\",\n      \"isCore\": true,\n      \"isRequired\": true,\n      \"version\": \"1.0.0\",\n      \"dependencies\": []\n    }\n  ]\n}"
            }
          ]
        },
        {
          "name": "Initialize Specific Modules",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"workspaceId\": \"{{workspaceId}}\",\n  \"modules\": [\"calendar\", \"analytics\"],\n  \"createSampleData\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/modules/workspaces/{{workspaceId}}/initialize",
              "host": ["{{baseUrl}}"],
              "path": ["modules", "workspaces", "{{workspaceId}}", "initialize"]
            },
            "description": "Initialize specific modules for a workspace"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"workspaceId\": \"workspace_123\",\n  \"modules\": [\"calendar\"]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/modules/workspaces/workspace_123/initialize",
                  "host": ["{{baseUrl}}"],
                  "path": ["modules", "workspaces", "workspace_123", "initialize"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Modules initialized successfully\",\n  \"data\": {\n    \"workspaceId\": \"workspace_123\",\n    \"initializedModules\": [\n      {\n        \"moduleId\": \"calendar\",\n        \"databaseId\": \"64f8a1b2c3d4e5f6a7b8c9d3\",\n        \"status\": \"initialized\",\n        \"sampleDataCreated\": false\n      },\n      {\n        \"moduleId\": \"analytics\",\n        \"databaseId\": \"64f8a1b2c3d4e5f6a7b8c9d4\",\n        \"status\": \"initialized\",\n        \"sampleDataCreated\": false\n      }\n    ],\n    \"totalModules\": 2,\n    \"initializationTime\": \"2023-09-06T19:00:00.000Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Check Module Availability",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/modules/availability/{{moduleId}}",
              "host": ["{{baseUrl}}"],
              "path": ["modules", "availability", "{{moduleId}}"]
            },
            "description": "Check if a module is available for initialization"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/modules/availability/calendar",
                  "host": ["{{baseUrl}}"],
                  "path": ["modules", "availability", "calendar"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Module availability checked\",\n  \"data\": {\n    \"moduleId\": \"calendar\",\n    \"isAvailable\": true,\n    \"canInitialize\": true,\n    \"dependencies\": {\n      \"required\": [\"tasks\"],\n      \"satisfied\": true,\n      \"missing\": []\n    },\n    \"conflicts\": [],\n    \"requirements\": {\n      \"minVersion\": \"1.0.0\",\n      \"permissions\": [\"calendar:read\", \"calendar:write\"]\n    }\n  }\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Health & Status",
      "description": "API health and status endpoints",
      "item": [
        {
          "name": "API Root",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/../",
              "host": ["{{baseUrl}}"],
              "path": ["../"]
            },
            "description": "Get API root information"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "http://localhost:3000/",
                  "protocol": "http",
                  "host": ["localhost"],
                  "port": "3000",
                  "path": [""]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Welcome to Second Brain Server API\",\n  \"version\": \"v1\",\n  \"environment\": \"development\",\n  \"timestamp\": \"2023-09-06T19:00:00.000Z\",\n  \"endpoints\": {\n    \"health\": \"/health\",\n    \"api\": \"/api/v1\",\n    \"docs\": \"/api/v1/docs\",\n    \"entities\": \"/api/v1/entities\",\n    \"tables\": \"/api/v1/tables\"\n  },\n  \"documentation\": \"/api/v1/docs\"\n}"
            }
          ]
        },
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/../health",
              "host": ["{{baseUrl}}"],
              "path": ["../health"]
            },
            "description": "Check API health status"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "http://localhost:3000/health",
                  "protocol": "http",
                  "host": ["localhost"],
                  "port": "3000",
                  "path": ["health"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Server is running!\",\n  \"timestamp\": \"2023-09-06T19:00:00.000Z\",\n  \"environment\": \"development\",\n  \"version\": \"1.0.0\",\n  \"uptime\": 3600,\n  \"memory\": {\n    \"rss\": 45678592,\n    \"heapTotal\": 20971520,\n    \"heapUsed\": 15728640,\n    \"external\": 1048576,\n    \"arrayBuffers\": 524288\n  }\n}"
            }
          ]
        },
        {
          "name": "API Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/../status",
              "host": ["{{baseUrl}}"],
              "path": ["../status"]
            },
            "description": "Get detailed API status"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "http://localhost:3000/status",
                  "protocol": "http",
                  "host": ["localhost"],
                  "port": "3000",
                  "path": ["status"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"status\": \"operational\",\n  \"uptime\": 3600,\n  \"memory\": {\n    \"rss\": 45678592,\n    \"heapTotal\": 20971520,\n    \"heapUsed\": 15728640,\n    \"external\": 1048576,\n    \"arrayBuffers\": 524288\n  },\n  \"timestamp\": \"2023-09-06T19:00:00.000Z\",\n  \"environment\": \"development\"\n}"
            }
          ]
        },
        {
          "name": "API Version",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/../version",
              "host": ["{{baseUrl}}"],
              "path": ["../version"]
            },
            "description": "Get API version information"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "http://localhost:3000/version",
                  "protocol": "http",
                  "host": ["localhost"],
                  "port": "3000",
                  "path": ["version"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"version\": \"1.0.0\",\n  \"name\": \"Second Brain Server API\",\n  \"environment\": \"development\",\n  \"timestamp\": \"2023-09-06T19:00:00.000Z\"\n}"
            }
          ]
        },
        {
          "name": "API Documentation",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/docs",
              "host": ["{{baseUrl}}"],
              "path": ["docs"]
            },
            "description": "Access Swagger/OpenAPI documentation"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/docs",
                  "host": ["{{baseUrl}}"],
                  "path": ["docs"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "html",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/html"
                }
              ],
              "cookie": [],
              "body": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Second Brain Server API Documentation</title>\n</head>\n<body>\n  <!-- Swagger UI HTML -->\n</body>\n</html>"
            }
          ]
        }
      ]
    },
    {
      "name": "Database Views",
      "description": "Database view management for custom data presentations",
      "item": [
        {
          "name": "Create Database View",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Active Tasks View\",\n  \"type\": \"table\",\n  \"description\": \"View showing only active tasks\",\n  \"isDefault\": false,\n  \"isPublic\": false,\n  \"config\": {\n    \"columns\": [\n      {\n        \"propertyId\": \"title\",\n        \"width\": 200,\n        \"visible\": true\n      },\n      {\n        \"propertyId\": \"status\",\n        \"width\": 120,\n        \"visible\": true\n      }\n    ]\n  },\n  \"filters\": {\n    \"operator\": \"and\",\n    \"conditions\": [\n      {\n        \"property\": \"status\",\n        \"operator\": \"equals\",\n        \"value\": \"active\"\n      }\n    ]\n  },\n  \"sorts\": [\n    {\n      \"property\": \"createdAt\",\n      \"direction\": \"desc\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/views",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "views"]
            },
            "description": "Create a new view for a database"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Active Tasks View\",\n  \"type\": \"table\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/databases/64f8a1b2c3d4e5f6a7b8c9d1/views",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "64f8a1b2c3d4e5f6a7b8c9d1", "views"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"View created successfully\",\n  \"data\": {\n    \"id\": \"view_123\",\n    \"databaseId\": \"64f8a1b2c3d4e5f6a7b8c9d1\",\n    \"name\": \"Active Tasks View\",\n    \"type\": \"table\",\n    \"description\": \"View showing only active tasks\",\n    \"isDefault\": false,\n    \"isPublic\": false,\n    \"order\": 1,\n    \"config\": {\n      \"columns\": [\n        {\n          \"propertyId\": \"title\",\n          \"width\": 200,\n          \"visible\": true\n        }\n      ]\n    },\n    \"createdAt\": \"2023-09-06T23:00:00.000Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Get Database Views",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/views",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "views"]
            },
            "description": "Get all views for a database"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/databases/64f8a1b2c3d4e5f6a7b8c9d1/views",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "64f8a1b2c3d4e5f6a7b8c9d1", "views"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"Views retrieved successfully\",\n  \"data\": [\n    {\n      \"id\": \"view_123\",\n      \"name\": \"Active Tasks View\",\n      \"type\": \"table\",\n      \"isDefault\": false,\n      \"isPublic\": false,\n      \"order\": 1,\n      \"recordCount\": 15,\n      \"createdAt\": \"2023-09-06T23:00:00.000Z\"\n    },\n    {\n      \"id\": \"view_124\",\n      \"name\": \"All Tasks\",\n      \"type\": \"table\",\n      \"isDefault\": true,\n      \"isPublic\": false,\n      \"order\": 0,\n      \"recordCount\": 25,\n      \"createdAt\": \"2023-09-06T10:00:00.000Z\"\n    }\n  ]\n}"
            }
          ]
        },
        {
          "name": "Duplicate Database View",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Copy of Active Tasks View\",\n  \"description\": \"Duplicated view with modifications\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/views/{{viewId}}/duplicate",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "views", "{{viewId}}", "duplicate"]
            },
            "description": "Duplicate an existing database view"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Copy of Active Tasks View\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/databases/64f8a1b2c3d4e5f6a7b8c9d1/views/view_123/duplicate",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "64f8a1b2c3d4e5f6a7b8c9d1", "views", "view_123", "duplicate"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"View duplicated successfully\",\n  \"data\": {\n    \"id\": \"view_125\",\n    \"databaseId\": \"64f8a1b2c3d4e5f6a7b8c9d1\",\n    \"name\": \"Copy of Active Tasks View\",\n    \"type\": \"table\",\n    \"description\": \"Duplicated view with modifications\",\n    \"isDefault\": false,\n    \"isPublic\": false,\n    \"order\": 2,\n    \"originalViewId\": \"view_123\",\n    \"createdAt\": \"2023-09-06T23:30:00.000Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Update View Grouping",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"groupBy\": \"status\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/views/{{viewId}}/grouping",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "views", "{{viewId}}", "grouping"]
            },
            "description": "Update view grouping settings"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"groupBy\": \"status\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/databases/{{databaseId}}/views/{{viewId}}/grouping",
                  "host": ["{{baseUrl}}"],
                  "path": ["databases", "{{databaseId}}", "views", "{{viewId}}", "grouping"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"success\": true,\n  \"message\": \"View grouping updated successfully\",\n  \"data\": {\n    \"id\": \"view_123\",\n    \"name\": \"Active Tasks View\",\n    \"settings\": {\n      \"groupBy\": \"status\",\n      \"filters\": [],\n      \"sorts\": []\n    },\n    \"updatedAt\": \"2023-09-06T23:45:00.000Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Change View Type",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"board\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/views/{{viewId}}/change-type",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "views", "{{viewId}}", "change-type"]
            },
            "description": "Change view type (table, board, gallery, calendar, timeline, gantt)"
          },
          "response": []
        },
        {
          "name": "Update View Property Visibility",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"visibleProperties\": [\"Name\", \"Status\", \"Priority\", \"Due Date\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/views/{{viewId}}/property-visibility",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "views", "{{viewId}}", "property-visibility"]
            },
            "description": "Show/hide specific properties in the view"
          },
          "response": []
        },
        {
          "name": "Update View Column Freeze",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"frozenColumns\": [\"Name\", \"Status\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/views/{{viewId}}/column-freeze",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "views", "{{viewId}}", "column-freeze"]
            },
            "description": "Lock/freeze specific columns in the view"
          },
          "response": []
        },
        {
          "name": "Update View Filters",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"filters\": [\n    {\n      \"property\": \"status\",\n      \"condition\": \"equals\",\n      \"value\": \"in_progress\"\n    },\n    {\n      \"property\": \"priority\",\n      \"condition\": \"not_equals\",\n      \"value\": \"low\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/views/{{viewId}}/filters",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "views", "{{viewId}}", "filters"]
            },
            "description": "Update view filters with multiple conditions"
          },
          "response": []
        },
        {
          "name": "Update View Sorts",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sorts\": [\n    {\n      \"property\": \"priority\",\n      \"direction\": \"desc\"\n    },\n    {\n      \"property\": \"due_date\",\n      \"direction\": \"asc\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/views/{{viewId}}/sorts",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "views", "{{viewId}}", "sorts"]
            },
            "description": "Update view sorting with multiple levels"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Permission Management",
      "item": [
        {
          "name": "Grant Permission",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"{{userId}}\",\n  \"level\": \"edit\",\n  \"expiresAt\": \"2024-12-31T23:59:59.000Z\",\n  \"conditions\": {\n    \"ipWhitelist\": [\"192.168.1.0/24\"],\n    \"timeRestrictions\": {\n      \"startTime\": \"09:00\",\n      \"endTime\": \"17:00\",\n      \"timezone\": \"UTC\",\n      \"daysOfWeek\": [1, 2, 3, 4, 5]\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/permissions/database/{{databaseId}}/grant",
              "host": ["{{baseUrl}}"],
              "path": ["permissions", "database", "{{databaseId}}", "grant"]
            },
            "description": "Grant permission to a user for a specific resource"
          },
          "response": []
        },
        {
          "name": "Revoke Permission",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"{{userId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/permissions/database/{{databaseId}}/revoke",
              "host": ["{{baseUrl}}"],
              "path": ["permissions", "database", "{{databaseId}}", "revoke"]
            },
            "description": "Revoke permission from a user for a specific resource"
          },
          "response": []
        },
        {
          "name": "Get Resource Permissions",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/permissions/database/{{databaseId}}",
              "host": ["{{baseUrl}}"],
              "path": ["permissions", "database", "{{databaseId}}"]
            },
            "description": "Get all permissions for a specific resource"
          },
          "response": []
        },
        {
          "name": "Check Permission",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/permissions/database/{{databaseId}}/check?level=edit",
              "host": ["{{baseUrl}}"],
              "path": ["permissions", "database", "{{databaseId}}", "check"],
              "query": [
                {
                  "key": "level",
                  "value": "edit"
                }
              ]
            },
            "description": "Check if current user has specific permission level"
          },
          "response": []
        },
        {
          "name": "Check Capability",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/permissions/database/{{databaseId}}/capability?capability=canEditSchema",
              "host": ["{{baseUrl}}"],
              "path": ["permissions", "database", "{{databaseId}}", "capability"],
              "query": [
                {
                  "key": "capability",
                  "value": "canEditSchema"
                }
              ]
            },
            "description": "Check if current user has specific capability"
          },
          "response": []
        },
        {
          "name": "Get Effective Permissions",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/permissions/database/{{databaseId}}/effective",
              "host": ["{{baseUrl}}"],
              "path": ["permissions", "database", "{{databaseId}}", "effective"]
            },
            "description": "Get all effective permissions and capabilities for current user"
          },
          "response": []
        },
        {
          "name": "Get User Permissions",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/permissions/user/permissions",
              "host": ["{{baseUrl}}"],
              "path": ["permissions", "user", "permissions"]
            },
            "description": "Get all permissions for current user across all resources"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Workspace Management",
      "item": [
        {
          "name": "Create Workspace",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"My Workspace\",\n  \"description\": \"A workspace for my projects\",\n  \"type\": \"team\",\n  \"icon\": {\n    \"type\": \"emoji\",\n    \"value\": \"🚀\"\n  },\n  \"cover\": {\n    \"type\": \"gradient\",\n    \"value\": \"linear-gradient(135deg, #667eea 0%, #764ba2 100%)\"\n  },\n  \"config\": {\n    \"theme\": \"auto\",\n    \"enableAI\": true,\n    \"enableComments\": true,\n    \"maxMembers\": 10,\n    \"maxDatabases\": 50\n  },\n  \"isPublic\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/workspaces",
              "host": ["{{baseUrl}}"],
              "path": ["workspaces"]
            },
            "description": "Create a new workspace"
          },
          "response": []
        },
        {
          "name": "Get User Workspaces",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/workspaces",
              "host": ["{{baseUrl}}"],
              "path": ["workspaces"]
            },
            "description": "Get all workspaces for current user"
          },
          "response": []
        },
        {
          "name": "Get Workspace by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/workspaces/{{workspaceId}}",
              "host": ["{{baseUrl}}"],
              "path": ["workspaces", "{{workspaceId}}"]
            },
            "description": "Get workspace details by ID"
          },
          "response": []
        },
        {
          "name": "Update Workspace",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Workspace Name\",\n  \"description\": \"Updated description\",\n  \"config\": {\n    \"theme\": \"dark\",\n    \"enableAI\": false\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/workspaces/{{workspaceId}}",
              "host": ["{{baseUrl}}"],
              "path": ["workspaces", "{{workspaceId}}"]
            },
            "description": "Update workspace settings"
          },
          "response": []
        },
        {
          "name": "Delete Workspace",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/workspaces/{{workspaceId}}",
              "host": ["{{baseUrl}}"],
              "path": ["workspaces", "{{workspaceId}}"]
            },
            "description": "Delete workspace (owner only)"
          },
          "response": []
        },
        {
          "name": "Get Workspace Members",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/workspaces/{{workspaceId}}/members",
              "host": ["{{baseUrl}}"],
              "path": ["workspaces", "{{workspaceId}}", "members"]
            },
            "description": "Get all members of a workspace"
          },
          "response": []
        },
        {
          "name": "Add Workspace Member",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"{{userId}}\",\n  \"role\": \"editor\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/workspaces/{{workspaceId}}/members",
              "host": ["{{baseUrl}}"],
              "path": ["workspaces", "{{workspaceId}}", "members"]
            },
            "description": "Add a member to workspace"
          },
          "response": []
        },
        {
          "name": "Update Member Role",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"role\": \"admin\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/workspaces/{{workspaceId}}/members/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["workspaces", "{{workspaceId}}", "members", "{{userId}}"]
            },
            "description": "Update member role in workspace"
          },
          "response": []
        },
        {
          "name": "Remove Workspace Member",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/workspaces/{{workspaceId}}/members/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["workspaces", "{{workspaceId}}", "members", "{{userId}}"]
            },
            "description": "Remove member from workspace"
          },
          "response": []
        },
        {
          "name": "Get Workspace Stats",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/workspaces/{{workspaceId}}/stats",
              "host": ["{{baseUrl}}"],
              "path": ["workspaces", "{{workspaceId}}", "stats"]
            },
            "description": "Get workspace statistics and usage"
          },
          "response": []
        },
        {
          "name": "Check Workspace Access",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/workspaces/{{workspaceId}}/access",
              "host": ["{{baseUrl}}"],
              "path": ["workspaces", "{{workspaceId}}", "access"]
            },
            "description": "Check current user's access level to workspace"
          },
          "response": []
        },
        {
          "name": "Leave Workspace",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/workspaces/{{workspaceId}}/leave",
              "host": ["{{baseUrl}}"],
              "path": ["workspaces", "{{workspaceId}}", "leave"]
            },
            "description": "Leave workspace (cannot be used by owner)"
          },
          "response": []
        },
        {
          "name": "Transfer Ownership",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"newOwnerId\": \"{{userId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/workspaces/{{workspaceId}}/transfer-ownership",
              "host": ["{{baseUrl}}"],
              "path": ["workspaces", "{{workspaceId}}", "transfer-ownership"]
            },
            "description": "Transfer workspace ownership to another member"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Data Relationships",
      "item": [
        {
          "name": "Create Relation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sourcePropertyId\": \"{{propertyId}}\",\n  \"targetDatabaseId\": \"{{targetDatabaseId}}\",\n  \"type\": \"many_to_many\",\n  \"allowMultiple\": true,\n  \"isSymmetric\": true,\n  \"onSourceDelete\": \"set_null\",\n  \"onTargetDelete\": \"set_null\",\n  \"displayProperty\": \"Name\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/relations",
              "host": ["{{baseUrl}}"],
              "path": ["relations"]
            },
            "description": "Create a relation between two database properties"
          },
          "response": []
        },
        {
          "name": "Get Database Relations",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/relations",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "relations"]
            },
            "description": "Get all relations for a database"
          },
          "response": []
        },
        {
          "name": "Get Relation Schema",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/relations/schema",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "relations", "schema"]
            },
            "description": "Get relation schema for a database"
          },
          "response": []
        },
        {
          "name": "Create Connection",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sourceRecordId\": \"{{recordId}}\",\n  \"targetRecordId\": \"{{targetRecordId}}\",\n  \"properties\": {\n    \"connectionType\": \"primary\",\n    \"strength\": 5\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/relations/{{relationId}}/connections",
              "host": ["{{baseUrl}}"],
              "path": ["relations", "{{relationId}}", "connections"]
            },
            "description": "Create a connection between two records"
          },
          "response": []
        },
        {
          "name": "Remove Connection",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sourceRecordId\": \"{{recordId}}\",\n  \"targetRecordId\": \"{{targetRecordId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/relations/{{relationId}}/connections",
              "host": ["{{baseUrl}}"],
              "path": ["relations", "{{relationId}}", "connections"]
            },
            "description": "Remove a connection between two records"
          },
          "response": []
        },
        {
          "name": "Get Related Records",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/records/{{recordId}}/related/{{propertyId}}?includeProperties=true&limit=10&offset=0",
              "host": ["{{baseUrl}}"],
              "path": ["records", "{{recordId}}", "related", "{{propertyId}}"],
              "query": [
                {
                  "key": "includeProperties",
                  "value": "true"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "offset",
                  "value": "0"
                }
              ]
            },
            "description": "Get related records for a specific property"
          },
          "response": []
        },
        {
          "name": "Calculate Rollup",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"relationPropertyId\": \"{{relationPropertyId}}\",\n  \"rollupPropertyId\": \"{{rollupPropertyId}}\",\n  \"rollupFunction\": \"sum\",\n  \"filters\": [\n    {\n      \"property\": \"status\",\n      \"condition\": \"equals\",\n      \"value\": \"completed\"\n    }\n  ],\n  \"numberFormat\": {\n    \"precision\": 2,\n    \"currency\": \"USD\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/records/{{recordId}}/rollup",
              "host": ["{{baseUrl}}"],
              "path": ["records", "{{recordId}}", "rollup"]
            },
            "description": "Calculate rollup value for a record"
          },
          "response": []
        },
        {
          "name": "Recalculate All Rollups",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/databases/{{databaseId}}/rollups/recalculate",
              "host": ["{{baseUrl}}"],
              "path": ["databases", "{{databaseId}}", "rollups", "recalculate"]
            },
            "description": "Recalculate all rollup values for a database"
          },
          "response": []
        },
        {
          "name": "Validate Relation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sourcePropertyId\": \"{{propertyId}}\",\n  \"targetDatabaseId\": \"{{targetDatabaseId}}\",\n  \"type\": \"many_to_many\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/relations/validate",
              "host": ["{{baseUrl}}"],
              "path": ["relations", "validate"]
            },
            "description": "Validate relation configuration before creation"
          },
          "response": []
        },
        {
          "name": "Get Relation Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/relations/{{relationId}}/stats",
              "host": ["{{baseUrl}}"],
              "path": ["relations", "{{relationId}}", "stats"]
            },
            "description": "Get statistics for a relation"
          },
          "response": []
        },
        {
          "name": "Delete Relation",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/relations/{{relationId}}",
              "host": ["{{baseUrl}}"],
              "path": ["relations", "{{relationId}}"]
            },
            "description": "Delete a relation and all its connections"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Rich Content Editor",
      "item": [
        {
          "name": "Apply Text Formatting",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"start\": 0,\n  \"end\": 10,\n  \"formatting\": {\n    \"bold\": true,\n    \"italic\": false,\n    \"color\": \"red\",\n    \"link\": {\n      \"url\": \"https://example.com\",\n      \"title\": \"Example Link\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/editor/records/{{recordId}}/blocks/{{blockId}}/format",
              "host": ["{{baseUrl}}"],
              "path": ["editor", "records", "{{recordId}}", "blocks", "{{blockId}}", "format"]
            },
            "description": "Apply rich text formatting to a selection"
          },
          "response": []
        },
        {
          "name": "Insert Text",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"position\": 5,\n  \"text\": \"Hello World!\",\n  \"formatting\": {\n    \"bold\": true,\n    \"italic\": false,\n    \"color\": \"blue\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/editor/records/{{recordId}}/blocks/{{blockId}}/insert-text",
              "host": ["{{baseUrl}}"],
              "path": ["editor", "records", "{{recordId}}", "blocks", "{{blockId}}", "insert-text"]
            },
            "description": "Insert formatted text at a specific position"
          },
          "response": []
        },
        {
          "name": "Insert Special Content",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"position\": 10,\n  \"options\": {\n    \"mention\": {\n      \"type\": \"user\",\n      \"id\": \"{{userId}}\",\n      \"displayText\": \"@john.doe\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/editor/records/{{recordId}}/blocks/{{blockId}}/insert-special",
              "host": ["{{baseUrl}}"],
              "path": ["editor", "records", "{{recordId}}", "blocks", "{{blockId}}", "insert-special"]
            },
            "description": "Insert special content like mentions, equations, or embeds"
          },
          "response": []
        },
        {
          "name": "Delete Text",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"start\": 5,\n  \"end\": 15\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/editor/records/{{recordId}}/blocks/{{blockId}}/text",
              "host": ["{{baseUrl}}"],
              "path": ["editor", "records", "{{recordId}}", "blocks", "{{blockId}}", "text"]
            },
            "description": "Delete text in a specific range"
          },
          "response": []
        },
        {
          "name": "Export Content",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/editor/records/{{recordId}}/export?format=markdown",
              "host": ["{{baseUrl}}"],
              "path": ["editor", "records", "{{recordId}}", "export"],
              "query": [
                {
                  "key": "format",
                  "value": "markdown"
                }
              ]
            },
            "description": "Export content in different formats (markdown, html, plain, json)"
          },
          "response": []
        },
        {
          "name": "Import Content",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"# Hello World\\n\\nThis is **bold** text and this is *italic* text.\",\n  \"format\": \"markdown\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/editor/records/{{recordId}}/import",
              "host": ["{{baseUrl}}"],
              "path": ["editor", "records", "{{recordId}}", "import"]
            },
            "description": "Import content from different formats"
          },
          "response": []
        },
        {
          "name": "Join Collaboration",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userName\": \"John Doe\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/editor/records/{{recordId}}/collaboration/join",
              "host": ["{{baseUrl}}"],
              "path": ["editor", "records", "{{recordId}}", "collaboration", "join"]
            },
            "description": "Join a collaborative editing session"
          },
          "response": []
        },
        {
          "name": "Leave Collaboration",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/editor/records/{{recordId}}/collaboration/leave",
              "host": ["{{baseUrl}}"],
              "path": ["editor", "records", "{{recordId}}", "collaboration", "leave"]
            },
            "description": "Leave a collaborative editing session"
          },
          "response": []
        },
        {
          "name": "Update Cursor Position",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"blockId\": \"{{blockId}}\",\n  \"position\": 25\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/editor/records/{{recordId}}/collaboration/cursor",
              "host": ["{{baseUrl}}"],
              "path": ["editor", "records", "{{recordId}}", "collaboration", "cursor"]
            },
            "description": "Update cursor position for collaboration"
          },
          "response": []
        },
        {
          "name": "Update Text Selection",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"blockId\": \"{{blockId}}\",\n  \"start\": 10,\n  \"end\": 20\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/editor/records/{{recordId}}/collaboration/selection",
              "host": ["{{baseUrl}}"],
              "path": ["editor", "records", "{{recordId}}", "collaboration", "selection"]
            },
            "description": "Update text selection for collaboration"
          },
          "response": []
        },
        {
          "name": "Get Collaboration Participants",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/editor/records/{{recordId}}/collaboration/participants",
              "host": ["{{baseUrl}}"],
              "path": ["editor", "records", "{{recordId}}", "collaboration", "participants"]
            },
            "description": "Get list of active collaboration participants"
          },
          "response": []
        },
        {
          "name": "Get Text Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/editor/records/{{recordId}}/statistics",
              "host": ["{{baseUrl}}"],
              "path": ["editor", "records", "{{recordId}}", "statistics"]
            },
            "description": "Get text statistics (word count, reading time, etc.)"
          },
          "response": []
        },
        {
          "name": "Get Auto-complete Suggestions",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/editor/records/{{recordId}}/autocomplete?cursorPosition=25&context=project management",
              "host": ["{{baseUrl}}"],
              "path": ["editor", "records", "{{recordId}}", "autocomplete"],
              "query": [
                {
                  "key": "cursorPosition",
                  "value": "25"
                },
                {
                  "key": "context",
                  "value": "project management"
                }
              ]
            },
            "description": "Get auto-complete suggestions for text"
          },
          "response": []
        },
        {
          "name": "Perform Spell Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/editor/records/{{recordId}}/spellcheck",
              "host": ["{{baseUrl}}"],
              "path": ["editor", "records", "{{recordId}}", "spellcheck"]
            },
            "description": "Perform spell check on content"
          },
          "response": []
        },
        {
          "name": "Analyze Text",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/editor/records/{{recordId}}/analyze",
              "host": ["{{baseUrl}}"],
              "path": ["editor", "records", "{{recordId}}", "analyze"]
            },
            "description": "Analyze text for sentiment, keywords, topics, etc."
          },
          "response": []
        },
        {
          "name": "Generate Summary",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/editor/records/{{recordId}}/summary?maxSentences=3",
              "host": ["{{baseUrl}}"],
              "path": ["editor", "records", "{{recordId}}", "summary"],
              "query": [
                {
                  "key": "maxSentences",
                  "value": "3"
                }
              ]
            },
            "description": "Generate a summary of the content"
          },
          "response": []
        },
        {
          "name": "Extract Keywords",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/editor/records/{{recordId}}/keywords?limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["editor", "records", "{{recordId}}", "keywords"],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Extract keywords from content"
          },
          "response": []
        },
        {
          "name": "Auto-format Text",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/editor/records/{{recordId}}/auto-format",
              "host": ["{{baseUrl}}"],
              "path": ["editor", "records", "{{recordId}}", "auto-format"]
            },
            "description": "Auto-format text with markdown-like syntax"
          },
          "response": []
        },
        {
          "name": "Convert Format",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fromFormat\": \"rich\",\n  \"toFormat\": \"markdown\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/editor/records/{{recordId}}/convert-format",
              "host": ["{{baseUrl}}"],
              "path": ["editor", "records", "{{recordId}}", "convert-format"]
            },
            "description": "Convert content between different formats"
          },
          "response": []
        },
        {
          "name": "Get Collaboration Stats",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/editor/records/{{recordId}}/collaboration/stats",
              "host": ["{{baseUrl}}"],
              "path": ["editor", "records", "{{recordId}}", "collaboration", "stats"]
            },
            "description": "Get collaboration session statistics"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Habits Module",
      "item": [
        {
          "name": "Mark Habit Completed",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"date\": \"2024-01-15\",\n  \"value\": 30,\n  \"notes\": \"Completed 30 minutes of exercise\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/habits/{{habitId}}/complete",
              "host": ["{{baseUrl}}"],
              "path": ["habits", "{{habitId}}", "complete"]
            },
            "description": "Mark a habit as completed for a specific date"
          },
          "response": []
        },
        {
          "name": "Toggle Habit Today",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"value\": 25,\n  \"notes\": \"Quick workout session\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/habits/{{habitId}}/toggle",
              "host": ["{{baseUrl}}"],
              "path": ["habits", "{{habitId}}", "toggle"]
            },
            "description": "Toggle habit completion status for today"
          },
          "response": []
        },
        {
          "name": "Get Habit Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/habits/{{habitId}}/stats",
              "host": ["{{baseUrl}}"],
              "path": ["habits", "{{habitId}}", "stats"]
            },
            "description": "Get comprehensive statistics for a habit"
          },
          "response": []
        },
        {
          "name": "Get Habits Due Today",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/habits/today",
              "host": ["{{baseUrl}}"],
              "path": ["habits", "today"]
            },
            "description": "Get all habits that are due today"
          },
          "response": []
        },
        {
          "name": "Get Habit History",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/habits/{{habitId}}/history?startDate=2024-01-01&endDate=2024-01-31",
              "host": ["{{baseUrl}}"],
              "path": ["habits", "{{habitId}}", "history"],
              "query": [
                {
                  "key": "startDate",
                  "value": "2024-01-01"
                },
                {
                  "key": "endDate",
                  "value": "2024-01-31"
                }
              ]
            },
            "description": "Get habit completion history for a date range"
          },
          "response": []
        },
        {
          "name": "Get Weekly Habit Summary",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/habits/weekly-summary",
              "host": ["{{baseUrl}}"],
              "path": ["habits", "weekly-summary"]
            },
            "description": "Get weekly summary of all habits"
          },
          "response": []
        },
        {
          "name": "Get Habit Insights",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/habits/{{habitId}}/insights",
              "host": ["{{baseUrl}}"],
              "path": ["habits", "{{habitId}}", "insights"]
            },
            "description": "Get AI-powered insights and recommendations for a habit"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Journal Module",
      "item": [
        {
          "name": "Create Journal Entry",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"date\": \"2024-01-15\",\n  \"title\": \"Great Day at Work\",\n  \"mood\": \"good\",\n  \"energyLevel\": 8,\n  \"gratitude\": \"Grateful for team collaboration\",\n  \"highlights\": \"Completed major project milestone\",\n  \"challenges\": \"Time management with multiple meetings\",\n  \"lessonsLearned\": \"Better to block time for deep work\",\n  \"tomorrowGoals\": \"Focus on code review and documentation\",\n  \"tags\": [\"work\", \"productivity\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/journal/entries",
              "host": ["{{baseUrl}}"],
              "path": ["journal", "entries"]
            },
            "description": "Create a new journal entry"
          },
          "response": []
        },
        {
          "name": "Get Today's Journal Entry",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/journal/today",
              "host": ["{{baseUrl}}"],
              "path": ["journal", "today"]
            },
            "description": "Get today's journal entry"
          },
          "response": []
        },
        {
          "name": "Create or Update Today's Entry",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"mood\": \"amazing\",\n  \"energyLevel\": 9,\n  \"gratitude\": \"Beautiful weather and good health\",\n  \"highlights\": \"Successful presentation to the team\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/journal/today",
              "host": ["{{baseUrl}}"],
              "path": ["journal", "today"]
            },
            "description": "Create or update today's journal entry"
          },
          "response": []
        },
        {
          "name": "Get Journal Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/journal/stats",
              "host": ["{{baseUrl}}"],
              "path": ["journal", "stats"]
            },
            "description": "Get comprehensive journal statistics"
          },
          "response": []
        },
        {
          "name": "Get Mood Trends",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/journal/mood-trends?startDate=2024-01-01&endDate=2024-01-31",
              "host": ["{{baseUrl}}"],
              "path": ["journal", "mood-trends"],
              "query": [
                {
                  "key": "startDate",
                  "value": "2024-01-01"
                },
                {
                  "key": "endDate",
                  "value": "2024-01-31"
                }
              ]
            },
            "description": "Get mood trends over time"
          },
          "response": []
        },
        {
          "name": "Search Journal Entries",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/journal/search?q=productivity&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["journal", "search"],
              "query": [
                {
                  "key": "q",
                  "value": "productivity"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Search journal entries by text"
          },
          "response": []
        },
        {
          "name": "Get Journal Prompts",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/journal/prompts",
              "host": ["{{baseUrl}}"],
              "path": ["journal", "prompts"]
            },
            "description": "Get random journal prompts for inspiration"
          },
          "response": []
        },
        {
          "name": "Get Journal Calendar",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/journal/calendar?year=2024&month=1",
              "host": ["{{baseUrl}}"],
              "path": ["journal", "calendar"],
              "query": [
                {
                  "key": "year",
                  "value": "2024"
                },
                {
                  "key": "month",
                  "value": "1"
                }
              ]
            },
            "description": "Get journal entries for calendar view"
          },
          "response": []
        },
        {
          "name": "Get Journal Insights",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/journal/insights?period=month",
              "host": ["{{baseUrl}}"],
              "path": ["journal", "insights"],
              "query": [
                {
                  "key": "period",
                  "value": "month"
                }
              ]
            },
            "description": "Get AI-powered journal insights and recommendations"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Cross-Module Relations",
      "item": [
        {
          "name": "Initialize Cross-Module Relations",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/relations/initialize",
              "host": ["{{baseUrl}}"],
              "path": ["relations", "initialize"]
            },
            "description": "Initialize cross-module relations for the user"
          },
          "response": []
        },
        {
          "name": "Connect Records",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sourceRecordId\": \"{{recordId}}\",\n  \"targetRecordId\": \"{{targetRecordId}}\",\n  \"relationProperty\": \"Related Tasks\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/relations/connect",
              "host": ["{{baseUrl}}"],
              "path": ["relations", "connect"]
            },
            "description": "Connect two records across modules"
          },
          "response": []
        },
        {
          "name": "Get Related Records",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/relations/records/{{recordId}}/related?moduleTypes=tasks,goals&limit=10&includeMetadata=true",
              "host": ["{{baseUrl}}"],
              "path": ["relations", "records", "{{recordId}}", "related"],
              "query": [
                {
                  "key": "moduleTypes",
                  "value": "tasks,goals"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "includeMetadata",
                  "value": "true"
                }
              ]
            },
            "description": "Get all related records for a specific record"
          },
          "response": []
        },
        {
          "name": "Get Relation Network",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/relations/records/{{recordId}}/network?depth=2",
              "host": ["{{baseUrl}}"],
              "path": ["relations", "records", "{{recordId}}", "network"],
              "query": [
                {
                  "key": "depth",
                  "value": "2"
                }
              ]
            },
            "description": "Get relation network for visualization"
          },
          "response": []
        },
        {
          "name": "Get Relation Suggestions",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/relations/records/{{recordId}}/suggestions?limit=5&similarityThreshold=0.3",
              "host": ["{{baseUrl}}"],
              "path": ["relations", "records", "{{recordId}}", "suggestions"],
              "query": [
                {
                  "key": "limit",
                  "value": "5"
                },
                {
                  "key": "similarityThreshold",
                  "value": "0.3"
                }
              ]
            },
            "description": "Get AI-powered relation suggestions"
          },
          "response": []
        },
        {
          "name": "Get Module Relation Stats",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/relations/modules/tasks/stats",
              "host": ["{{baseUrl}}"],
              "path": ["relations", "modules", "tasks", "stats"]
            },
            "description": "Get relation statistics for a specific module"
          },
          "response": []
        },
        {
          "name": "Get Relation Insights",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/relations/insights",
              "host": ["{{baseUrl}}"],
              "path": ["relations", "insights"]
            },
            "description": "Get comprehensive relation insights"
          },
          "response": []
        },
        {
          "name": "Get Relation Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/relations/health-check",
              "host": ["{{baseUrl}}"],
              "path": ["relations", "health-check"]
            },
            "description": "Get relation system health metrics"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Relation Analytics",
      "item": [
        {
          "name": "Get Relation Analytics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/analytics/relations",
              "host": ["{{baseUrl}}"],
              "path": ["analytics", "relations"]
            },
            "description": "Get comprehensive relation analytics"
          },
          "response": []
        },
        {
          "name": "Get Productivity Insights",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/analytics/productivity",
              "host": ["{{baseUrl}}"],
              "path": ["analytics", "productivity"]
            },
            "description": "Get productivity insights from relations"
          },
          "response": []
        },
        {
          "name": "Get Relation Dashboard",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/analytics/dashboard",
              "host": ["{{baseUrl}}"],
              "path": ["analytics", "dashboard"]
            },
            "description": "Get relation dashboard data"
          },
          "response": []
        },
        {
          "name": "Get Relation Recommendations",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/analytics/recommendations?priority=high&type=connection&limit=5",
              "host": ["{{baseUrl}}"],
              "path": ["analytics", "recommendations"],
              "query": [
                {
                  "key": "priority",
                  "value": "high"
                },
                {
                  "key": "type",
                  "value": "connection"
                },
                {
                  "key": "limit",
                  "value": "5"
                }
              ]
            },
            "description": "Get AI-powered relation recommendations"
          },
          "response": []
        },
        {
          "name": "Get Relation Trends",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/analytics/trends?period=month&moduleType=tasks",
              "host": ["{{baseUrl}}"],
              "path": ["analytics", "trends"],
              "query": [
                {
                  "key": "period",
                  "value": "month"
                },
                {
                  "key": "moduleType",
                  "value": "tasks"
                }
              ]
            },
            "description": "Get relation trends over time"
          },
          "response": []
        },
        {
          "name": "Get Relation Impact Analysis",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/analytics/impact",
              "host": ["{{baseUrl}}"],
              "path": ["analytics", "impact"]
            },
            "description": "Get relation impact analysis"
          },
          "response": []
        },
        {
          "name": "Get Relation Health Metrics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/analytics/health",
              "host": ["{{baseUrl}}"],
              "path": ["analytics", "health"]
            },
            "description": "Get relation health metrics"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Templates",
      "item": [
        {
          "name": "Get Featured Templates",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/templates/featured?limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["templates", "featured"],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get featured templates"
          },
          "response": []
        },
        {
          "name": "Search Templates",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/templates/search?query=task&category=productivity&type=row&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["templates", "search"],
              "query": [
                {
                  "key": "query",
                  "value": "task"
                },
                {
                  "key": "category",
                  "value": "productivity"
                },
                {
                  "key": "type",
                  "value": "row"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Search templates with filters"
          },
          "response": []
        },
        {
          "name": "Get Template by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/templates/{{templateId}}",
              "host": ["{{baseUrl}}"],
              "path": ["templates", "{{templateId}}"]
            },
            "description": "Get specific template by ID"
          },
          "response": []
        },
        {
          "name": "Create Template",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"My Custom Task Template\",\n  \"description\": \"Custom task template with specific defaults\",\n  \"category\": \"productivity\",\n  \"type\": \"row\",\n  \"access\": \"private\",\n  \"tags\": [\"task\", \"custom\"],\n  \"templateData\": {\n    \"moduleType\": \"tasks\",\n    \"defaultValues\": {\n      \"Status\": \"not_started\",\n      \"Priority\": \"medium\",\n      \"Category\": \"work\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/templates",
              "host": ["{{baseUrl}}"],
              "path": ["templates"]
            },
            "description": "Create a new template"
          },
          "response": []
        },
        {
          "name": "Apply Row Template",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"databaseId\": \"{{databaseId}}\",\n  \"overrideValues\": {\n    \"Title\": \"Complete project documentation\",\n    \"Due Date\": \"2024-02-15\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/templates/{{templateId}}/apply/row",
              "host": ["{{baseUrl}}"],
              "path": ["templates", "{{templateId}}", "apply", "row"]
            },
            "description": "Apply row template to create a new record"
          },
          "response": []
        },
        {
          "name": "Apply Database Template",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"workspaceId\": \"{{workspaceId}}\",\n  \"overrides\": {\n    \"name\": \"My Task Manager\",\n    \"description\": \"Personal task management database\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/templates/{{templateId}}/apply/database",
              "host": ["{{baseUrl}}"],
              "path": ["templates", "{{templateId}}", "apply", "database"]
            },
            "description": "Apply database template to create a new database"
          },
          "response": []
        },
        {
          "name": "Apply Workspace Template",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"overrides\": {\n    \"name\": \"My Productivity Workspace\",\n    \"description\": \"Personal productivity hub\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/templates/{{templateId}}/apply/workspace",
              "host": ["{{baseUrl}}"],
              "path": ["templates", "{{templateId}}", "apply", "workspace"]
            },
            "description": "Apply workspace template to create a new workspace"
          },
          "response": []
        },
        {
          "name": "Get Template Gallery",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/templates/gallery",
              "host": ["{{baseUrl}}"],
              "path": ["templates", "gallery"]
            },
            "description": "Get template gallery with featured, popular, and recent templates"
          },
          "response": []
        },
        {
          "name": "Get User Templates",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/templates/user/my-templates",
              "host": ["{{baseUrl}}"],
              "path": ["templates", "user", "my-templates"]
            },
            "description": "Get current user's templates"
          },
          "response": []
        },
        {
          "name": "Rate Template",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"rating\": 5\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/templates/{{templateId}}/rate",
              "host": ["{{baseUrl}}"],
              "path": ["templates", "{{templateId}}", "rate"]
            },
            "description": "Rate a template (1-5 stars)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Template Builder",
      "item": [
        {
          "name": "Create Template from Record",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Task Template from Record\",\n  \"description\": \"Template created from existing task record\",\n  \"category\": \"productivity\",\n  \"access\": \"private\",\n  \"tags\": [\"task\", \"generated\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/template-builder/from-record/{{recordId}}",
              "host": ["{{baseUrl}}"],
              "path": ["template-builder", "from-record", "{{recordId}}"]
            },
            "description": "Create row template from existing record"
          },
          "response": []
        },
        {
          "name": "Create Template from Database",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Database Template\",\n  \"description\": \"Template created from existing database\",\n  \"category\": \"productivity\",\n  \"access\": \"private\",\n  \"tags\": [\"database\", \"generated\"],\n  \"includeSampleData\": true,\n  \"sampleDataLimit\": 5\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/template-builder/from-database/{{databaseId}}",
              "host": ["{{baseUrl}}"],
              "path": ["template-builder", "from-database", "{{databaseId}}"]
            },
            "description": "Create database template from existing database"
          },
          "response": []
        },
        {
          "name": "Generate Template from AI Prompt",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"prompt\": \"Create a task template for software development with priority, status, and time tracking\",\n  \"templateType\": \"row\",\n  \"moduleType\": \"tasks\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/template-builder/generate-from-prompt",
              "host": ["{{baseUrl}}"],
              "path": ["template-builder", "generate-from-prompt"]
            },
            "description": "Generate template using AI from natural language prompt"
          },
          "response": []
        },
        {
          "name": "Analyze Database for Templates",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/template-builder/analyze-database/{{databaseId}}",
              "host": ["{{baseUrl}}"],
              "path": ["template-builder", "analyze-database", "{{databaseId}}"]
            },
            "description": "Analyze database structure and suggest template improvements"
          },
          "response": []
        },
        {
          "name": "Get Template Builder Suggestions",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/template-builder/suggestions?context=productivity&moduleType=tasks",
              "host": ["{{baseUrl}}"],
              "path": ["template-builder", "suggestions"],
              "query": [
                {
                  "key": "context",
                  "value": "productivity"
                },
                {
                  "key": "moduleType",
                  "value": "tasks"
                }
              ]
            },
            "description": "Get template creation suggestions"
          },
          "response": []
        },
        {
          "name": "Get Template Wizard Steps",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/template-builder/wizard-steps/row",
              "host": ["{{baseUrl}}"],
              "path": ["template-builder", "wizard-steps", "row"]
            },
            "description": "Get step-by-step wizard for template creation"
          },
          "response": []
        },
        {
          "name": "Preview Template",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"templateData\": {\n    \"name\": \"Preview Template\",\n    \"description\": \"Template for preview\",\n    \"moduleType\": \"tasks\",\n    \"defaultValues\": {\n      \"Status\": \"not_started\",\n      \"Priority\": \"medium\"\n    }\n  },\n  \"templateType\": \"row\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/template-builder/preview",
              "host": ["{{baseUrl}}"],
              "path": ["template-builder", "preview"]
            },
            "description": "Preview template before creation"
          },
          "response": []
        },
        {
          "name": "Validate Template Data",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"templateData\": {\n    \"name\": \"Test Template\",\n    \"description\": \"Template for validation\",\n    \"moduleType\": \"tasks\"\n  },\n  \"templateType\": \"row\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/template-builder/validate",
              "host": ["{{baseUrl}}"],
              "path": ["template-builder", "validate"]
            },
            "description": "Validate template data before creation"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Formulas",
      "item": [
        {
          "name": "Validate Formula",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"expression\": \"SUM([Price], [Tax])\",\n  \"availableProperties\": [\n    { \"name\": \"Price\", \"type\": \"number\" },\n    { \"name\": \"Tax\", \"type\": \"number\" }\n  ],\n  \"expectedReturnType\": \"number\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/formulas/validate",
              "host": ["{{baseUrl}}"],
              "path": ["formulas", "validate"]
            },
            "description": "Validate formula expression syntax and semantics"
          },
          "response": []
        },
        {
          "name": "Test Formula",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"expression\": \"SUM([Price], [Tax])\",\n  \"sampleData\": {\n    \"Price\": 100,\n    \"Tax\": 15\n  },\n  \"availableProperties\": [\n    { \"name\": \"Price\", \"type\": \"number\" },\n    { \"name\": \"Tax\", \"type\": \"number\" }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/formulas/test",
              "host": ["{{baseUrl}}"],
              "path": ["formulas", "test"]
            },
            "description": "Test formula with sample data"
          },
          "response": []
        },
        {
          "name": "Execute Formula",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"expression\": \"IF([Status] == \\\"Complete\\\", \\\"Done\\\", \\\"Pending\\\")\",\n  \"context\": {\n    \"recordId\": \"{{recordId}}\",\n    \"databaseId\": \"{{databaseId}}\",\n    \"properties\": {\n      \"Status\": \"Complete\",\n      \"Priority\": \"High\"\n    }\n  },\n  \"config\": {\n    \"cacheEnabled\": true,\n    \"errorHandling\": \"return_null\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/formulas/execute",
              "host": ["{{baseUrl}}"],
              "path": ["formulas", "execute"]
            },
            "description": "Execute formula with real context"
          },
          "response": []
        },
        {
          "name": "Get Available Functions",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/formulas/functions?category=math",
              "host": ["{{baseUrl}}"],
              "path": ["formulas", "functions"],
              "query": [
                {
                  "key": "category",
                  "value": "math"
                }
              ]
            },
            "description": "Get available formula functions by category"
          },
          "response": []
        },
        {
          "name": "Search Functions",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/formulas/functions/search?search=sum",
              "host": ["{{baseUrl}}"],
              "path": ["formulas", "functions", "search"],
              "query": [
                {
                  "key": "search",
                  "value": "sum"
                }
              ]
            },
            "description": "Search formula functions by name or description"
          },
          "response": []
        },
        {
          "name": "Analyze Formula",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"expression\": \"AVERAGE([Score1], [Score2], [Score3]) * 100\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/formulas/analyze",
              "host": ["{{baseUrl}}"],
              "path": ["formulas", "analyze"]
            },
            "description": "Analyze formula dependencies, functions, and complexity"
          },
          "response": []
        },
        {
          "name": "Create Formula Property",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"databaseId\": \"{{databaseId}}\",\n  \"propertyName\": \"Total Amount\",\n  \"expression\": \"[Price] + [Tax]\",\n  \"returnType\": \"number\",\n  \"cacheEnabled\": true,\n  \"recalculateOnDependencyChange\": true,\n  \"errorHandling\": \"return_null\",\n  \"precision\": 2\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/formulas/properties",
              "host": ["{{baseUrl}}"],
              "path": ["formulas", "properties"]
            },
            "description": "Create a new formula property"
          },
          "response": []
        },
        {
          "name": "Update Formula Property",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"expression\": \"ROUND([Price] + [Tax], 2)\",\n  \"precision\": 2,\n  \"format\": \"$0.00\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/formulas/properties/{{formulaId}}",
              "host": ["{{baseUrl}}"],
              "path": ["formulas", "properties", "{{formulaId}}"]
            },
            "description": "Update existing formula property"
          },
          "response": []
        },
        {
          "name": "Get Database Formulas",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/formulas/databases/{{databaseId}}",
              "host": ["{{baseUrl}}"],
              "path": ["formulas", "databases", "{{databaseId}}"]
            },
            "description": "Get all formula properties for a database"
          },
          "response": []
        },
        {
          "name": "Get Formula Property",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/formulas/databases/{{databaseId}}/properties/Total Amount",
              "host": ["{{baseUrl}}"],
              "path": ["formulas", "databases", "{{databaseId}}", "properties", "Total Amount"]
            },
            "description": "Get specific formula property by name"
          },
          "response": []
        },
        {
          "name": "Optimize Formula",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"expression\": \"SUM(1, 2, 3) + SUM(4, 5, 6)\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/formulas/optimize",
              "host": ["{{baseUrl}}"],
              "path": ["formulas", "optimize"]
            },
            "description": "Optimize formula expression for better performance"
          },
          "response": []
        },
        {
          "name": "Get Formula Performance",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/formulas/performance/{{formulaId}}",
              "host": ["{{baseUrl}}"],
              "path": ["formulas", "performance", "{{formulaId}}"]
            },
            "description": "Get performance metrics for specific formula"
          },
          "response": []
        },
        {
          "name": "Get Slow Formulas",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/formulas/performance/slow?limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["formulas", "performance", "slow"],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get slowest performing formulas"
          },
          "response": []
        },
        {
          "name": "Get Cache Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/formulas/cache/stats",
              "host": ["{{baseUrl}}"],
              "path": ["formulas", "cache", "stats"]
            },
            "description": "Get formula cache statistics"
          },
          "response": []
        },
        {
          "name": "Clear Formula Cache",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/formulas/cache?recordId={{recordId}}",
              "host": ["{{baseUrl}}"],
              "path": ["formulas", "cache"],
              "query": [
                {
                  "key": "recordId",
                  "value": "{{recordId}}"
                }
              ]
            },
            "description": "Clear formula cache for specific record or all"
          },
          "response": []
        },
        {
          "name": "Recalculate Formulas",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"changedProperties\": [\"Price\", \"Tax\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/formulas/recalculate/{{recordId}}",
              "host": ["{{baseUrl}}"],
              "path": ["formulas", "recalculate", "{{recordId}}"]
            },
            "description": "Recalculate formulas when dependencies change"
          },
          "response": []
        },
        {
          "name": "Get Formula Suggestions",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"context\": \"financial calculation\",\n  \"intent\": \"calculate total with tax\",\n  \"availableProperties\": [\n    { \"name\": \"Price\", \"type\": \"number\" },\n    { \"name\": \"Tax Rate\", \"type\": \"number\" }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/formulas/suggestions",
              "host": ["{{baseUrl}}"],
              "path": ["formulas", "suggestions"]
            },
            "description": "Get AI-powered formula suggestions"
          },
          "response": []
        },
        {
          "name": "Format Formula Result",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"value\": 1234.567,\n  \"format\": \"$0.00\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/formulas/format",
              "host": ["{{baseUrl}}"],
              "path": ["formulas", "format"]
            },
            "description": "Format formula result for display"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Audit Trails & Analytics",
      "item": [
        {
          "name": "Generate Audit Trail",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/system/activities/audit/{{workspaceId}}?entityType=database&startDate=2024-01-01&endDate=2024-12-31&includeSystemEvents=true",
              "host": ["{{baseUrl}}"],
              "path": ["system", "activities", "audit", "{{workspaceId}}"],
              "query": [
                {
                  "key": "entityType",
                  "value": "database"
                },
                {
                  "key": "startDate",
                  "value": "2024-01-01"
                },
                {
                  "key": "endDate",
                  "value": "2024-12-31"
                },
                {
                  "key": "includeSystemEvents",
                  "value": "true"
                }
              ]
            },
            "description": "Generate comprehensive audit trail for workspace"
          },
          "response": []
        },
        {
          "name": "Get Security Events",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/system/activities/security/{{workspaceId}}?severity=high&limit=50",
              "host": ["{{baseUrl}}"],
              "path": ["system", "activities", "security", "{{workspaceId}}"],
              "query": [
                {
                  "key": "severity",
                  "value": "high"
                },
                {
                  "key": "limit",
                  "value": "50"
                }
              ]
            },
            "description": "Get security events for workspace"
          },
          "response": []
        },
        {
          "name": "Get Compliance Report",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/system/activities/compliance/{{workspaceId}}?period=month",
              "host": ["{{baseUrl}}"],
              "path": ["system", "activities", "compliance", "{{workspaceId}}"],
              "query": [
                {
                  "key": "period",
                  "value": "month"
                }
              ]
            },
            "description": "Get compliance report for workspace"
          },
          "response": []
        },
        {
          "name": "Export Audit Data",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/system/activities/export/{{workspaceId}}?format=json&type=audit&startDate=2024-01-01&endDate=2024-12-31",
              "host": ["{{baseUrl}}"],
              "path": ["system", "activities", "export", "{{workspaceId}}"],
              "query": [
                {
                  "key": "format",
                  "value": "json"
                },
                {
                  "key": "type",
                  "value": "audit"
                },
                {
                  "key": "startDate",
                  "value": "2024-01-01"
                },
                {
                  "key": "endDate",
                  "value": "2024-12-31"
                }
              ]
            },
            "description": "Export audit data in various formats"
          },
          "response": []
        },
        {
          "name": "Get Activity Heatmap",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/system/activities/heatmap/{{workspaceId}}?period=month",
              "host": ["{{baseUrl}}"],
              "path": ["system", "activities", "heatmap", "{{workspaceId}}"],
              "query": [
                {
                  "key": "period",
                  "value": "month"
                }
              ]
            },
            "description": "Get activity heatmap data for visualization"
          },
          "response": []
        },
        {
          "name": "Get Analytics Dashboard",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/system/analytics/dashboard?workspaceId={{workspaceId}}&period=week",
              "host": ["{{baseUrl}}"],
              "path": ["system", "analytics", "dashboard"],
              "query": [
                {
                  "key": "workspaceId",
                  "value": "{{workspaceId}}"
                },
                {
                  "key": "period",
                  "value": "week"
                }
              ]
            },
            "description": "Get comprehensive analytics dashboard"
          },
          "response": []
        },
        {
          "name": "Get Productivity Analytics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/system/analytics/productivity?workspaceId={{workspaceId}}&period=month",
              "host": ["{{baseUrl}}"],
              "path": ["system", "analytics", "productivity"],
              "query": [
                {
                  "key": "workspaceId",
                  "value": "{{workspaceId}}"
                },
                {
                  "key": "period",
                  "value": "month"
                }
              ]
            },
            "description": "Get productivity analytics and insights"
          },
          "response": []
        },
        {
          "name": "Get Task Analytics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/system/analytics/tasks?workspaceId={{workspaceId}}&period=week",
              "host": ["{{baseUrl}}"],
              "path": ["system", "analytics", "tasks"],
              "query": [
                {
                  "key": "workspaceId",
                  "value": "{{workspaceId}}"
                },
                {
                  "key": "period",
                  "value": "week"
                }
              ]
            },
            "description": "Get task completion and performance analytics"
          },
          "response": []
        },
        {
          "name": "Get Workspace Analytics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/system/analytics/workspace?workspaceId={{workspaceId}}&period=month",
              "host": ["{{baseUrl}}"],
              "path": ["system", "analytics", "workspace"],
              "query": [
                {
                  "key": "workspaceId",
                  "value": "{{workspaceId}}"
                },
                {
                  "key": "period",
                  "value": "month"
                }
              ]
            },
            "description": "Get comprehensive workspace analytics"
          },
          "response": []
        },
        {
          "name": "Export Analytics Data",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/system/analytics/export?workspaceId={{workspaceId}}&format=csv&period=month",
              "host": ["{{baseUrl}}"],
              "path": ["system", "analytics", "export"],
              "query": [
                {
                  "key": "workspaceId",
                  "value": "{{workspaceId}}"
                },
                {
                  "key": "format",
                  "value": "csv"
                },
                {
                  "key": "period",
                  "value": "month"
                }
              ]
            },
            "description": "Export analytics data in various formats"
          },
          "response": []
        },
        {
          "name": "Get Dashboard Data",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/system/dashboard/{{workspaceId}}",
              "host": ["{{baseUrl}}"],
              "path": ["system", "dashboard", "{{workspaceId}}"]
            },
            "description": "Get main dashboard data with metrics and activity feed"
          },
          "response": []
        },
        {
          "name": "Get Activity Analytics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/system/activities/analytics/{{workspaceId}}?period=week",
              "host": ["{{baseUrl}}"],
              "path": ["system", "activities", "analytics", "{{workspaceId}}"],
              "query": [
                {
                  "key": "period",
                  "value": "week"
                }
              ]
            },
            "description": "Get detailed activity analytics and trends"
          },
          "response": []
        }
      ]
    }
  ]
}
